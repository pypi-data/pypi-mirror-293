# generated by datamodel-codegen:
#   filename:  entity/services/connections/database/icebergConnection.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field

from .. import connectionBasicType
from .iceberg import icebergCatalog


class IcebergType(Enum):
    Iceberg = 'Iceberg'


class IcebergConnection(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[IcebergType] = Field(
        IcebergType.Iceberg, description='Service Type', title='Service Type'
    )
    catalog: icebergCatalog.IcebergCatalog
    ownershipProperty: Optional[str] = Field(
        'owner',
        description='Table property to look for the Owner.',
        title='Ownership Property',
    )
    supportsMetadataExtraction: Optional[
        connectionBasicType.SupportsMetadataExtraction
    ] = Field(None, title='Supports Metadata Extraction')
