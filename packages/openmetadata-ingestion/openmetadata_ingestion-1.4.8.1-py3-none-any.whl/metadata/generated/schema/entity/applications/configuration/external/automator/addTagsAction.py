# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/external/automator/addTagsAction.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Extra, Field

from ......type import basic, tagLabel


class AddTagsActionType(Enum):
    AddTagsAction = 'AddTagsAction'


class AddTagsAction(BaseModel):
    class Config:
        extra = Extra.forbid

    type: AddTagsActionType = Field(
        ..., description='Application Type', title='Application Type'
    )
    tags: List[tagLabel.TagLabel] = Field(..., description='Tags to apply')
    applyToChildren: Optional[List[basic.EntityName]] = Field(
        None,
        description='Apply tags to the children of the selected assets that match the criteria. E.g., columns, tasks, topic fields,...',
        title='Apply to Children',
    )
    overwriteMetadata: Optional[bool] = Field(
        False,
        description='Update tags even if they are already defined in the asset. By default, incoming tags are merged with the existing ones.',
        title='Overwrite Metadata',
    )
