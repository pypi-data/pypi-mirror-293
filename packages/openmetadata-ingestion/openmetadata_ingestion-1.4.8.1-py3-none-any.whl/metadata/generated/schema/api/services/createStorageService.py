# generated by datamodel-codegen:
#   filename:  api/services/createStorageService.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field

from ...entity.services import storageService
from ...type import basic, entityReference, tagLabel


class CreateStorageServiceRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    name: basic.EntityName = Field(
        ..., description='Name that identifies the this entity instance uniquely'
    )
    displayName: Optional[str] = Field(
        None,
        description='Display Name that identifies this storage service. It could be title or label from the source services.',
    )
    description: Optional[basic.Markdown] = Field(
        None, description='Description of storage service entity.'
    )
    serviceType: storageService.StorageServiceType
    connection: Optional[storageService.StorageConnection] = None
    tags: Optional[List[tagLabel.TagLabel]] = Field(
        None, description='Tags for this Object Store Service.'
    )
    owner: Optional[entityReference.EntityReference] = Field(
        None, description='Owner of this object store service.'
    )
    dataProducts: Optional[List[basic.FullyQualifiedEntityName]] = Field(
        None,
        description='List of fully qualified names of data products this entity is part of.',
    )
    domain: Optional[str] = Field(
        None,
        description='Fully qualified name of the domain the Storage Service belongs to.',
    )
