# generated by datamodel-codegen:
#   filename:  api/feed/threadCount.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field, conint

from ...type import basic


class CountOfThreadsRelatedToAnEntity(BaseModel):
    class Config:
        extra = Extra.forbid

    conversationCount: Optional[conint(ge=0)] = Field(
        None, description='Total count of all the threads of type Conversation.'
    )
    openTaskCount: Optional[conint(ge=0)] = Field(
        None, description='Total count of all the open tasks.'
    )
    closedTaskCount: Optional[conint(ge=0)] = Field(
        None, description='Total count of all the tasks.'
    )
    totalTaskCount: Optional[conint(ge=0)] = Field(
        None, description='Total count of all the tasks.'
    )
    mentionCount: Optional[conint(ge=0)] = Field(
        None, description='Total count of all the mentions of a user.'
    )
    entityLink: Optional[basic.EntityLink] = None
