# generated by datamodel-codegen:
#   filename:  metadataIngestion/applicationPipeline.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field

from ..entity.applications.configuration import applicationConfig


class ApplicationConfigType(Enum):
    Application = 'Application'


class ApplicationPipeline(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[ApplicationConfigType] = Field(
        ApplicationConfigType.Application, description='Pipeline type'
    )
    sourcePythonClass: Optional[str] = Field(
        None, description='Source Python Class Name to run the application'
    )
    appConfig: Optional[applicationConfig.AppConfig] = Field(
        None, description='Application configuration'
    )
    appPrivateConfig: Optional[applicationConfig.PrivateConfig] = Field(
        None, description='Application private configuration'
    )
