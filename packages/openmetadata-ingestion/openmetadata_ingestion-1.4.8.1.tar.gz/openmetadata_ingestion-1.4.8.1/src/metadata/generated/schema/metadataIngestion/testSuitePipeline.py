# generated by datamodel-codegen:
#   filename:  metadataIngestion/testSuitePipeline.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field

from ..entity.data import table
from ..type import basic


class TestSuiteConfigType(Enum):
    TestSuite = 'TestSuite'


class TestSuitePipeline(BaseModel):
    class Config:
        extra = Extra.forbid

    type: TestSuiteConfigType = Field(..., description='Pipeline type')
    entityFullyQualifiedName: basic.FullyQualifiedEntityName = Field(
        ..., description='Fully qualified name of the entity to be tested.'
    )
    profileSample: Optional[float] = Field(
        None,
        description='Percentage of data or no. of rows we want to execute the profiler and tests on',
        title='Profile Sample',
    )
    profileSampleType: Optional[table.ProfileSampleType] = Field(
        table.ProfileSampleType.PERCENTAGE, title='Profile Sample Type'
    )
