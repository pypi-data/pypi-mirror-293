# generated by datamodel-codegen:
#   filename:  api/feed/createSuggestion.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field

from ...entity.feed import suggestion
from ...type import basic, tagLabel


class CreateSuggestionRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Optional[str] = Field(
        None,
        description='Message in Markdown format. See markdown support for more details.',
    )
    tagLabels: Optional[List[tagLabel.TagLabel]] = Field(
        None, description='Tags or Glossary Terms.'
    )
    type: Optional[suggestion.SuggestionType] = None
    entityLink: Optional[basic.EntityLink] = Field(
        None,
        description='Data asset about which this thread is created for with format <#E::{entities}::{entityName}::{field}::{fieldValue}.',
    )
