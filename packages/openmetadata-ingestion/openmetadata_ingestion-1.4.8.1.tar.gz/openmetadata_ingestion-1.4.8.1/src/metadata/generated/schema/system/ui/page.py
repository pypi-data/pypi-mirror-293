# generated by datamodel-codegen:
#   filename:  system/ui/page.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel, Extra, Field

from ...type import entityReference, entityReferenceList


class EntityType(Enum):
    Page = 'Page'


class PageType(Enum):
    LandingPage = 'LandingPage'
    TableLandingPage = 'TableLandingPage'
    StoredProcedureLandingPage = 'StoredProcedureLandingPage'
    DatabaseLandingPage = 'DatabaseLandingPage'
    DatabaseSchemaLandingPage = 'DatabaseSchemaLandingPage'
    TopicLandingPage = 'TopicLandingPage'
    PipelineLandingPage = 'PipelineLandingPage'
    DashboardLandingPage = 'DashboardLandingPage'
    DashboardDataModelLandingPage = 'DashboardDataModelLandingPage'
    ContainerLandingPage = 'ContainerLandingPage'
    SearchIndexLandingPage = 'SearchIndexLandingPage'
    GlossaryLandingPage = 'GlossaryLandingPage'
    GlossaryTermLandingPage = 'GlossaryTermLandingPage'
    DomainLandingPage = 'DomainLandingPage'


class Team(BaseModel):
    class Config:
        extra = Extra.forbid

    entityType: EntityType = Field(..., description='Entity Type.')
    pageType: PageType
    layout: Dict[str, Any] = Field(
        ..., description='Configuration for the Knowledge Panel.'
    )
    persona: Optional[entityReference.EntityReference] = Field(
        None, description='Persona this page belongs to.'
    )
    domain: Optional[entityReference.EntityReference] = Field(
        None, description='Domain this page belongs to.'
    )
    knowledgePanels: entityReferenceList.EntityReferenceList = Field(
        ..., description='KnowledgePanels that are part of this Page.'
    )
