# generated by datamodel-codegen:
#   filename:  security/credentials/gitCredentials.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from pydantic import BaseModel, Field

from metadata.ingestion.models.custom_pydantic import CustomSecretStr


class GitCredentials(BaseModel):
    pass


class RepositoryOwner(BaseModel):
    __root__: str = Field(
        ...,
        description='The owner (user or organization) of a Git repository. For example, in https://github.com/open-metadata/OpenMetadata, the owner is `open-metadata`.',
        title='Repository Owner',
    )


class RepositoryName(BaseModel):
    __root__: str = Field(
        ...,
        description='The name of a Git repository. For example, in https://github.com/open-metadata/OpenMetadata, the name is `OpenMetadata`.',
        title='Repository Name',
    )


class Token(BaseModel):
    __root__: CustomSecretStr = Field(
        ...,
        description="Token to use the API. This is required for private repositories and to ensure we don't hit API limits.",
        title='API Token',
    )
