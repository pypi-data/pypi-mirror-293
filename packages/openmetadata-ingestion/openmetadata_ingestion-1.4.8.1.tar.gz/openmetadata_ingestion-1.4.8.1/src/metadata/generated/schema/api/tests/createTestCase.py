# generated by datamodel-codegen:
#   filename:  api/tests/createTestCase.json
#   timestamp: 2024-08-29T11:04:13+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field

from ...tests import testCase
from ...type import basic, entityReference


class CreateTestCaseRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    name: basic.TestCaseEntityName = Field(
        ..., description='Name that identifies this test case.'
    )
    description: Optional[basic.Markdown] = Field(
        None, description='Description of the testcase.'
    )
    displayName: Optional[str] = Field(
        None, description='Display Name that identifies this test.'
    )
    testDefinition: basic.FullyQualifiedEntityName = Field(
        ..., description='Fully qualified name of the test definition.'
    )
    entityLink: basic.EntityLink
    testSuite: basic.FullyQualifiedEntityName = Field(
        ..., description='Fully qualified name of the testSuite'
    )
    parameterValues: Optional[List[testCase.TestCaseParameterValue]] = None
    owner: Optional[entityReference.EntityReference] = Field(
        None, description='Owner of this test'
    )
    computePassedFailedRowCount: Optional[bool] = Field(
        False, description='Compute the passed and failed row count for the test case.'
    )
