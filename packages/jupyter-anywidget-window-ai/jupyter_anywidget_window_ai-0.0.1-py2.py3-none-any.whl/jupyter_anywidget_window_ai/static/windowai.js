var p=`<div class="windowai-app-container">

    <h1><tt>windowai</tt></h1>
    <div>Jupyter Widget to access in-browser LLM via  <tt>window.ai</tt>tt></tt></div>
    <div title="response" class="response-div"></div>
</div>`;function u(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){let o=Math.random()*16|0;return(t==="x"?o:o&3|8).toString(16)})}function c(t,o,a=!1){let n=document.createElement("div");n.innerHTML=o;let i=u();n.id=i,a&&(n.style="display: none; visibility: hidden;"),t.appendChild(n)}async function l({model:t,el:o}){let a=t.get("headless");c(o,p,a);let n=o.querySelector('div[title="response"]'),i=null;t.on("change:output",()=>{n.textContent=t.get("output")}),t.on("msg:custom",async e=>{if(!i)try{i=await window.ai.assistant.create({systemPrompt:t.get("system_prompt"),initialPrompts:t.get("initial_prompts")})}catch(r){console.error("Failed to create AI session:",r),s("Error: Failed to create AI session",e.request_id);return}if(e.action==="prompt")try{n.textContent="[Processing prompt...]";let r=await i.prompt(e.message);s(r,e.request_id)}catch(r){console.error("Error getting AI response:",r),s("Error: "+r.message,e.request_id)}else if(e.action==="prompt_streaming")try{let r=await i.promptStreaming(e.message);for await(let x of r)s(x,e.request_id)}catch(r){console.error("Error streaming AI response:",r),s("Error: "+r.message,e.request_id)}else e.action==="destroy"&&(i&&(i.destroy(),i=null),s("Session destroyed",e.request_id))});function s(e,r){t.set("output",e),t.set("_request_id",r),t.save_changes()}}var _={render:l};export{_ as default};
