var d=`<div class="windowai-app-container">

    <h1><tt>windowai</tt></h1>
    <div>Jupyter Widget to access in-browser LLM via  <tt>window.ai</tt></div>
    <div title="system_prompt" class="system-prompt-div">SYSTEM PROMPT:</div>
    <div title="response" class="response-div"></div>
</div>`;function m(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){let n=Math.random()*16|0;return(t==="x"?n:n&3|8).toString(16)})}function l(t,n,a=!1){let r=document.createElement("div");r.innerHTML=n;let p=m();r.id=p,a&&(r.style="display: none; visibility: hidden;"),t.appendChild(r)}function y(t=!0,n=null,a=440,r=1e3,p=.1,s="sine"){if(t){let o=new(window.AudioContext||window.webkitAudioContext),e=o.createOscillator(),i=o.createGain();i.gain.value=p,e.type=s,e.frequency.value=a,e.connect(i),i.connect(o.destination),e.start(),i.gain.exponentialRampToValueAtTime(1e-5,o.currentTime+r/1e3),setTimeout(()=>{e.stop(),n&&setTimeout(()=>{u(n)},100)},r)}else n&&u(n)}var u=t=>{if(t){let n=new SpeechSynthesisUtterance(t);window.speechSynthesis.speak(n)}};async function w({model:t,el:n}){let a=t.get("headless");l(n,d,a);let r=n.querySelector('div[title="system_prompt"]'),p=n.querySelector('div[title="response"]'),s=null;t.on("change:output",()=>{p.textContent=t.get("output")}),t.on("change:system_prompt",()=>{r.textContent=`SYSTEM PROMPT: ${t.get("system_prompt")}`}),t.on("msg:custom",async e=>{if(!s)try{s=await window.ai.assistant.create({systemPrompt:t.get("system_prompt"),initialPrompts:t.get("initial_prompts")})}catch(i){console.error("Failed to create AI session:",i),o("Error: Failed to create AI session",e.request_id);return}if(e.action==="prompt")try{p.textContent="[Processing prompt...]";let i=await s.prompt(e.message),c=t.get("speak_msg")?i:"",x=t.get("completion_tone");o(i,e.request_id,x,c)}catch(i){console.error("Error getting AI response:",i),o("Error: "+i.message,e.request_id)}else if(e.action==="prompt_streaming")try{let i=await s.promptStreaming(e.message);for await(let c of i)o(c,e.request_id)}catch(i){console.error("Error streaming AI response:",i),o("Error: "+i.message,e.request_id)}else e.action==="destroy"&&(s&&(s.destroy(),s=null,t.set("output","[Session closed]"),t.save_changes()),o("[Session destroyed]",e.request_id))});function o(e,i,c=!1,x=""){t.set("output",e),t.set("_request_id",i),t.save_changes(),(c||x)&&y(c,x,1e3,100,.1,"sine")}}var E={render:w};export{E as default};
