Metadata-Version: 2.1
Name: logrich
Version: 1.0.7
Summary: loguru + rich = logrich
License: GPL
Keywords: logger,loguru,rich
Author: Dmitry Mavlin
Author-email: mavlind@list.ru
Requires-Python: >=3.8,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: importlib-metadata (>=5.2.0,<6.0.0)
Requires-Dist: python-dotenv (>=1.0.0,<2.0.0)
Requires-Dist: rich (>=12.4.4,<13.0.0)
Requires-Dist: ruff
Requires-Dist: toml (==0.10.2)
Description-Content-Type: text/markdown

### Логгер

#### Совместная работа [loguru](https://loguru.readthedocs.io) & [rich](https://rich.readthedocs.io).

[Screenshot logger](https://disk.yandex.ru/i/JexFefETxnJavA)  
[Screenshot logger2](https://disk.yandex.ru/i/ubvT0kZbfS-Guw)

![Screenshot logger](wiki/logrich_screenshot.png?raw=True "Screenshot")
----
![Screenshot logger too](wiki/logrich_screenshot2.png?raw=True "Screenshot")

Уровень вывода исключений определяется в переменных окружения.
Цвета, ширины и шаблоны вывода также могут быть определены в окружении.

Обработчики записей логов можно определять дополнительно, например запись в файл или отправка в канал.

#### Использование

смотри [тест](tests/test_1.py) 

#### Как развернуть:

```shell
git clone 
cd logrich
poetry shell
poetry install
# создаём окружение
cp template.env .env
```

#### Запустить тест(ы):

```shell
pytest
# монитор тестов
ptw
```

