{"ast":null,"code":"import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nexport var TreeViewContext = /*#__PURE__*/React.createContext({\n  registerNode: function registerNode() {},\n  unregisterNode: function unregisterNode() {},\n  isFocused: function isFocused() {\n    return false;\n  },\n  isSelected: function isSelected() {\n    return false;\n  },\n  isExpanded: function isExpanded() {\n    return false;\n  },\n  isExpandable: function isExpandable() {\n    return false;\n  },\n  isDisabled: function isDisabled() {\n    return false;\n  },\n  mapFirstChar: function mapFirstChar() {},\n  unMapFirstChar: function unMapFirstChar() {},\n  focus: function focus() {},\n  toggleExpansion: function toggleExpansion() {},\n  selectNode: function selectNode() {},\n  selectRange: function selectRange() {},\n  multiSelect: false,\n  disabledItemsFocusable: false,\n  treeId: undefined,\n  icons: {\n    defaultCollapseIcon: null,\n    defaultExpandIcon: null,\n    defaultParentIcon: null,\n    defaultEndIcon: null\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}","map":{"version":3,"names":["React","TreeViewContext","createContext","registerNode","unregisterNode","isFocused","isSelected","isExpanded","isExpandable","isDisabled","mapFirstChar","unMapFirstChar","focus","toggleExpansion","selectNode","selectRange","multiSelect","disabledItemsFocusable","treeId","undefined","icons","defaultCollapseIcon","defaultExpandIcon","defaultParentIcon","defaultEndIcon","process","env","NODE_ENV","displayName"],"sources":["/home/runner/work/inference/inference/xinference/web/ui/node_modules/@mui/x-tree-view/TreeView/TreeViewContext.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nexport const TreeViewContext = /*#__PURE__*/React.createContext({\n  registerNode: () => {},\n  unregisterNode: () => {},\n  isFocused: () => false,\n  isSelected: () => false,\n  isExpanded: () => false,\n  isExpandable: () => false,\n  isDisabled: () => false,\n  mapFirstChar: () => {},\n  unMapFirstChar: () => {},\n  focus: () => {},\n  toggleExpansion: () => {},\n  selectNode: () => {},\n  selectRange: () => {},\n  multiSelect: false,\n  disabledItemsFocusable: false,\n  treeId: undefined,\n  icons: {\n    defaultCollapseIcon: null,\n    defaultExpandIcon: null,\n    defaultParentIcon: null,\n    defaultEndIcon: null\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA,OAAO,IAAMC,eAAe,GAAG,aAAaD,KAAK,CAACE,aAAa,CAAC;EAC9DC,YAAY,EAAE,SAAAA,aAAA,EAAM,CAAC,CAAC;EACtBC,cAAc,EAAE,SAAAA,eAAA,EAAM,CAAC,CAAC;EACxBC,SAAS,EAAE,SAAAA,UAAA;IAAA,OAAM,KAAK;EAAA;EACtBC,UAAU,EAAE,SAAAA,WAAA;IAAA,OAAM,KAAK;EAAA;EACvBC,UAAU,EAAE,SAAAA,WAAA;IAAA,OAAM,KAAK;EAAA;EACvBC,YAAY,EAAE,SAAAA,aAAA;IAAA,OAAM,KAAK;EAAA;EACzBC,UAAU,EAAE,SAAAA,WAAA;IAAA,OAAM,KAAK;EAAA;EACvBC,YAAY,EAAE,SAAAA,aAAA,EAAM,CAAC,CAAC;EACtBC,cAAc,EAAE,SAAAA,eAAA,EAAM,CAAC,CAAC;EACxBC,KAAK,EAAE,SAAAA,MAAA,EAAM,CAAC,CAAC;EACfC,eAAe,EAAE,SAAAA,gBAAA,EAAM,CAAC,CAAC;EACzBC,UAAU,EAAE,SAAAA,WAAA,EAAM,CAAC,CAAC;EACpBC,WAAW,EAAE,SAAAA,YAAA,EAAM,CAAC,CAAC;EACrBC,WAAW,EAAE,KAAK;EAClBC,sBAAsB,EAAE,KAAK;EAC7BC,MAAM,EAAEC,SAAS;EACjBC,KAAK,EAAE;IACLC,mBAAmB,EAAE,IAAI;IACzBC,iBAAiB,EAAE,IAAI;IACvBC,iBAAiB,EAAE,IAAI;IACvBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AACF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC1B,eAAe,CAAC2B,WAAW,GAAG,iBAAiB;AACjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}