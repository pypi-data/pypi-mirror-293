from __future__ import annotations


from pydantic import BaseModel, ConfigDict


class DevIdCertificate(BaseModel):
    model_config = ConfigDict(strict=True, extra='forbid')

    certificate_index: int = ...
    key_index: int = ...

    is_enabled: bool = ...
    is_idevid: bool = ...

    subject_public_key_info: bytes = ...
    certificate: bytes = ...
    certificate_chain: list[bytes] = ...


class DevIdKey(BaseModel):
    model_config = ConfigDict(strict=True, extra='forbid')

    key_index: int = ...
    certificate_indices: list[int] = ...

    is_enabled: bool = ...
    is_idevid_key: bool = ...

    subject_public_key_info: bytes = ...

    private_key: bytes = ...
    public_key: bytes = ...


class Inventory(BaseModel):
    model_config = ConfigDict(strict=True, extra='forbid')

    next_key_index: int = ...
    next_certificate_index: int = ...

    devid_keys: dict[int, DevIdKey] = ...
    devid_certificates: dict[int, DevIdCertificate] = ...

    public_key_fingerprint_mapping: dict[str, int] = ...
    certificate_fingerprint_mapping: dict[str, int] = ...
