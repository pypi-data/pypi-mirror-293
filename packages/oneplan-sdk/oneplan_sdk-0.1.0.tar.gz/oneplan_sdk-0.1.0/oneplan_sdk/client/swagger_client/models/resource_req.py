# coding: utf-8

"""
    OnePlan API

    This is an automatically generated OpenAPI specification for the OnePlan API based on the api help docs.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ResourceReq(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'generic': 'bool',
        'mail': 'str',
        'office365_id': 'GloballyUniqueIdentifier',
        'user_id': 'GloballyUniqueIdentifier',
        'user_only': 'bool',
        'one_plan_security_group': 'GloballyUniqueIdentifier',
        'fields': 'dict(str, Object)'
    }

    attribute_map = {
        'name': 'Name',
        'generic': 'Generic',
        'mail': 'Mail',
        'office365_id': 'Office365Id',
        'user_id': 'UserId',
        'user_only': 'UserOnly',
        'one_plan_security_group': 'OnePlanSecurityGroup',
        'fields': 'Fields'
    }

    def __init__(self, name=None, generic=None, mail=None, office365_id=None, user_id=None, user_only=None, one_plan_security_group=None, fields=None):  # noqa: E501
        """ResourceReq - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._generic = None
        self._mail = None
        self._office365_id = None
        self._user_id = None
        self._user_only = None
        self._one_plan_security_group = None
        self._fields = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if generic is not None:
            self.generic = generic
        if mail is not None:
            self.mail = mail
        if office365_id is not None:
            self.office365_id = office365_id
        if user_id is not None:
            self.user_id = user_id
        if user_only is not None:
            self.user_only = user_only
        if one_plan_security_group is not None:
            self.one_plan_security_group = one_plan_security_group
        if fields is not None:
            self.fields = fields

    @property
    def name(self):
        """Gets the name of this ResourceReq.  # noqa: E501


        :return: The name of this ResourceReq.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResourceReq.


        :param name: The name of this ResourceReq.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def generic(self):
        """Gets the generic of this ResourceReq.  # noqa: E501


        :return: The generic of this ResourceReq.  # noqa: E501
        :rtype: bool
        """
        return self._generic

    @generic.setter
    def generic(self, generic):
        """Sets the generic of this ResourceReq.


        :param generic: The generic of this ResourceReq.  # noqa: E501
        :type: bool
        """

        self._generic = generic

    @property
    def mail(self):
        """Gets the mail of this ResourceReq.  # noqa: E501


        :return: The mail of this ResourceReq.  # noqa: E501
        :rtype: str
        """
        return self._mail

    @mail.setter
    def mail(self, mail):
        """Sets the mail of this ResourceReq.


        :param mail: The mail of this ResourceReq.  # noqa: E501
        :type: str
        """

        self._mail = mail

    @property
    def office365_id(self):
        """Gets the office365_id of this ResourceReq.  # noqa: E501


        :return: The office365_id of this ResourceReq.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._office365_id

    @office365_id.setter
    def office365_id(self, office365_id):
        """Sets the office365_id of this ResourceReq.


        :param office365_id: The office365_id of this ResourceReq.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._office365_id = office365_id

    @property
    def user_id(self):
        """Gets the user_id of this ResourceReq.  # noqa: E501


        :return: The user_id of this ResourceReq.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ResourceReq.


        :param user_id: The user_id of this ResourceReq.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._user_id = user_id

    @property
    def user_only(self):
        """Gets the user_only of this ResourceReq.  # noqa: E501


        :return: The user_only of this ResourceReq.  # noqa: E501
        :rtype: bool
        """
        return self._user_only

    @user_only.setter
    def user_only(self, user_only):
        """Sets the user_only of this ResourceReq.


        :param user_only: The user_only of this ResourceReq.  # noqa: E501
        :type: bool
        """

        self._user_only = user_only

    @property
    def one_plan_security_group(self):
        """Gets the one_plan_security_group of this ResourceReq.  # noqa: E501


        :return: The one_plan_security_group of this ResourceReq.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._one_plan_security_group

    @one_plan_security_group.setter
    def one_plan_security_group(self, one_plan_security_group):
        """Sets the one_plan_security_group of this ResourceReq.


        :param one_plan_security_group: The one_plan_security_group of this ResourceReq.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._one_plan_security_group = one_plan_security_group

    @property
    def fields(self):
        """Gets the fields of this ResourceReq.  # noqa: E501


        :return: The fields of this ResourceReq.  # noqa: E501
        :rtype: dict(str, Object)
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this ResourceReq.


        :param fields: The fields of this ResourceReq.  # noqa: E501
        :type: dict(str, Object)
        """

        self._fields = fields

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResourceReq, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResourceReq):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
