# coding: utf-8

"""
    OnePlan API

    This is an automatically generated OpenAPI specification for the OnePlan API based on the api help docs.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AddResourcePost(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'resource_id': 'GloballyUniqueIdentifier',
        'is_team': 'bool',
        'cost_type_id': 'GloballyUniqueIdentifier',
        'parent_id': 'GloballyUniqueIdentifier',
        'zoom': 'Zoom',
        'start': 'date',
        'end': 'date',
        'public': 'bool'
    }

    attribute_map = {
        'resource_id': 'ResourceId',
        'is_team': 'IsTeam',
        'cost_type_id': 'CostTypeId',
        'parent_id': 'ParentId',
        'zoom': 'Zoom',
        'start': 'Start',
        'end': 'End',
        'public': 'Public'
    }

    def __init__(self, resource_id=None, is_team=None, cost_type_id=None, parent_id=None, zoom=None, start=None, end=None, public=None):  # noqa: E501
        """AddResourcePost - a model defined in Swagger"""  # noqa: E501
        self._resource_id = None
        self._is_team = None
        self._cost_type_id = None
        self._parent_id = None
        self._zoom = None
        self._start = None
        self._end = None
        self._public = None
        self.discriminator = None
        if resource_id is not None:
            self.resource_id = resource_id
        if is_team is not None:
            self.is_team = is_team
        if cost_type_id is not None:
            self.cost_type_id = cost_type_id
        if parent_id is not None:
            self.parent_id = parent_id
        if zoom is not None:
            self.zoom = zoom
        if start is not None:
            self.start = start
        if end is not None:
            self.end = end
        if public is not None:
            self.public = public

    @property
    def resource_id(self):
        """Gets the resource_id of this AddResourcePost.  # noqa: E501


        :return: The resource_id of this AddResourcePost.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this AddResourcePost.


        :param resource_id: The resource_id of this AddResourcePost.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._resource_id = resource_id

    @property
    def is_team(self):
        """Gets the is_team of this AddResourcePost.  # noqa: E501


        :return: The is_team of this AddResourcePost.  # noqa: E501
        :rtype: bool
        """
        return self._is_team

    @is_team.setter
    def is_team(self, is_team):
        """Sets the is_team of this AddResourcePost.


        :param is_team: The is_team of this AddResourcePost.  # noqa: E501
        :type: bool
        """

        self._is_team = is_team

    @property
    def cost_type_id(self):
        """Gets the cost_type_id of this AddResourcePost.  # noqa: E501


        :return: The cost_type_id of this AddResourcePost.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._cost_type_id

    @cost_type_id.setter
    def cost_type_id(self, cost_type_id):
        """Sets the cost_type_id of this AddResourcePost.


        :param cost_type_id: The cost_type_id of this AddResourcePost.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._cost_type_id = cost_type_id

    @property
    def parent_id(self):
        """Gets the parent_id of this AddResourcePost.  # noqa: E501


        :return: The parent_id of this AddResourcePost.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this AddResourcePost.


        :param parent_id: The parent_id of this AddResourcePost.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._parent_id = parent_id

    @property
    def zoom(self):
        """Gets the zoom of this AddResourcePost.  # noqa: E501


        :return: The zoom of this AddResourcePost.  # noqa: E501
        :rtype: Zoom
        """
        return self._zoom

    @zoom.setter
    def zoom(self, zoom):
        """Sets the zoom of this AddResourcePost.


        :param zoom: The zoom of this AddResourcePost.  # noqa: E501
        :type: Zoom
        """

        self._zoom = zoom

    @property
    def start(self):
        """Gets the start of this AddResourcePost.  # noqa: E501


        :return: The start of this AddResourcePost.  # noqa: E501
        :rtype: date
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this AddResourcePost.


        :param start: The start of this AddResourcePost.  # noqa: E501
        :type: date
        """

        self._start = start

    @property
    def end(self):
        """Gets the end of this AddResourcePost.  # noqa: E501


        :return: The end of this AddResourcePost.  # noqa: E501
        :rtype: date
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this AddResourcePost.


        :param end: The end of this AddResourcePost.  # noqa: E501
        :type: date
        """

        self._end = end

    @property
    def public(self):
        """Gets the public of this AddResourcePost.  # noqa: E501


        :return: The public of this AddResourcePost.  # noqa: E501
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this AddResourcePost.


        :param public: The public of this AddResourcePost.  # noqa: E501
        :type: bool
        """

        self._public = public

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AddResourcePost, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AddResourcePost):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
