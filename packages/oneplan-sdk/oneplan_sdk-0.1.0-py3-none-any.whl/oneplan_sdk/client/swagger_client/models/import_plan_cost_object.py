# coding: utf-8

"""
    OnePlan API

    This is an automatically generated OpenAPI specification for the OnePlan API based on the api help docs.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ImportPlanCostObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'plan_external_id': 'str',
        'cost_type_id': 'GloballyUniqueIdentifier',
        'cost_type_name': 'str',
        'custom_categories': 'list[ImportCostCustom]',
        'costs': 'list[ImportCostObject]',
        'fields': 'list[ImportCostFields]',
        'delete': 'ImportDeleteCosts'
    }

    attribute_map = {
        'plan_external_id': 'PlanExternalId',
        'cost_type_id': 'CostTypeId',
        'cost_type_name': 'CostTypeName',
        'custom_categories': 'CustomCategories',
        'costs': 'Costs',
        'fields': 'Fields',
        'delete': 'Delete'
    }

    def __init__(self, plan_external_id=None, cost_type_id=None, cost_type_name=None, custom_categories=None, costs=None, fields=None, delete=None):  # noqa: E501
        """ImportPlanCostObject - a model defined in Swagger"""  # noqa: E501
        self._plan_external_id = None
        self._cost_type_id = None
        self._cost_type_name = None
        self._custom_categories = None
        self._costs = None
        self._fields = None
        self._delete = None
        self.discriminator = None
        if plan_external_id is not None:
            self.plan_external_id = plan_external_id
        if cost_type_id is not None:
            self.cost_type_id = cost_type_id
        if cost_type_name is not None:
            self.cost_type_name = cost_type_name
        if custom_categories is not None:
            self.custom_categories = custom_categories
        if costs is not None:
            self.costs = costs
        if fields is not None:
            self.fields = fields
        if delete is not None:
            self.delete = delete

    @property
    def plan_external_id(self):
        """Gets the plan_external_id of this ImportPlanCostObject.  # noqa: E501


        :return: The plan_external_id of this ImportPlanCostObject.  # noqa: E501
        :rtype: str
        """
        return self._plan_external_id

    @plan_external_id.setter
    def plan_external_id(self, plan_external_id):
        """Sets the plan_external_id of this ImportPlanCostObject.


        :param plan_external_id: The plan_external_id of this ImportPlanCostObject.  # noqa: E501
        :type: str
        """

        self._plan_external_id = plan_external_id

    @property
    def cost_type_id(self):
        """Gets the cost_type_id of this ImportPlanCostObject.  # noqa: E501


        :return: The cost_type_id of this ImportPlanCostObject.  # noqa: E501
        :rtype: GloballyUniqueIdentifier
        """
        return self._cost_type_id

    @cost_type_id.setter
    def cost_type_id(self, cost_type_id):
        """Sets the cost_type_id of this ImportPlanCostObject.


        :param cost_type_id: The cost_type_id of this ImportPlanCostObject.  # noqa: E501
        :type: GloballyUniqueIdentifier
        """

        self._cost_type_id = cost_type_id

    @property
    def cost_type_name(self):
        """Gets the cost_type_name of this ImportPlanCostObject.  # noqa: E501


        :return: The cost_type_name of this ImportPlanCostObject.  # noqa: E501
        :rtype: str
        """
        return self._cost_type_name

    @cost_type_name.setter
    def cost_type_name(self, cost_type_name):
        """Sets the cost_type_name of this ImportPlanCostObject.


        :param cost_type_name: The cost_type_name of this ImportPlanCostObject.  # noqa: E501
        :type: str
        """

        self._cost_type_name = cost_type_name

    @property
    def custom_categories(self):
        """Gets the custom_categories of this ImportPlanCostObject.  # noqa: E501


        :return: The custom_categories of this ImportPlanCostObject.  # noqa: E501
        :rtype: list[ImportCostCustom]
        """
        return self._custom_categories

    @custom_categories.setter
    def custom_categories(self, custom_categories):
        """Sets the custom_categories of this ImportPlanCostObject.


        :param custom_categories: The custom_categories of this ImportPlanCostObject.  # noqa: E501
        :type: list[ImportCostCustom]
        """

        self._custom_categories = custom_categories

    @property
    def costs(self):
        """Gets the costs of this ImportPlanCostObject.  # noqa: E501


        :return: The costs of this ImportPlanCostObject.  # noqa: E501
        :rtype: list[ImportCostObject]
        """
        return self._costs

    @costs.setter
    def costs(self, costs):
        """Sets the costs of this ImportPlanCostObject.


        :param costs: The costs of this ImportPlanCostObject.  # noqa: E501
        :type: list[ImportCostObject]
        """

        self._costs = costs

    @property
    def fields(self):
        """Gets the fields of this ImportPlanCostObject.  # noqa: E501


        :return: The fields of this ImportPlanCostObject.  # noqa: E501
        :rtype: list[ImportCostFields]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this ImportPlanCostObject.


        :param fields: The fields of this ImportPlanCostObject.  # noqa: E501
        :type: list[ImportCostFields]
        """

        self._fields = fields

    @property
    def delete(self):
        """Gets the delete of this ImportPlanCostObject.  # noqa: E501


        :return: The delete of this ImportPlanCostObject.  # noqa: E501
        :rtype: ImportDeleteCosts
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this ImportPlanCostObject.


        :param delete: The delete of this ImportPlanCostObject.  # noqa: E501
        :type: ImportDeleteCosts
        """

        self._delete = delete

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ImportPlanCostObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ImportPlanCostObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
