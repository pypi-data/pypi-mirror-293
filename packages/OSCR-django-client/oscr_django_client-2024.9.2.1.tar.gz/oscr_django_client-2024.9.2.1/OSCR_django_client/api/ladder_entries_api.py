# coding: utf-8

"""
    OSCR API

    OSCR API

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from OSCR_django_client.models.ladder_entries_list200_response import LadderEntriesList200Response
from OSCR_django_client.models.ladder_entry import LadderEntry

from OSCR_django_client.api_client import ApiClient, RequestSerialized
from OSCR_django_client.api_response import ApiResponse
from OSCR_django_client.rest import RESTResponseType


class LadderEntriesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def ladder_entries_list(
        self,
        player: Annotated[Optional[StrictStr], Field(description="player")] = None,
        player__iexact: Annotated[Optional[StrictStr], Field(description="player__iexact")] = None,
        player__contains: Annotated[Optional[StrictStr], Field(description="player__contains")] = None,
        player__icontains: Annotated[Optional[StrictStr], Field(description="player__icontains")] = None,
        player__istartswith: Annotated[Optional[StrictStr], Field(description="player__istartswith")] = None,
        player__startswith: Annotated[Optional[StrictStr], Field(description="player__startswith")] = None,
        player__endswith: Annotated[Optional[StrictStr], Field(description="player__endswith")] = None,
        player__iendswith: Annotated[Optional[StrictStr], Field(description="player__iendswith")] = None,
        player__iregex: Annotated[Optional[StrictStr], Field(description="player__iregex")] = None,
        player__regex: Annotated[Optional[StrictStr], Field(description="player__regex")] = None,
        ladder: Annotated[Optional[StrictStr], Field(description="ladder")] = None,
        ladder__name: Annotated[Optional[StrictStr], Field(description="ladder__name")] = None,
        ladder__name__iexact: Annotated[Optional[StrictStr], Field(description="ladder__name__iexact")] = None,
        ladder__name__contains: Annotated[Optional[StrictStr], Field(description="ladder__name__contains")] = None,
        ladder__name__icontains: Annotated[Optional[StrictStr], Field(description="ladder__name__icontains")] = None,
        ladder__name__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__name__istartswith")] = None,
        ladder__name__startswith: Annotated[Optional[StrictStr], Field(description="ladder__name__startswith")] = None,
        ladder__name__endswith: Annotated[Optional[StrictStr], Field(description="ladder__name__endswith")] = None,
        ladder__name__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__name__iendswith")] = None,
        ladder__name__iregex: Annotated[Optional[StrictStr], Field(description="ladder__name__iregex")] = None,
        ladder__name__regex: Annotated[Optional[StrictStr], Field(description="ladder__name__regex")] = None,
        ladder__difficulty: Annotated[Optional[StrictStr], Field(description="ladder__difficulty")] = None,
        ladder__difficulty__iexact: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iexact")] = None,
        ladder__difficulty__contains: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__contains")] = None,
        ladder__difficulty__icontains: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__icontains")] = None,
        ladder__difficulty__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__istartswith")] = None,
        ladder__difficulty__startswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__startswith")] = None,
        ladder__difficulty__endswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__endswith")] = None,
        ladder__difficulty__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iendswith")] = None,
        ladder__difficulty__iregex: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iregex")] = None,
        ladder__difficulty__regex: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__regex")] = None,
        ladder__variant__name: Annotated[Optional[StrictStr], Field(description="ladder__variant__name")] = None,
        ladder__variant__name__iexact: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iexact")] = None,
        ladder__variant__name__contains: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__contains")] = None,
        ladder__variant__name__icontains: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__icontains")] = None,
        ladder__variant__name__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__istartswith")] = None,
        ladder__variant__name__startswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__startswith")] = None,
        ladder__variant__name__endswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__endswith")] = None,
        ladder__variant__name__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iendswith")] = None,
        ladder__variant__name__iregex: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iregex")] = None,
        ladder__variant__name__regex: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__regex")] = None,
        ladder__is_solo: Annotated[Optional[StrictStr], Field(description="ladder__is_solo")] = None,
        data__dps__lt: Annotated[Optional[StrictStr], Field(description="data__DPS__lt")] = None,
        data__dps__gt: Annotated[Optional[StrictStr], Field(description="data__DPS__gt")] = None,
        data__dps__lte: Annotated[Optional[StrictStr], Field(description="data__DPS__lte")] = None,
        data__dps__gte: Annotated[Optional[StrictStr], Field(description="data__DPS__gte")] = None,
        data__dps: Annotated[Optional[StrictStr], Field(description="data__DPS")] = None,
        data__name__exact: Annotated[Optional[StrictStr], Field(description="data__name__exact")] = None,
        data__name__iexact: Annotated[Optional[StrictStr], Field(description="data__name__iexact")] = None,
        data__name__contains: Annotated[Optional[StrictStr], Field(description="data__name__contains")] = None,
        data__name__icontains: Annotated[Optional[StrictStr], Field(description="data__name__icontains")] = None,
        data__name__istartswith: Annotated[Optional[StrictStr], Field(description="data__name__istartswith")] = None,
        data__name__startswith: Annotated[Optional[StrictStr], Field(description="data__name__startswith")] = None,
        data__name__endswith: Annotated[Optional[StrictStr], Field(description="data__name__endswith")] = None,
        data__name__iendswith: Annotated[Optional[StrictStr], Field(description="data__name__iendswith")] = None,
        data__name__iregex: Annotated[Optional[StrictStr], Field(description="data__name__iregex")] = None,
        data__name__regex: Annotated[Optional[StrictStr], Field(description="data__name__regex")] = None,
        data__name: Annotated[Optional[StrictStr], Field(description="data__name")] = None,
        data__deaths__lt: Annotated[Optional[StrictStr], Field(description="data__deaths__lt")] = None,
        data__deaths__gt: Annotated[Optional[StrictStr], Field(description="data__deaths__gt")] = None,
        data__deaths__lte: Annotated[Optional[StrictStr], Field(description="data__deaths__lte")] = None,
        data__deaths__gte: Annotated[Optional[StrictStr], Field(description="data__deaths__gte")] = None,
        data__deaths: Annotated[Optional[StrictStr], Field(description="data__deaths")] = None,
        data__debuff__lt: Annotated[Optional[StrictStr], Field(description="data__debuff__lt")] = None,
        data__debuff__gt: Annotated[Optional[StrictStr], Field(description="data__debuff__gt")] = None,
        data__debuff__lte: Annotated[Optional[StrictStr], Field(description="data__debuff__lte")] = None,
        data__debuff__gte: Annotated[Optional[StrictStr], Field(description="data__debuff__gte")] = None,
        data__debuff: Annotated[Optional[StrictStr], Field(description="data__debuff")] = None,
        data__handle__exact: Annotated[Optional[StrictStr], Field(description="data__handle__exact")] = None,
        data__handle__iexact: Annotated[Optional[StrictStr], Field(description="data__handle__iexact")] = None,
        data__handle__contains: Annotated[Optional[StrictStr], Field(description="data__handle__contains")] = None,
        data__handle__icontains: Annotated[Optional[StrictStr], Field(description="data__handle__icontains")] = None,
        data__handle__istartswith: Annotated[Optional[StrictStr], Field(description="data__handle__istartswith")] = None,
        data__handle__startswith: Annotated[Optional[StrictStr], Field(description="data__handle__startswith")] = None,
        data__handle__endswith: Annotated[Optional[StrictStr], Field(description="data__handle__endswith")] = None,
        data__handle__iendswith: Annotated[Optional[StrictStr], Field(description="data__handle__iendswith")] = None,
        data__handle__iregex: Annotated[Optional[StrictStr], Field(description="data__handle__iregex")] = None,
        data__handle__regex: Annotated[Optional[StrictStr], Field(description="data__handle__regex")] = None,
        data__handle: Annotated[Optional[StrictStr], Field(description="data__handle")] = None,
        data__misses__lt: Annotated[Optional[StrictStr], Field(description="data__misses__lt")] = None,
        data__misses__gt: Annotated[Optional[StrictStr], Field(description="data__misses__gt")] = None,
        data__misses__lte: Annotated[Optional[StrictStr], Field(description="data__misses__lte")] = None,
        data__misses__gte: Annotated[Optional[StrictStr], Field(description="data__misses__gte")] = None,
        data__misses: Annotated[Optional[StrictStr], Field(description="data__misses")] = None,
        data__crit_num__lt: Annotated[Optional[StrictStr], Field(description="data__crit_num__lt")] = None,
        data__crit_num__gt: Annotated[Optional[StrictStr], Field(description="data__crit_num__gt")] = None,
        data__crit_num__lte: Annotated[Optional[StrictStr], Field(description="data__crit_num__lte")] = None,
        data__crit_num__gte: Annotated[Optional[StrictStr], Field(description="data__crit_num__gte")] = None,
        data__crit_num: Annotated[Optional[StrictStr], Field(description="data__crit_num")] = None,
        data__heal_num__lt: Annotated[Optional[StrictStr], Field(description="data__heal_num__lt")] = None,
        data__heal_num__gt: Annotated[Optional[StrictStr], Field(description="data__heal_num__gt")] = None,
        data__heal_num__lte: Annotated[Optional[StrictStr], Field(description="data__heal_num__lte")] = None,
        data__heal_num__gte: Annotated[Optional[StrictStr], Field(description="data__heal_num__gte")] = None,
        data__heal_num: Annotated[Optional[StrictStr], Field(description="data__heal_num")] = None,
        data__heal_share__lt: Annotated[Optional[StrictStr], Field(description="data__heal_share__lt")] = None,
        data__heal_share__gt: Annotated[Optional[StrictStr], Field(description="data__heal_share__gt")] = None,
        data__heal_share__lte: Annotated[Optional[StrictStr], Field(description="data__heal_share__lte")] = None,
        data__heal_share__gte: Annotated[Optional[StrictStr], Field(description="data__heal_share__gte")] = None,
        data__heal_share: Annotated[Optional[StrictStr], Field(description="data__heal_share")] = None,
        data__combat_time__lt: Annotated[Optional[StrictStr], Field(description="data__combat_time__lt")] = None,
        data__combat_time__gt: Annotated[Optional[StrictStr], Field(description="data__combat_time__gt")] = None,
        data__combat_time__lte: Annotated[Optional[StrictStr], Field(description="data__combat_time__lte")] = None,
        data__combat_time__gte: Annotated[Optional[StrictStr], Field(description="data__combat_time__gte")] = None,
        data__combat_time: Annotated[Optional[StrictStr], Field(description="data__combat_time")] = None,
        data__crit_chance__lt: Annotated[Optional[StrictStr], Field(description="data__crit_chance__lt")] = None,
        data__crit_chance__gt: Annotated[Optional[StrictStr], Field(description="data__crit_chance__gt")] = None,
        data__crit_chance__lte: Annotated[Optional[StrictStr], Field(description="data__crit_chance__lte")] = None,
        data__crit_chance__gte: Annotated[Optional[StrictStr], Field(description="data__crit_chance__gte")] = None,
        data__crit_chance: Annotated[Optional[StrictStr], Field(description="data__crit_chance")] = None,
        data__max_one_hit__lt: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__lt")] = None,
        data__max_one_hit__gt: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__gt")] = None,
        data__max_one_hit__lte: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__lte")] = None,
        data__max_one_hit__gte: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__gte")] = None,
        data__max_one_hit: Annotated[Optional[StrictStr], Field(description="data__max_one_hit")] = None,
        data__total_heals__lt: Annotated[Optional[StrictStr], Field(description="data__total_heals__lt")] = None,
        data__total_heals__gt: Annotated[Optional[StrictStr], Field(description="data__total_heals__gt")] = None,
        data__total_heals__lte: Annotated[Optional[StrictStr], Field(description="data__total_heals__lte")] = None,
        data__total_heals__gte: Annotated[Optional[StrictStr], Field(description="data__total_heals__gte")] = None,
        data__total_heals: Annotated[Optional[StrictStr], Field(description="data__total_heals")] = None,
        data__damage_share__lt: Annotated[Optional[StrictStr], Field(description="data__damage_share__lt")] = None,
        data__damage_share__gt: Annotated[Optional[StrictStr], Field(description="data__damage_share__gt")] = None,
        data__damage_share__lte: Annotated[Optional[StrictStr], Field(description="data__damage_share__lte")] = None,
        data__damage_share__gte: Annotated[Optional[StrictStr], Field(description="data__damage_share__gte")] = None,
        data__damage_share: Annotated[Optional[StrictStr], Field(description="data__damage_share")] = None,
        data__hull_attacks__lt: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__lt")] = None,
        data__hull_attacks__gt: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__gt")] = None,
        data__hull_attacks__lte: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__lte")] = None,
        data__hull_attacks__gte: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__gte")] = None,
        data__hull_attacks: Annotated[Optional[StrictStr], Field(description="data__hull_attacks")] = None,
        data__total_damage__lt: Annotated[Optional[StrictStr], Field(description="data__total_damage__lt")] = None,
        data__total_damage__gt: Annotated[Optional[StrictStr], Field(description="data__total_damage__gt")] = None,
        data__total_damage__lte: Annotated[Optional[StrictStr], Field(description="data__total_damage__lte")] = None,
        data__total_damage__gte: Annotated[Optional[StrictStr], Field(description="data__total_damage__gte")] = None,
        data__total_damage: Annotated[Optional[StrictStr], Field(description="data__total_damage")] = None,
        data__heal_crit_num__lt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__lt")] = None,
        data__heal_crit_num__gt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__gt")] = None,
        data__heal_crit_num__lte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__lte")] = None,
        data__heal_crit_num__gte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__gte")] = None,
        data__heal_crit_num: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num")] = None,
        data__total_attacks__lt: Annotated[Optional[StrictStr], Field(description="data__total_attacks__lt")] = None,
        data__total_attacks__gt: Annotated[Optional[StrictStr], Field(description="data__total_attacks__gt")] = None,
        data__total_attacks__lte: Annotated[Optional[StrictStr], Field(description="data__total_attacks__lte")] = None,
        data__total_attacks__gte: Annotated[Optional[StrictStr], Field(description="data__total_attacks__gte")] = None,
        data__total_attacks: Annotated[Optional[StrictStr], Field(description="data__total_attacks")] = None,
        data__attacks_in_num__lt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__lt")] = None,
        data__attacks_in_num__gt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__gt")] = None,
        data__attacks_in_num__lte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__lte")] = None,
        data__attacks_in_num__gte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__gte")] = None,
        data__attacks_in_num: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num")] = None,
        data__attacks_in_share__lt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__lt")] = None,
        data__attacks_in_share__gt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__gt")] = None,
        data__attacks_in_share__lte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__lte")] = None,
        data__attacks_in_share__gte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__gte")] = None,
        data__attacks_in_share: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share")] = None,
        data__heal_crit_chance__lt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__lt")] = None,
        data__heal_crit_chance__gt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__gt")] = None,
        data__heal_crit_chance__lte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__lte")] = None,
        data__heal_crit_chance__gte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__gte")] = None,
        data__heal_crit_chance: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance")] = None,
        data__taken_damage_share__lt: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__lt")] = None,
        data__taken_damage_share__gt: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__gt")] = None,
        data__taken_damage_share__lte: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__lte")] = None,
        data__taken_damage_share__gte: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__gte")] = None,
        data__taken_damage_share: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share")] = None,
        data__total_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__lt")] = None,
        data__total_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__gt")] = None,
        data__total_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__lte")] = None,
        data__total_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__gte")] = None,
        data__total_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken")] = None,
        data__total_hull_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__lt")] = None,
        data__total_hull_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__gt")] = None,
        data__total_hull_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__lte")] = None,
        data__total_hull_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__gte")] = None,
        data__total_hull_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken")] = None,
        data__total_shield_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__lt")] = None,
        data__total_shield_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__gt")] = None,
        data__total_shield_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__lte")] = None,
        data__total_shield_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__gte")] = None,
        data__total_shield_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken")] = None,
        data__build__exact: Annotated[Optional[StrictStr], Field(description="data__build__exact")] = None,
        data__build__iexact: Annotated[Optional[StrictStr], Field(description="data__build__iexact")] = None,
        data__build__contains: Annotated[Optional[StrictStr], Field(description="data__build__contains")] = None,
        data__build__icontains: Annotated[Optional[StrictStr], Field(description="data__build__icontains")] = None,
        data__build__istartswith: Annotated[Optional[StrictStr], Field(description="data__build__istartswith")] = None,
        data__build__startswith: Annotated[Optional[StrictStr], Field(description="data__build__startswith")] = None,
        data__build__endswith: Annotated[Optional[StrictStr], Field(description="data__build__endswith")] = None,
        data__build__iendswith: Annotated[Optional[StrictStr], Field(description="data__build__iendswith")] = None,
        data__build__iregex: Annotated[Optional[StrictStr], Field(description="data__build__iregex")] = None,
        data__build__regex: Annotated[Optional[StrictStr], Field(description="data__build__regex")] = None,
        data__build: Annotated[Optional[StrictStr], Field(description="data__build")] = None,
        ordering: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> LadderEntriesList200Response:
        """ladder_entries_list

        LadderEntry API

        :param player: player
        :type player: str
        :param player__iexact: player__iexact
        :type player__iexact: str
        :param player__contains: player__contains
        :type player__contains: str
        :param player__icontains: player__icontains
        :type player__icontains: str
        :param player__istartswith: player__istartswith
        :type player__istartswith: str
        :param player__startswith: player__startswith
        :type player__startswith: str
        :param player__endswith: player__endswith
        :type player__endswith: str
        :param player__iendswith: player__iendswith
        :type player__iendswith: str
        :param player__iregex: player__iregex
        :type player__iregex: str
        :param player__regex: player__regex
        :type player__regex: str
        :param ladder: ladder
        :type ladder: str
        :param ladder__name: ladder__name
        :type ladder__name: str
        :param ladder__name__iexact: ladder__name__iexact
        :type ladder__name__iexact: str
        :param ladder__name__contains: ladder__name__contains
        :type ladder__name__contains: str
        :param ladder__name__icontains: ladder__name__icontains
        :type ladder__name__icontains: str
        :param ladder__name__istartswith: ladder__name__istartswith
        :type ladder__name__istartswith: str
        :param ladder__name__startswith: ladder__name__startswith
        :type ladder__name__startswith: str
        :param ladder__name__endswith: ladder__name__endswith
        :type ladder__name__endswith: str
        :param ladder__name__iendswith: ladder__name__iendswith
        :type ladder__name__iendswith: str
        :param ladder__name__iregex: ladder__name__iregex
        :type ladder__name__iregex: str
        :param ladder__name__regex: ladder__name__regex
        :type ladder__name__regex: str
        :param ladder__difficulty: ladder__difficulty
        :type ladder__difficulty: str
        :param ladder__difficulty__iexact: ladder__difficulty__iexact
        :type ladder__difficulty__iexact: str
        :param ladder__difficulty__contains: ladder__difficulty__contains
        :type ladder__difficulty__contains: str
        :param ladder__difficulty__icontains: ladder__difficulty__icontains
        :type ladder__difficulty__icontains: str
        :param ladder__difficulty__istartswith: ladder__difficulty__istartswith
        :type ladder__difficulty__istartswith: str
        :param ladder__difficulty__startswith: ladder__difficulty__startswith
        :type ladder__difficulty__startswith: str
        :param ladder__difficulty__endswith: ladder__difficulty__endswith
        :type ladder__difficulty__endswith: str
        :param ladder__difficulty__iendswith: ladder__difficulty__iendswith
        :type ladder__difficulty__iendswith: str
        :param ladder__difficulty__iregex: ladder__difficulty__iregex
        :type ladder__difficulty__iregex: str
        :param ladder__difficulty__regex: ladder__difficulty__regex
        :type ladder__difficulty__regex: str
        :param ladder__variant__name: ladder__variant__name
        :type ladder__variant__name: str
        :param ladder__variant__name__iexact: ladder__variant__name__iexact
        :type ladder__variant__name__iexact: str
        :param ladder__variant__name__contains: ladder__variant__name__contains
        :type ladder__variant__name__contains: str
        :param ladder__variant__name__icontains: ladder__variant__name__icontains
        :type ladder__variant__name__icontains: str
        :param ladder__variant__name__istartswith: ladder__variant__name__istartswith
        :type ladder__variant__name__istartswith: str
        :param ladder__variant__name__startswith: ladder__variant__name__startswith
        :type ladder__variant__name__startswith: str
        :param ladder__variant__name__endswith: ladder__variant__name__endswith
        :type ladder__variant__name__endswith: str
        :param ladder__variant__name__iendswith: ladder__variant__name__iendswith
        :type ladder__variant__name__iendswith: str
        :param ladder__variant__name__iregex: ladder__variant__name__iregex
        :type ladder__variant__name__iregex: str
        :param ladder__variant__name__regex: ladder__variant__name__regex
        :type ladder__variant__name__regex: str
        :param ladder__is_solo: ladder__is_solo
        :type ladder__is_solo: str
        :param data__dps__lt: data__DPS__lt
        :type data__dps__lt: str
        :param data__dps__gt: data__DPS__gt
        :type data__dps__gt: str
        :param data__dps__lte: data__DPS__lte
        :type data__dps__lte: str
        :param data__dps__gte: data__DPS__gte
        :type data__dps__gte: str
        :param data__dps: data__DPS
        :type data__dps: str
        :param data__name__exact: data__name__exact
        :type data__name__exact: str
        :param data__name__iexact: data__name__iexact
        :type data__name__iexact: str
        :param data__name__contains: data__name__contains
        :type data__name__contains: str
        :param data__name__icontains: data__name__icontains
        :type data__name__icontains: str
        :param data__name__istartswith: data__name__istartswith
        :type data__name__istartswith: str
        :param data__name__startswith: data__name__startswith
        :type data__name__startswith: str
        :param data__name__endswith: data__name__endswith
        :type data__name__endswith: str
        :param data__name__iendswith: data__name__iendswith
        :type data__name__iendswith: str
        :param data__name__iregex: data__name__iregex
        :type data__name__iregex: str
        :param data__name__regex: data__name__regex
        :type data__name__regex: str
        :param data__name: data__name
        :type data__name: str
        :param data__deaths__lt: data__deaths__lt
        :type data__deaths__lt: str
        :param data__deaths__gt: data__deaths__gt
        :type data__deaths__gt: str
        :param data__deaths__lte: data__deaths__lte
        :type data__deaths__lte: str
        :param data__deaths__gte: data__deaths__gte
        :type data__deaths__gte: str
        :param data__deaths: data__deaths
        :type data__deaths: str
        :param data__debuff__lt: data__debuff__lt
        :type data__debuff__lt: str
        :param data__debuff__gt: data__debuff__gt
        :type data__debuff__gt: str
        :param data__debuff__lte: data__debuff__lte
        :type data__debuff__lte: str
        :param data__debuff__gte: data__debuff__gte
        :type data__debuff__gte: str
        :param data__debuff: data__debuff
        :type data__debuff: str
        :param data__handle__exact: data__handle__exact
        :type data__handle__exact: str
        :param data__handle__iexact: data__handle__iexact
        :type data__handle__iexact: str
        :param data__handle__contains: data__handle__contains
        :type data__handle__contains: str
        :param data__handle__icontains: data__handle__icontains
        :type data__handle__icontains: str
        :param data__handle__istartswith: data__handle__istartswith
        :type data__handle__istartswith: str
        :param data__handle__startswith: data__handle__startswith
        :type data__handle__startswith: str
        :param data__handle__endswith: data__handle__endswith
        :type data__handle__endswith: str
        :param data__handle__iendswith: data__handle__iendswith
        :type data__handle__iendswith: str
        :param data__handle__iregex: data__handle__iregex
        :type data__handle__iregex: str
        :param data__handle__regex: data__handle__regex
        :type data__handle__regex: str
        :param data__handle: data__handle
        :type data__handle: str
        :param data__misses__lt: data__misses__lt
        :type data__misses__lt: str
        :param data__misses__gt: data__misses__gt
        :type data__misses__gt: str
        :param data__misses__lte: data__misses__lte
        :type data__misses__lte: str
        :param data__misses__gte: data__misses__gte
        :type data__misses__gte: str
        :param data__misses: data__misses
        :type data__misses: str
        :param data__crit_num__lt: data__crit_num__lt
        :type data__crit_num__lt: str
        :param data__crit_num__gt: data__crit_num__gt
        :type data__crit_num__gt: str
        :param data__crit_num__lte: data__crit_num__lte
        :type data__crit_num__lte: str
        :param data__crit_num__gte: data__crit_num__gte
        :type data__crit_num__gte: str
        :param data__crit_num: data__crit_num
        :type data__crit_num: str
        :param data__heal_num__lt: data__heal_num__lt
        :type data__heal_num__lt: str
        :param data__heal_num__gt: data__heal_num__gt
        :type data__heal_num__gt: str
        :param data__heal_num__lte: data__heal_num__lte
        :type data__heal_num__lte: str
        :param data__heal_num__gte: data__heal_num__gte
        :type data__heal_num__gte: str
        :param data__heal_num: data__heal_num
        :type data__heal_num: str
        :param data__heal_share__lt: data__heal_share__lt
        :type data__heal_share__lt: str
        :param data__heal_share__gt: data__heal_share__gt
        :type data__heal_share__gt: str
        :param data__heal_share__lte: data__heal_share__lte
        :type data__heal_share__lte: str
        :param data__heal_share__gte: data__heal_share__gte
        :type data__heal_share__gte: str
        :param data__heal_share: data__heal_share
        :type data__heal_share: str
        :param data__combat_time__lt: data__combat_time__lt
        :type data__combat_time__lt: str
        :param data__combat_time__gt: data__combat_time__gt
        :type data__combat_time__gt: str
        :param data__combat_time__lte: data__combat_time__lte
        :type data__combat_time__lte: str
        :param data__combat_time__gte: data__combat_time__gte
        :type data__combat_time__gte: str
        :param data__combat_time: data__combat_time
        :type data__combat_time: str
        :param data__crit_chance__lt: data__crit_chance__lt
        :type data__crit_chance__lt: str
        :param data__crit_chance__gt: data__crit_chance__gt
        :type data__crit_chance__gt: str
        :param data__crit_chance__lte: data__crit_chance__lte
        :type data__crit_chance__lte: str
        :param data__crit_chance__gte: data__crit_chance__gte
        :type data__crit_chance__gte: str
        :param data__crit_chance: data__crit_chance
        :type data__crit_chance: str
        :param data__max_one_hit__lt: data__max_one_hit__lt
        :type data__max_one_hit__lt: str
        :param data__max_one_hit__gt: data__max_one_hit__gt
        :type data__max_one_hit__gt: str
        :param data__max_one_hit__lte: data__max_one_hit__lte
        :type data__max_one_hit__lte: str
        :param data__max_one_hit__gte: data__max_one_hit__gte
        :type data__max_one_hit__gte: str
        :param data__max_one_hit: data__max_one_hit
        :type data__max_one_hit: str
        :param data__total_heals__lt: data__total_heals__lt
        :type data__total_heals__lt: str
        :param data__total_heals__gt: data__total_heals__gt
        :type data__total_heals__gt: str
        :param data__total_heals__lte: data__total_heals__lte
        :type data__total_heals__lte: str
        :param data__total_heals__gte: data__total_heals__gte
        :type data__total_heals__gte: str
        :param data__total_heals: data__total_heals
        :type data__total_heals: str
        :param data__damage_share__lt: data__damage_share__lt
        :type data__damage_share__lt: str
        :param data__damage_share__gt: data__damage_share__gt
        :type data__damage_share__gt: str
        :param data__damage_share__lte: data__damage_share__lte
        :type data__damage_share__lte: str
        :param data__damage_share__gte: data__damage_share__gte
        :type data__damage_share__gte: str
        :param data__damage_share: data__damage_share
        :type data__damage_share: str
        :param data__hull_attacks__lt: data__hull_attacks__lt
        :type data__hull_attacks__lt: str
        :param data__hull_attacks__gt: data__hull_attacks__gt
        :type data__hull_attacks__gt: str
        :param data__hull_attacks__lte: data__hull_attacks__lte
        :type data__hull_attacks__lte: str
        :param data__hull_attacks__gte: data__hull_attacks__gte
        :type data__hull_attacks__gte: str
        :param data__hull_attacks: data__hull_attacks
        :type data__hull_attacks: str
        :param data__total_damage__lt: data__total_damage__lt
        :type data__total_damage__lt: str
        :param data__total_damage__gt: data__total_damage__gt
        :type data__total_damage__gt: str
        :param data__total_damage__lte: data__total_damage__lte
        :type data__total_damage__lte: str
        :param data__total_damage__gte: data__total_damage__gte
        :type data__total_damage__gte: str
        :param data__total_damage: data__total_damage
        :type data__total_damage: str
        :param data__heal_crit_num__lt: data__heal_crit_num__lt
        :type data__heal_crit_num__lt: str
        :param data__heal_crit_num__gt: data__heal_crit_num__gt
        :type data__heal_crit_num__gt: str
        :param data__heal_crit_num__lte: data__heal_crit_num__lte
        :type data__heal_crit_num__lte: str
        :param data__heal_crit_num__gte: data__heal_crit_num__gte
        :type data__heal_crit_num__gte: str
        :param data__heal_crit_num: data__heal_crit_num
        :type data__heal_crit_num: str
        :param data__total_attacks__lt: data__total_attacks__lt
        :type data__total_attacks__lt: str
        :param data__total_attacks__gt: data__total_attacks__gt
        :type data__total_attacks__gt: str
        :param data__total_attacks__lte: data__total_attacks__lte
        :type data__total_attacks__lte: str
        :param data__total_attacks__gte: data__total_attacks__gte
        :type data__total_attacks__gte: str
        :param data__total_attacks: data__total_attacks
        :type data__total_attacks: str
        :param data__attacks_in_num__lt: data__attacks_in_num__lt
        :type data__attacks_in_num__lt: str
        :param data__attacks_in_num__gt: data__attacks_in_num__gt
        :type data__attacks_in_num__gt: str
        :param data__attacks_in_num__lte: data__attacks_in_num__lte
        :type data__attacks_in_num__lte: str
        :param data__attacks_in_num__gte: data__attacks_in_num__gte
        :type data__attacks_in_num__gte: str
        :param data__attacks_in_num: data__attacks_in_num
        :type data__attacks_in_num: str
        :param data__attacks_in_share__lt: data__attacks_in_share__lt
        :type data__attacks_in_share__lt: str
        :param data__attacks_in_share__gt: data__attacks_in_share__gt
        :type data__attacks_in_share__gt: str
        :param data__attacks_in_share__lte: data__attacks_in_share__lte
        :type data__attacks_in_share__lte: str
        :param data__attacks_in_share__gte: data__attacks_in_share__gte
        :type data__attacks_in_share__gte: str
        :param data__attacks_in_share: data__attacks_in_share
        :type data__attacks_in_share: str
        :param data__heal_crit_chance__lt: data__heal_crit_chance__lt
        :type data__heal_crit_chance__lt: str
        :param data__heal_crit_chance__gt: data__heal_crit_chance__gt
        :type data__heal_crit_chance__gt: str
        :param data__heal_crit_chance__lte: data__heal_crit_chance__lte
        :type data__heal_crit_chance__lte: str
        :param data__heal_crit_chance__gte: data__heal_crit_chance__gte
        :type data__heal_crit_chance__gte: str
        :param data__heal_crit_chance: data__heal_crit_chance
        :type data__heal_crit_chance: str
        :param data__taken_damage_share__lt: data__taken_damage_share__lt
        :type data__taken_damage_share__lt: str
        :param data__taken_damage_share__gt: data__taken_damage_share__gt
        :type data__taken_damage_share__gt: str
        :param data__taken_damage_share__lte: data__taken_damage_share__lte
        :type data__taken_damage_share__lte: str
        :param data__taken_damage_share__gte: data__taken_damage_share__gte
        :type data__taken_damage_share__gte: str
        :param data__taken_damage_share: data__taken_damage_share
        :type data__taken_damage_share: str
        :param data__total_damage_taken__lt: data__total_damage_taken__lt
        :type data__total_damage_taken__lt: str
        :param data__total_damage_taken__gt: data__total_damage_taken__gt
        :type data__total_damage_taken__gt: str
        :param data__total_damage_taken__lte: data__total_damage_taken__lte
        :type data__total_damage_taken__lte: str
        :param data__total_damage_taken__gte: data__total_damage_taken__gte
        :type data__total_damage_taken__gte: str
        :param data__total_damage_taken: data__total_damage_taken
        :type data__total_damage_taken: str
        :param data__total_hull_damage_taken__lt: data__total_hull_damage_taken__lt
        :type data__total_hull_damage_taken__lt: str
        :param data__total_hull_damage_taken__gt: data__total_hull_damage_taken__gt
        :type data__total_hull_damage_taken__gt: str
        :param data__total_hull_damage_taken__lte: data__total_hull_damage_taken__lte
        :type data__total_hull_damage_taken__lte: str
        :param data__total_hull_damage_taken__gte: data__total_hull_damage_taken__gte
        :type data__total_hull_damage_taken__gte: str
        :param data__total_hull_damage_taken: data__total_hull_damage_taken
        :type data__total_hull_damage_taken: str
        :param data__total_shield_damage_taken__lt: data__total_shield_damage_taken__lt
        :type data__total_shield_damage_taken__lt: str
        :param data__total_shield_damage_taken__gt: data__total_shield_damage_taken__gt
        :type data__total_shield_damage_taken__gt: str
        :param data__total_shield_damage_taken__lte: data__total_shield_damage_taken__lte
        :type data__total_shield_damage_taken__lte: str
        :param data__total_shield_damage_taken__gte: data__total_shield_damage_taken__gte
        :type data__total_shield_damage_taken__gte: str
        :param data__total_shield_damage_taken: data__total_shield_damage_taken
        :type data__total_shield_damage_taken: str
        :param data__build__exact: data__build__exact
        :type data__build__exact: str
        :param data__build__iexact: data__build__iexact
        :type data__build__iexact: str
        :param data__build__contains: data__build__contains
        :type data__build__contains: str
        :param data__build__icontains: data__build__icontains
        :type data__build__icontains: str
        :param data__build__istartswith: data__build__istartswith
        :type data__build__istartswith: str
        :param data__build__startswith: data__build__startswith
        :type data__build__startswith: str
        :param data__build__endswith: data__build__endswith
        :type data__build__endswith: str
        :param data__build__iendswith: data__build__iendswith
        :type data__build__iendswith: str
        :param data__build__iregex: data__build__iregex
        :type data__build__iregex: str
        :param data__build__regex: data__build__regex
        :type data__build__regex: str
        :param data__build: data__build
        :type data__build: str
        :param ordering: Which field to use when ordering the results.
        :type ordering: str
        :param page: A page number within the paginated result set.
        :type page: int
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ladder_entries_list_serialize(
            player=player,
            player__iexact=player__iexact,
            player__contains=player__contains,
            player__icontains=player__icontains,
            player__istartswith=player__istartswith,
            player__startswith=player__startswith,
            player__endswith=player__endswith,
            player__iendswith=player__iendswith,
            player__iregex=player__iregex,
            player__regex=player__regex,
            ladder=ladder,
            ladder__name=ladder__name,
            ladder__name__iexact=ladder__name__iexact,
            ladder__name__contains=ladder__name__contains,
            ladder__name__icontains=ladder__name__icontains,
            ladder__name__istartswith=ladder__name__istartswith,
            ladder__name__startswith=ladder__name__startswith,
            ladder__name__endswith=ladder__name__endswith,
            ladder__name__iendswith=ladder__name__iendswith,
            ladder__name__iregex=ladder__name__iregex,
            ladder__name__regex=ladder__name__regex,
            ladder__difficulty=ladder__difficulty,
            ladder__difficulty__iexact=ladder__difficulty__iexact,
            ladder__difficulty__contains=ladder__difficulty__contains,
            ladder__difficulty__icontains=ladder__difficulty__icontains,
            ladder__difficulty__istartswith=ladder__difficulty__istartswith,
            ladder__difficulty__startswith=ladder__difficulty__startswith,
            ladder__difficulty__endswith=ladder__difficulty__endswith,
            ladder__difficulty__iendswith=ladder__difficulty__iendswith,
            ladder__difficulty__iregex=ladder__difficulty__iregex,
            ladder__difficulty__regex=ladder__difficulty__regex,
            ladder__variant__name=ladder__variant__name,
            ladder__variant__name__iexact=ladder__variant__name__iexact,
            ladder__variant__name__contains=ladder__variant__name__contains,
            ladder__variant__name__icontains=ladder__variant__name__icontains,
            ladder__variant__name__istartswith=ladder__variant__name__istartswith,
            ladder__variant__name__startswith=ladder__variant__name__startswith,
            ladder__variant__name__endswith=ladder__variant__name__endswith,
            ladder__variant__name__iendswith=ladder__variant__name__iendswith,
            ladder__variant__name__iregex=ladder__variant__name__iregex,
            ladder__variant__name__regex=ladder__variant__name__regex,
            ladder__is_solo=ladder__is_solo,
            data__dps__lt=data__dps__lt,
            data__dps__gt=data__dps__gt,
            data__dps__lte=data__dps__lte,
            data__dps__gte=data__dps__gte,
            data__dps=data__dps,
            data__name__exact=data__name__exact,
            data__name__iexact=data__name__iexact,
            data__name__contains=data__name__contains,
            data__name__icontains=data__name__icontains,
            data__name__istartswith=data__name__istartswith,
            data__name__startswith=data__name__startswith,
            data__name__endswith=data__name__endswith,
            data__name__iendswith=data__name__iendswith,
            data__name__iregex=data__name__iregex,
            data__name__regex=data__name__regex,
            data__name=data__name,
            data__deaths__lt=data__deaths__lt,
            data__deaths__gt=data__deaths__gt,
            data__deaths__lte=data__deaths__lte,
            data__deaths__gte=data__deaths__gte,
            data__deaths=data__deaths,
            data__debuff__lt=data__debuff__lt,
            data__debuff__gt=data__debuff__gt,
            data__debuff__lte=data__debuff__lte,
            data__debuff__gte=data__debuff__gte,
            data__debuff=data__debuff,
            data__handle__exact=data__handle__exact,
            data__handle__iexact=data__handle__iexact,
            data__handle__contains=data__handle__contains,
            data__handle__icontains=data__handle__icontains,
            data__handle__istartswith=data__handle__istartswith,
            data__handle__startswith=data__handle__startswith,
            data__handle__endswith=data__handle__endswith,
            data__handle__iendswith=data__handle__iendswith,
            data__handle__iregex=data__handle__iregex,
            data__handle__regex=data__handle__regex,
            data__handle=data__handle,
            data__misses__lt=data__misses__lt,
            data__misses__gt=data__misses__gt,
            data__misses__lte=data__misses__lte,
            data__misses__gte=data__misses__gte,
            data__misses=data__misses,
            data__crit_num__lt=data__crit_num__lt,
            data__crit_num__gt=data__crit_num__gt,
            data__crit_num__lte=data__crit_num__lte,
            data__crit_num__gte=data__crit_num__gte,
            data__crit_num=data__crit_num,
            data__heal_num__lt=data__heal_num__lt,
            data__heal_num__gt=data__heal_num__gt,
            data__heal_num__lte=data__heal_num__lte,
            data__heal_num__gte=data__heal_num__gte,
            data__heal_num=data__heal_num,
            data__heal_share__lt=data__heal_share__lt,
            data__heal_share__gt=data__heal_share__gt,
            data__heal_share__lte=data__heal_share__lte,
            data__heal_share__gte=data__heal_share__gte,
            data__heal_share=data__heal_share,
            data__combat_time__lt=data__combat_time__lt,
            data__combat_time__gt=data__combat_time__gt,
            data__combat_time__lte=data__combat_time__lte,
            data__combat_time__gte=data__combat_time__gte,
            data__combat_time=data__combat_time,
            data__crit_chance__lt=data__crit_chance__lt,
            data__crit_chance__gt=data__crit_chance__gt,
            data__crit_chance__lte=data__crit_chance__lte,
            data__crit_chance__gte=data__crit_chance__gte,
            data__crit_chance=data__crit_chance,
            data__max_one_hit__lt=data__max_one_hit__lt,
            data__max_one_hit__gt=data__max_one_hit__gt,
            data__max_one_hit__lte=data__max_one_hit__lte,
            data__max_one_hit__gte=data__max_one_hit__gte,
            data__max_one_hit=data__max_one_hit,
            data__total_heals__lt=data__total_heals__lt,
            data__total_heals__gt=data__total_heals__gt,
            data__total_heals__lte=data__total_heals__lte,
            data__total_heals__gte=data__total_heals__gte,
            data__total_heals=data__total_heals,
            data__damage_share__lt=data__damage_share__lt,
            data__damage_share__gt=data__damage_share__gt,
            data__damage_share__lte=data__damage_share__lte,
            data__damage_share__gte=data__damage_share__gte,
            data__damage_share=data__damage_share,
            data__hull_attacks__lt=data__hull_attacks__lt,
            data__hull_attacks__gt=data__hull_attacks__gt,
            data__hull_attacks__lte=data__hull_attacks__lte,
            data__hull_attacks__gte=data__hull_attacks__gte,
            data__hull_attacks=data__hull_attacks,
            data__total_damage__lt=data__total_damage__lt,
            data__total_damage__gt=data__total_damage__gt,
            data__total_damage__lte=data__total_damage__lte,
            data__total_damage__gte=data__total_damage__gte,
            data__total_damage=data__total_damage,
            data__heal_crit_num__lt=data__heal_crit_num__lt,
            data__heal_crit_num__gt=data__heal_crit_num__gt,
            data__heal_crit_num__lte=data__heal_crit_num__lte,
            data__heal_crit_num__gte=data__heal_crit_num__gte,
            data__heal_crit_num=data__heal_crit_num,
            data__total_attacks__lt=data__total_attacks__lt,
            data__total_attacks__gt=data__total_attacks__gt,
            data__total_attacks__lte=data__total_attacks__lte,
            data__total_attacks__gte=data__total_attacks__gte,
            data__total_attacks=data__total_attacks,
            data__attacks_in_num__lt=data__attacks_in_num__lt,
            data__attacks_in_num__gt=data__attacks_in_num__gt,
            data__attacks_in_num__lte=data__attacks_in_num__lte,
            data__attacks_in_num__gte=data__attacks_in_num__gte,
            data__attacks_in_num=data__attacks_in_num,
            data__attacks_in_share__lt=data__attacks_in_share__lt,
            data__attacks_in_share__gt=data__attacks_in_share__gt,
            data__attacks_in_share__lte=data__attacks_in_share__lte,
            data__attacks_in_share__gte=data__attacks_in_share__gte,
            data__attacks_in_share=data__attacks_in_share,
            data__heal_crit_chance__lt=data__heal_crit_chance__lt,
            data__heal_crit_chance__gt=data__heal_crit_chance__gt,
            data__heal_crit_chance__lte=data__heal_crit_chance__lte,
            data__heal_crit_chance__gte=data__heal_crit_chance__gte,
            data__heal_crit_chance=data__heal_crit_chance,
            data__taken_damage_share__lt=data__taken_damage_share__lt,
            data__taken_damage_share__gt=data__taken_damage_share__gt,
            data__taken_damage_share__lte=data__taken_damage_share__lte,
            data__taken_damage_share__gte=data__taken_damage_share__gte,
            data__taken_damage_share=data__taken_damage_share,
            data__total_damage_taken__lt=data__total_damage_taken__lt,
            data__total_damage_taken__gt=data__total_damage_taken__gt,
            data__total_damage_taken__lte=data__total_damage_taken__lte,
            data__total_damage_taken__gte=data__total_damage_taken__gte,
            data__total_damage_taken=data__total_damage_taken,
            data__total_hull_damage_taken__lt=data__total_hull_damage_taken__lt,
            data__total_hull_damage_taken__gt=data__total_hull_damage_taken__gt,
            data__total_hull_damage_taken__lte=data__total_hull_damage_taken__lte,
            data__total_hull_damage_taken__gte=data__total_hull_damage_taken__gte,
            data__total_hull_damage_taken=data__total_hull_damage_taken,
            data__total_shield_damage_taken__lt=data__total_shield_damage_taken__lt,
            data__total_shield_damage_taken__gt=data__total_shield_damage_taken__gt,
            data__total_shield_damage_taken__lte=data__total_shield_damage_taken__lte,
            data__total_shield_damage_taken__gte=data__total_shield_damage_taken__gte,
            data__total_shield_damage_taken=data__total_shield_damage_taken,
            data__build__exact=data__build__exact,
            data__build__iexact=data__build__iexact,
            data__build__contains=data__build__contains,
            data__build__icontains=data__build__icontains,
            data__build__istartswith=data__build__istartswith,
            data__build__startswith=data__build__startswith,
            data__build__endswith=data__build__endswith,
            data__build__iendswith=data__build__iendswith,
            data__build__iregex=data__build__iregex,
            data__build__regex=data__build__regex,
            data__build=data__build,
            ordering=ordering,
            page=page,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "LadderEntriesList200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ladder_entries_list_with_http_info(
        self,
        player: Annotated[Optional[StrictStr], Field(description="player")] = None,
        player__iexact: Annotated[Optional[StrictStr], Field(description="player__iexact")] = None,
        player__contains: Annotated[Optional[StrictStr], Field(description="player__contains")] = None,
        player__icontains: Annotated[Optional[StrictStr], Field(description="player__icontains")] = None,
        player__istartswith: Annotated[Optional[StrictStr], Field(description="player__istartswith")] = None,
        player__startswith: Annotated[Optional[StrictStr], Field(description="player__startswith")] = None,
        player__endswith: Annotated[Optional[StrictStr], Field(description="player__endswith")] = None,
        player__iendswith: Annotated[Optional[StrictStr], Field(description="player__iendswith")] = None,
        player__iregex: Annotated[Optional[StrictStr], Field(description="player__iregex")] = None,
        player__regex: Annotated[Optional[StrictStr], Field(description="player__regex")] = None,
        ladder: Annotated[Optional[StrictStr], Field(description="ladder")] = None,
        ladder__name: Annotated[Optional[StrictStr], Field(description="ladder__name")] = None,
        ladder__name__iexact: Annotated[Optional[StrictStr], Field(description="ladder__name__iexact")] = None,
        ladder__name__contains: Annotated[Optional[StrictStr], Field(description="ladder__name__contains")] = None,
        ladder__name__icontains: Annotated[Optional[StrictStr], Field(description="ladder__name__icontains")] = None,
        ladder__name__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__name__istartswith")] = None,
        ladder__name__startswith: Annotated[Optional[StrictStr], Field(description="ladder__name__startswith")] = None,
        ladder__name__endswith: Annotated[Optional[StrictStr], Field(description="ladder__name__endswith")] = None,
        ladder__name__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__name__iendswith")] = None,
        ladder__name__iregex: Annotated[Optional[StrictStr], Field(description="ladder__name__iregex")] = None,
        ladder__name__regex: Annotated[Optional[StrictStr], Field(description="ladder__name__regex")] = None,
        ladder__difficulty: Annotated[Optional[StrictStr], Field(description="ladder__difficulty")] = None,
        ladder__difficulty__iexact: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iexact")] = None,
        ladder__difficulty__contains: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__contains")] = None,
        ladder__difficulty__icontains: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__icontains")] = None,
        ladder__difficulty__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__istartswith")] = None,
        ladder__difficulty__startswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__startswith")] = None,
        ladder__difficulty__endswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__endswith")] = None,
        ladder__difficulty__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iendswith")] = None,
        ladder__difficulty__iregex: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iregex")] = None,
        ladder__difficulty__regex: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__regex")] = None,
        ladder__variant__name: Annotated[Optional[StrictStr], Field(description="ladder__variant__name")] = None,
        ladder__variant__name__iexact: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iexact")] = None,
        ladder__variant__name__contains: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__contains")] = None,
        ladder__variant__name__icontains: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__icontains")] = None,
        ladder__variant__name__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__istartswith")] = None,
        ladder__variant__name__startswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__startswith")] = None,
        ladder__variant__name__endswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__endswith")] = None,
        ladder__variant__name__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iendswith")] = None,
        ladder__variant__name__iregex: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iregex")] = None,
        ladder__variant__name__regex: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__regex")] = None,
        ladder__is_solo: Annotated[Optional[StrictStr], Field(description="ladder__is_solo")] = None,
        data__dps__lt: Annotated[Optional[StrictStr], Field(description="data__DPS__lt")] = None,
        data__dps__gt: Annotated[Optional[StrictStr], Field(description="data__DPS__gt")] = None,
        data__dps__lte: Annotated[Optional[StrictStr], Field(description="data__DPS__lte")] = None,
        data__dps__gte: Annotated[Optional[StrictStr], Field(description="data__DPS__gte")] = None,
        data__dps: Annotated[Optional[StrictStr], Field(description="data__DPS")] = None,
        data__name__exact: Annotated[Optional[StrictStr], Field(description="data__name__exact")] = None,
        data__name__iexact: Annotated[Optional[StrictStr], Field(description="data__name__iexact")] = None,
        data__name__contains: Annotated[Optional[StrictStr], Field(description="data__name__contains")] = None,
        data__name__icontains: Annotated[Optional[StrictStr], Field(description="data__name__icontains")] = None,
        data__name__istartswith: Annotated[Optional[StrictStr], Field(description="data__name__istartswith")] = None,
        data__name__startswith: Annotated[Optional[StrictStr], Field(description="data__name__startswith")] = None,
        data__name__endswith: Annotated[Optional[StrictStr], Field(description="data__name__endswith")] = None,
        data__name__iendswith: Annotated[Optional[StrictStr], Field(description="data__name__iendswith")] = None,
        data__name__iregex: Annotated[Optional[StrictStr], Field(description="data__name__iregex")] = None,
        data__name__regex: Annotated[Optional[StrictStr], Field(description="data__name__regex")] = None,
        data__name: Annotated[Optional[StrictStr], Field(description="data__name")] = None,
        data__deaths__lt: Annotated[Optional[StrictStr], Field(description="data__deaths__lt")] = None,
        data__deaths__gt: Annotated[Optional[StrictStr], Field(description="data__deaths__gt")] = None,
        data__deaths__lte: Annotated[Optional[StrictStr], Field(description="data__deaths__lte")] = None,
        data__deaths__gte: Annotated[Optional[StrictStr], Field(description="data__deaths__gte")] = None,
        data__deaths: Annotated[Optional[StrictStr], Field(description="data__deaths")] = None,
        data__debuff__lt: Annotated[Optional[StrictStr], Field(description="data__debuff__lt")] = None,
        data__debuff__gt: Annotated[Optional[StrictStr], Field(description="data__debuff__gt")] = None,
        data__debuff__lte: Annotated[Optional[StrictStr], Field(description="data__debuff__lte")] = None,
        data__debuff__gte: Annotated[Optional[StrictStr], Field(description="data__debuff__gte")] = None,
        data__debuff: Annotated[Optional[StrictStr], Field(description="data__debuff")] = None,
        data__handle__exact: Annotated[Optional[StrictStr], Field(description="data__handle__exact")] = None,
        data__handle__iexact: Annotated[Optional[StrictStr], Field(description="data__handle__iexact")] = None,
        data__handle__contains: Annotated[Optional[StrictStr], Field(description="data__handle__contains")] = None,
        data__handle__icontains: Annotated[Optional[StrictStr], Field(description="data__handle__icontains")] = None,
        data__handle__istartswith: Annotated[Optional[StrictStr], Field(description="data__handle__istartswith")] = None,
        data__handle__startswith: Annotated[Optional[StrictStr], Field(description="data__handle__startswith")] = None,
        data__handle__endswith: Annotated[Optional[StrictStr], Field(description="data__handle__endswith")] = None,
        data__handle__iendswith: Annotated[Optional[StrictStr], Field(description="data__handle__iendswith")] = None,
        data__handle__iregex: Annotated[Optional[StrictStr], Field(description="data__handle__iregex")] = None,
        data__handle__regex: Annotated[Optional[StrictStr], Field(description="data__handle__regex")] = None,
        data__handle: Annotated[Optional[StrictStr], Field(description="data__handle")] = None,
        data__misses__lt: Annotated[Optional[StrictStr], Field(description="data__misses__lt")] = None,
        data__misses__gt: Annotated[Optional[StrictStr], Field(description="data__misses__gt")] = None,
        data__misses__lte: Annotated[Optional[StrictStr], Field(description="data__misses__lte")] = None,
        data__misses__gte: Annotated[Optional[StrictStr], Field(description="data__misses__gte")] = None,
        data__misses: Annotated[Optional[StrictStr], Field(description="data__misses")] = None,
        data__crit_num__lt: Annotated[Optional[StrictStr], Field(description="data__crit_num__lt")] = None,
        data__crit_num__gt: Annotated[Optional[StrictStr], Field(description="data__crit_num__gt")] = None,
        data__crit_num__lte: Annotated[Optional[StrictStr], Field(description="data__crit_num__lte")] = None,
        data__crit_num__gte: Annotated[Optional[StrictStr], Field(description="data__crit_num__gte")] = None,
        data__crit_num: Annotated[Optional[StrictStr], Field(description="data__crit_num")] = None,
        data__heal_num__lt: Annotated[Optional[StrictStr], Field(description="data__heal_num__lt")] = None,
        data__heal_num__gt: Annotated[Optional[StrictStr], Field(description="data__heal_num__gt")] = None,
        data__heal_num__lte: Annotated[Optional[StrictStr], Field(description="data__heal_num__lte")] = None,
        data__heal_num__gte: Annotated[Optional[StrictStr], Field(description="data__heal_num__gte")] = None,
        data__heal_num: Annotated[Optional[StrictStr], Field(description="data__heal_num")] = None,
        data__heal_share__lt: Annotated[Optional[StrictStr], Field(description="data__heal_share__lt")] = None,
        data__heal_share__gt: Annotated[Optional[StrictStr], Field(description="data__heal_share__gt")] = None,
        data__heal_share__lte: Annotated[Optional[StrictStr], Field(description="data__heal_share__lte")] = None,
        data__heal_share__gte: Annotated[Optional[StrictStr], Field(description="data__heal_share__gte")] = None,
        data__heal_share: Annotated[Optional[StrictStr], Field(description="data__heal_share")] = None,
        data__combat_time__lt: Annotated[Optional[StrictStr], Field(description="data__combat_time__lt")] = None,
        data__combat_time__gt: Annotated[Optional[StrictStr], Field(description="data__combat_time__gt")] = None,
        data__combat_time__lte: Annotated[Optional[StrictStr], Field(description="data__combat_time__lte")] = None,
        data__combat_time__gte: Annotated[Optional[StrictStr], Field(description="data__combat_time__gte")] = None,
        data__combat_time: Annotated[Optional[StrictStr], Field(description="data__combat_time")] = None,
        data__crit_chance__lt: Annotated[Optional[StrictStr], Field(description="data__crit_chance__lt")] = None,
        data__crit_chance__gt: Annotated[Optional[StrictStr], Field(description="data__crit_chance__gt")] = None,
        data__crit_chance__lte: Annotated[Optional[StrictStr], Field(description="data__crit_chance__lte")] = None,
        data__crit_chance__gte: Annotated[Optional[StrictStr], Field(description="data__crit_chance__gte")] = None,
        data__crit_chance: Annotated[Optional[StrictStr], Field(description="data__crit_chance")] = None,
        data__max_one_hit__lt: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__lt")] = None,
        data__max_one_hit__gt: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__gt")] = None,
        data__max_one_hit__lte: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__lte")] = None,
        data__max_one_hit__gte: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__gte")] = None,
        data__max_one_hit: Annotated[Optional[StrictStr], Field(description="data__max_one_hit")] = None,
        data__total_heals__lt: Annotated[Optional[StrictStr], Field(description="data__total_heals__lt")] = None,
        data__total_heals__gt: Annotated[Optional[StrictStr], Field(description="data__total_heals__gt")] = None,
        data__total_heals__lte: Annotated[Optional[StrictStr], Field(description="data__total_heals__lte")] = None,
        data__total_heals__gte: Annotated[Optional[StrictStr], Field(description="data__total_heals__gte")] = None,
        data__total_heals: Annotated[Optional[StrictStr], Field(description="data__total_heals")] = None,
        data__damage_share__lt: Annotated[Optional[StrictStr], Field(description="data__damage_share__lt")] = None,
        data__damage_share__gt: Annotated[Optional[StrictStr], Field(description="data__damage_share__gt")] = None,
        data__damage_share__lte: Annotated[Optional[StrictStr], Field(description="data__damage_share__lte")] = None,
        data__damage_share__gte: Annotated[Optional[StrictStr], Field(description="data__damage_share__gte")] = None,
        data__damage_share: Annotated[Optional[StrictStr], Field(description="data__damage_share")] = None,
        data__hull_attacks__lt: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__lt")] = None,
        data__hull_attacks__gt: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__gt")] = None,
        data__hull_attacks__lte: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__lte")] = None,
        data__hull_attacks__gte: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__gte")] = None,
        data__hull_attacks: Annotated[Optional[StrictStr], Field(description="data__hull_attacks")] = None,
        data__total_damage__lt: Annotated[Optional[StrictStr], Field(description="data__total_damage__lt")] = None,
        data__total_damage__gt: Annotated[Optional[StrictStr], Field(description="data__total_damage__gt")] = None,
        data__total_damage__lte: Annotated[Optional[StrictStr], Field(description="data__total_damage__lte")] = None,
        data__total_damage__gte: Annotated[Optional[StrictStr], Field(description="data__total_damage__gte")] = None,
        data__total_damage: Annotated[Optional[StrictStr], Field(description="data__total_damage")] = None,
        data__heal_crit_num__lt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__lt")] = None,
        data__heal_crit_num__gt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__gt")] = None,
        data__heal_crit_num__lte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__lte")] = None,
        data__heal_crit_num__gte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__gte")] = None,
        data__heal_crit_num: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num")] = None,
        data__total_attacks__lt: Annotated[Optional[StrictStr], Field(description="data__total_attacks__lt")] = None,
        data__total_attacks__gt: Annotated[Optional[StrictStr], Field(description="data__total_attacks__gt")] = None,
        data__total_attacks__lte: Annotated[Optional[StrictStr], Field(description="data__total_attacks__lte")] = None,
        data__total_attacks__gte: Annotated[Optional[StrictStr], Field(description="data__total_attacks__gte")] = None,
        data__total_attacks: Annotated[Optional[StrictStr], Field(description="data__total_attacks")] = None,
        data__attacks_in_num__lt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__lt")] = None,
        data__attacks_in_num__gt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__gt")] = None,
        data__attacks_in_num__lte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__lte")] = None,
        data__attacks_in_num__gte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__gte")] = None,
        data__attacks_in_num: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num")] = None,
        data__attacks_in_share__lt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__lt")] = None,
        data__attacks_in_share__gt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__gt")] = None,
        data__attacks_in_share__lte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__lte")] = None,
        data__attacks_in_share__gte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__gte")] = None,
        data__attacks_in_share: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share")] = None,
        data__heal_crit_chance__lt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__lt")] = None,
        data__heal_crit_chance__gt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__gt")] = None,
        data__heal_crit_chance__lte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__lte")] = None,
        data__heal_crit_chance__gte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__gte")] = None,
        data__heal_crit_chance: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance")] = None,
        data__taken_damage_share__lt: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__lt")] = None,
        data__taken_damage_share__gt: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__gt")] = None,
        data__taken_damage_share__lte: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__lte")] = None,
        data__taken_damage_share__gte: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__gte")] = None,
        data__taken_damage_share: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share")] = None,
        data__total_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__lt")] = None,
        data__total_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__gt")] = None,
        data__total_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__lte")] = None,
        data__total_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__gte")] = None,
        data__total_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken")] = None,
        data__total_hull_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__lt")] = None,
        data__total_hull_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__gt")] = None,
        data__total_hull_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__lte")] = None,
        data__total_hull_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__gte")] = None,
        data__total_hull_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken")] = None,
        data__total_shield_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__lt")] = None,
        data__total_shield_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__gt")] = None,
        data__total_shield_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__lte")] = None,
        data__total_shield_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__gte")] = None,
        data__total_shield_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken")] = None,
        data__build__exact: Annotated[Optional[StrictStr], Field(description="data__build__exact")] = None,
        data__build__iexact: Annotated[Optional[StrictStr], Field(description="data__build__iexact")] = None,
        data__build__contains: Annotated[Optional[StrictStr], Field(description="data__build__contains")] = None,
        data__build__icontains: Annotated[Optional[StrictStr], Field(description="data__build__icontains")] = None,
        data__build__istartswith: Annotated[Optional[StrictStr], Field(description="data__build__istartswith")] = None,
        data__build__startswith: Annotated[Optional[StrictStr], Field(description="data__build__startswith")] = None,
        data__build__endswith: Annotated[Optional[StrictStr], Field(description="data__build__endswith")] = None,
        data__build__iendswith: Annotated[Optional[StrictStr], Field(description="data__build__iendswith")] = None,
        data__build__iregex: Annotated[Optional[StrictStr], Field(description="data__build__iregex")] = None,
        data__build__regex: Annotated[Optional[StrictStr], Field(description="data__build__regex")] = None,
        data__build: Annotated[Optional[StrictStr], Field(description="data__build")] = None,
        ordering: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[LadderEntriesList200Response]:
        """ladder_entries_list

        LadderEntry API

        :param player: player
        :type player: str
        :param player__iexact: player__iexact
        :type player__iexact: str
        :param player__contains: player__contains
        :type player__contains: str
        :param player__icontains: player__icontains
        :type player__icontains: str
        :param player__istartswith: player__istartswith
        :type player__istartswith: str
        :param player__startswith: player__startswith
        :type player__startswith: str
        :param player__endswith: player__endswith
        :type player__endswith: str
        :param player__iendswith: player__iendswith
        :type player__iendswith: str
        :param player__iregex: player__iregex
        :type player__iregex: str
        :param player__regex: player__regex
        :type player__regex: str
        :param ladder: ladder
        :type ladder: str
        :param ladder__name: ladder__name
        :type ladder__name: str
        :param ladder__name__iexact: ladder__name__iexact
        :type ladder__name__iexact: str
        :param ladder__name__contains: ladder__name__contains
        :type ladder__name__contains: str
        :param ladder__name__icontains: ladder__name__icontains
        :type ladder__name__icontains: str
        :param ladder__name__istartswith: ladder__name__istartswith
        :type ladder__name__istartswith: str
        :param ladder__name__startswith: ladder__name__startswith
        :type ladder__name__startswith: str
        :param ladder__name__endswith: ladder__name__endswith
        :type ladder__name__endswith: str
        :param ladder__name__iendswith: ladder__name__iendswith
        :type ladder__name__iendswith: str
        :param ladder__name__iregex: ladder__name__iregex
        :type ladder__name__iregex: str
        :param ladder__name__regex: ladder__name__regex
        :type ladder__name__regex: str
        :param ladder__difficulty: ladder__difficulty
        :type ladder__difficulty: str
        :param ladder__difficulty__iexact: ladder__difficulty__iexact
        :type ladder__difficulty__iexact: str
        :param ladder__difficulty__contains: ladder__difficulty__contains
        :type ladder__difficulty__contains: str
        :param ladder__difficulty__icontains: ladder__difficulty__icontains
        :type ladder__difficulty__icontains: str
        :param ladder__difficulty__istartswith: ladder__difficulty__istartswith
        :type ladder__difficulty__istartswith: str
        :param ladder__difficulty__startswith: ladder__difficulty__startswith
        :type ladder__difficulty__startswith: str
        :param ladder__difficulty__endswith: ladder__difficulty__endswith
        :type ladder__difficulty__endswith: str
        :param ladder__difficulty__iendswith: ladder__difficulty__iendswith
        :type ladder__difficulty__iendswith: str
        :param ladder__difficulty__iregex: ladder__difficulty__iregex
        :type ladder__difficulty__iregex: str
        :param ladder__difficulty__regex: ladder__difficulty__regex
        :type ladder__difficulty__regex: str
        :param ladder__variant__name: ladder__variant__name
        :type ladder__variant__name: str
        :param ladder__variant__name__iexact: ladder__variant__name__iexact
        :type ladder__variant__name__iexact: str
        :param ladder__variant__name__contains: ladder__variant__name__contains
        :type ladder__variant__name__contains: str
        :param ladder__variant__name__icontains: ladder__variant__name__icontains
        :type ladder__variant__name__icontains: str
        :param ladder__variant__name__istartswith: ladder__variant__name__istartswith
        :type ladder__variant__name__istartswith: str
        :param ladder__variant__name__startswith: ladder__variant__name__startswith
        :type ladder__variant__name__startswith: str
        :param ladder__variant__name__endswith: ladder__variant__name__endswith
        :type ladder__variant__name__endswith: str
        :param ladder__variant__name__iendswith: ladder__variant__name__iendswith
        :type ladder__variant__name__iendswith: str
        :param ladder__variant__name__iregex: ladder__variant__name__iregex
        :type ladder__variant__name__iregex: str
        :param ladder__variant__name__regex: ladder__variant__name__regex
        :type ladder__variant__name__regex: str
        :param ladder__is_solo: ladder__is_solo
        :type ladder__is_solo: str
        :param data__dps__lt: data__DPS__lt
        :type data__dps__lt: str
        :param data__dps__gt: data__DPS__gt
        :type data__dps__gt: str
        :param data__dps__lte: data__DPS__lte
        :type data__dps__lte: str
        :param data__dps__gte: data__DPS__gte
        :type data__dps__gte: str
        :param data__dps: data__DPS
        :type data__dps: str
        :param data__name__exact: data__name__exact
        :type data__name__exact: str
        :param data__name__iexact: data__name__iexact
        :type data__name__iexact: str
        :param data__name__contains: data__name__contains
        :type data__name__contains: str
        :param data__name__icontains: data__name__icontains
        :type data__name__icontains: str
        :param data__name__istartswith: data__name__istartswith
        :type data__name__istartswith: str
        :param data__name__startswith: data__name__startswith
        :type data__name__startswith: str
        :param data__name__endswith: data__name__endswith
        :type data__name__endswith: str
        :param data__name__iendswith: data__name__iendswith
        :type data__name__iendswith: str
        :param data__name__iregex: data__name__iregex
        :type data__name__iregex: str
        :param data__name__regex: data__name__regex
        :type data__name__regex: str
        :param data__name: data__name
        :type data__name: str
        :param data__deaths__lt: data__deaths__lt
        :type data__deaths__lt: str
        :param data__deaths__gt: data__deaths__gt
        :type data__deaths__gt: str
        :param data__deaths__lte: data__deaths__lte
        :type data__deaths__lte: str
        :param data__deaths__gte: data__deaths__gte
        :type data__deaths__gte: str
        :param data__deaths: data__deaths
        :type data__deaths: str
        :param data__debuff__lt: data__debuff__lt
        :type data__debuff__lt: str
        :param data__debuff__gt: data__debuff__gt
        :type data__debuff__gt: str
        :param data__debuff__lte: data__debuff__lte
        :type data__debuff__lte: str
        :param data__debuff__gte: data__debuff__gte
        :type data__debuff__gte: str
        :param data__debuff: data__debuff
        :type data__debuff: str
        :param data__handle__exact: data__handle__exact
        :type data__handle__exact: str
        :param data__handle__iexact: data__handle__iexact
        :type data__handle__iexact: str
        :param data__handle__contains: data__handle__contains
        :type data__handle__contains: str
        :param data__handle__icontains: data__handle__icontains
        :type data__handle__icontains: str
        :param data__handle__istartswith: data__handle__istartswith
        :type data__handle__istartswith: str
        :param data__handle__startswith: data__handle__startswith
        :type data__handle__startswith: str
        :param data__handle__endswith: data__handle__endswith
        :type data__handle__endswith: str
        :param data__handle__iendswith: data__handle__iendswith
        :type data__handle__iendswith: str
        :param data__handle__iregex: data__handle__iregex
        :type data__handle__iregex: str
        :param data__handle__regex: data__handle__regex
        :type data__handle__regex: str
        :param data__handle: data__handle
        :type data__handle: str
        :param data__misses__lt: data__misses__lt
        :type data__misses__lt: str
        :param data__misses__gt: data__misses__gt
        :type data__misses__gt: str
        :param data__misses__lte: data__misses__lte
        :type data__misses__lte: str
        :param data__misses__gte: data__misses__gte
        :type data__misses__gte: str
        :param data__misses: data__misses
        :type data__misses: str
        :param data__crit_num__lt: data__crit_num__lt
        :type data__crit_num__lt: str
        :param data__crit_num__gt: data__crit_num__gt
        :type data__crit_num__gt: str
        :param data__crit_num__lte: data__crit_num__lte
        :type data__crit_num__lte: str
        :param data__crit_num__gte: data__crit_num__gte
        :type data__crit_num__gte: str
        :param data__crit_num: data__crit_num
        :type data__crit_num: str
        :param data__heal_num__lt: data__heal_num__lt
        :type data__heal_num__lt: str
        :param data__heal_num__gt: data__heal_num__gt
        :type data__heal_num__gt: str
        :param data__heal_num__lte: data__heal_num__lte
        :type data__heal_num__lte: str
        :param data__heal_num__gte: data__heal_num__gte
        :type data__heal_num__gte: str
        :param data__heal_num: data__heal_num
        :type data__heal_num: str
        :param data__heal_share__lt: data__heal_share__lt
        :type data__heal_share__lt: str
        :param data__heal_share__gt: data__heal_share__gt
        :type data__heal_share__gt: str
        :param data__heal_share__lte: data__heal_share__lte
        :type data__heal_share__lte: str
        :param data__heal_share__gte: data__heal_share__gte
        :type data__heal_share__gte: str
        :param data__heal_share: data__heal_share
        :type data__heal_share: str
        :param data__combat_time__lt: data__combat_time__lt
        :type data__combat_time__lt: str
        :param data__combat_time__gt: data__combat_time__gt
        :type data__combat_time__gt: str
        :param data__combat_time__lte: data__combat_time__lte
        :type data__combat_time__lte: str
        :param data__combat_time__gte: data__combat_time__gte
        :type data__combat_time__gte: str
        :param data__combat_time: data__combat_time
        :type data__combat_time: str
        :param data__crit_chance__lt: data__crit_chance__lt
        :type data__crit_chance__lt: str
        :param data__crit_chance__gt: data__crit_chance__gt
        :type data__crit_chance__gt: str
        :param data__crit_chance__lte: data__crit_chance__lte
        :type data__crit_chance__lte: str
        :param data__crit_chance__gte: data__crit_chance__gte
        :type data__crit_chance__gte: str
        :param data__crit_chance: data__crit_chance
        :type data__crit_chance: str
        :param data__max_one_hit__lt: data__max_one_hit__lt
        :type data__max_one_hit__lt: str
        :param data__max_one_hit__gt: data__max_one_hit__gt
        :type data__max_one_hit__gt: str
        :param data__max_one_hit__lte: data__max_one_hit__lte
        :type data__max_one_hit__lte: str
        :param data__max_one_hit__gte: data__max_one_hit__gte
        :type data__max_one_hit__gte: str
        :param data__max_one_hit: data__max_one_hit
        :type data__max_one_hit: str
        :param data__total_heals__lt: data__total_heals__lt
        :type data__total_heals__lt: str
        :param data__total_heals__gt: data__total_heals__gt
        :type data__total_heals__gt: str
        :param data__total_heals__lte: data__total_heals__lte
        :type data__total_heals__lte: str
        :param data__total_heals__gte: data__total_heals__gte
        :type data__total_heals__gte: str
        :param data__total_heals: data__total_heals
        :type data__total_heals: str
        :param data__damage_share__lt: data__damage_share__lt
        :type data__damage_share__lt: str
        :param data__damage_share__gt: data__damage_share__gt
        :type data__damage_share__gt: str
        :param data__damage_share__lte: data__damage_share__lte
        :type data__damage_share__lte: str
        :param data__damage_share__gte: data__damage_share__gte
        :type data__damage_share__gte: str
        :param data__damage_share: data__damage_share
        :type data__damage_share: str
        :param data__hull_attacks__lt: data__hull_attacks__lt
        :type data__hull_attacks__lt: str
        :param data__hull_attacks__gt: data__hull_attacks__gt
        :type data__hull_attacks__gt: str
        :param data__hull_attacks__lte: data__hull_attacks__lte
        :type data__hull_attacks__lte: str
        :param data__hull_attacks__gte: data__hull_attacks__gte
        :type data__hull_attacks__gte: str
        :param data__hull_attacks: data__hull_attacks
        :type data__hull_attacks: str
        :param data__total_damage__lt: data__total_damage__lt
        :type data__total_damage__lt: str
        :param data__total_damage__gt: data__total_damage__gt
        :type data__total_damage__gt: str
        :param data__total_damage__lte: data__total_damage__lte
        :type data__total_damage__lte: str
        :param data__total_damage__gte: data__total_damage__gte
        :type data__total_damage__gte: str
        :param data__total_damage: data__total_damage
        :type data__total_damage: str
        :param data__heal_crit_num__lt: data__heal_crit_num__lt
        :type data__heal_crit_num__lt: str
        :param data__heal_crit_num__gt: data__heal_crit_num__gt
        :type data__heal_crit_num__gt: str
        :param data__heal_crit_num__lte: data__heal_crit_num__lte
        :type data__heal_crit_num__lte: str
        :param data__heal_crit_num__gte: data__heal_crit_num__gte
        :type data__heal_crit_num__gte: str
        :param data__heal_crit_num: data__heal_crit_num
        :type data__heal_crit_num: str
        :param data__total_attacks__lt: data__total_attacks__lt
        :type data__total_attacks__lt: str
        :param data__total_attacks__gt: data__total_attacks__gt
        :type data__total_attacks__gt: str
        :param data__total_attacks__lte: data__total_attacks__lte
        :type data__total_attacks__lte: str
        :param data__total_attacks__gte: data__total_attacks__gte
        :type data__total_attacks__gte: str
        :param data__total_attacks: data__total_attacks
        :type data__total_attacks: str
        :param data__attacks_in_num__lt: data__attacks_in_num__lt
        :type data__attacks_in_num__lt: str
        :param data__attacks_in_num__gt: data__attacks_in_num__gt
        :type data__attacks_in_num__gt: str
        :param data__attacks_in_num__lte: data__attacks_in_num__lte
        :type data__attacks_in_num__lte: str
        :param data__attacks_in_num__gte: data__attacks_in_num__gte
        :type data__attacks_in_num__gte: str
        :param data__attacks_in_num: data__attacks_in_num
        :type data__attacks_in_num: str
        :param data__attacks_in_share__lt: data__attacks_in_share__lt
        :type data__attacks_in_share__lt: str
        :param data__attacks_in_share__gt: data__attacks_in_share__gt
        :type data__attacks_in_share__gt: str
        :param data__attacks_in_share__lte: data__attacks_in_share__lte
        :type data__attacks_in_share__lte: str
        :param data__attacks_in_share__gte: data__attacks_in_share__gte
        :type data__attacks_in_share__gte: str
        :param data__attacks_in_share: data__attacks_in_share
        :type data__attacks_in_share: str
        :param data__heal_crit_chance__lt: data__heal_crit_chance__lt
        :type data__heal_crit_chance__lt: str
        :param data__heal_crit_chance__gt: data__heal_crit_chance__gt
        :type data__heal_crit_chance__gt: str
        :param data__heal_crit_chance__lte: data__heal_crit_chance__lte
        :type data__heal_crit_chance__lte: str
        :param data__heal_crit_chance__gte: data__heal_crit_chance__gte
        :type data__heal_crit_chance__gte: str
        :param data__heal_crit_chance: data__heal_crit_chance
        :type data__heal_crit_chance: str
        :param data__taken_damage_share__lt: data__taken_damage_share__lt
        :type data__taken_damage_share__lt: str
        :param data__taken_damage_share__gt: data__taken_damage_share__gt
        :type data__taken_damage_share__gt: str
        :param data__taken_damage_share__lte: data__taken_damage_share__lte
        :type data__taken_damage_share__lte: str
        :param data__taken_damage_share__gte: data__taken_damage_share__gte
        :type data__taken_damage_share__gte: str
        :param data__taken_damage_share: data__taken_damage_share
        :type data__taken_damage_share: str
        :param data__total_damage_taken__lt: data__total_damage_taken__lt
        :type data__total_damage_taken__lt: str
        :param data__total_damage_taken__gt: data__total_damage_taken__gt
        :type data__total_damage_taken__gt: str
        :param data__total_damage_taken__lte: data__total_damage_taken__lte
        :type data__total_damage_taken__lte: str
        :param data__total_damage_taken__gte: data__total_damage_taken__gte
        :type data__total_damage_taken__gte: str
        :param data__total_damage_taken: data__total_damage_taken
        :type data__total_damage_taken: str
        :param data__total_hull_damage_taken__lt: data__total_hull_damage_taken__lt
        :type data__total_hull_damage_taken__lt: str
        :param data__total_hull_damage_taken__gt: data__total_hull_damage_taken__gt
        :type data__total_hull_damage_taken__gt: str
        :param data__total_hull_damage_taken__lte: data__total_hull_damage_taken__lte
        :type data__total_hull_damage_taken__lte: str
        :param data__total_hull_damage_taken__gte: data__total_hull_damage_taken__gte
        :type data__total_hull_damage_taken__gte: str
        :param data__total_hull_damage_taken: data__total_hull_damage_taken
        :type data__total_hull_damage_taken: str
        :param data__total_shield_damage_taken__lt: data__total_shield_damage_taken__lt
        :type data__total_shield_damage_taken__lt: str
        :param data__total_shield_damage_taken__gt: data__total_shield_damage_taken__gt
        :type data__total_shield_damage_taken__gt: str
        :param data__total_shield_damage_taken__lte: data__total_shield_damage_taken__lte
        :type data__total_shield_damage_taken__lte: str
        :param data__total_shield_damage_taken__gte: data__total_shield_damage_taken__gte
        :type data__total_shield_damage_taken__gte: str
        :param data__total_shield_damage_taken: data__total_shield_damage_taken
        :type data__total_shield_damage_taken: str
        :param data__build__exact: data__build__exact
        :type data__build__exact: str
        :param data__build__iexact: data__build__iexact
        :type data__build__iexact: str
        :param data__build__contains: data__build__contains
        :type data__build__contains: str
        :param data__build__icontains: data__build__icontains
        :type data__build__icontains: str
        :param data__build__istartswith: data__build__istartswith
        :type data__build__istartswith: str
        :param data__build__startswith: data__build__startswith
        :type data__build__startswith: str
        :param data__build__endswith: data__build__endswith
        :type data__build__endswith: str
        :param data__build__iendswith: data__build__iendswith
        :type data__build__iendswith: str
        :param data__build__iregex: data__build__iregex
        :type data__build__iregex: str
        :param data__build__regex: data__build__regex
        :type data__build__regex: str
        :param data__build: data__build
        :type data__build: str
        :param ordering: Which field to use when ordering the results.
        :type ordering: str
        :param page: A page number within the paginated result set.
        :type page: int
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ladder_entries_list_serialize(
            player=player,
            player__iexact=player__iexact,
            player__contains=player__contains,
            player__icontains=player__icontains,
            player__istartswith=player__istartswith,
            player__startswith=player__startswith,
            player__endswith=player__endswith,
            player__iendswith=player__iendswith,
            player__iregex=player__iregex,
            player__regex=player__regex,
            ladder=ladder,
            ladder__name=ladder__name,
            ladder__name__iexact=ladder__name__iexact,
            ladder__name__contains=ladder__name__contains,
            ladder__name__icontains=ladder__name__icontains,
            ladder__name__istartswith=ladder__name__istartswith,
            ladder__name__startswith=ladder__name__startswith,
            ladder__name__endswith=ladder__name__endswith,
            ladder__name__iendswith=ladder__name__iendswith,
            ladder__name__iregex=ladder__name__iregex,
            ladder__name__regex=ladder__name__regex,
            ladder__difficulty=ladder__difficulty,
            ladder__difficulty__iexact=ladder__difficulty__iexact,
            ladder__difficulty__contains=ladder__difficulty__contains,
            ladder__difficulty__icontains=ladder__difficulty__icontains,
            ladder__difficulty__istartswith=ladder__difficulty__istartswith,
            ladder__difficulty__startswith=ladder__difficulty__startswith,
            ladder__difficulty__endswith=ladder__difficulty__endswith,
            ladder__difficulty__iendswith=ladder__difficulty__iendswith,
            ladder__difficulty__iregex=ladder__difficulty__iregex,
            ladder__difficulty__regex=ladder__difficulty__regex,
            ladder__variant__name=ladder__variant__name,
            ladder__variant__name__iexact=ladder__variant__name__iexact,
            ladder__variant__name__contains=ladder__variant__name__contains,
            ladder__variant__name__icontains=ladder__variant__name__icontains,
            ladder__variant__name__istartswith=ladder__variant__name__istartswith,
            ladder__variant__name__startswith=ladder__variant__name__startswith,
            ladder__variant__name__endswith=ladder__variant__name__endswith,
            ladder__variant__name__iendswith=ladder__variant__name__iendswith,
            ladder__variant__name__iregex=ladder__variant__name__iregex,
            ladder__variant__name__regex=ladder__variant__name__regex,
            ladder__is_solo=ladder__is_solo,
            data__dps__lt=data__dps__lt,
            data__dps__gt=data__dps__gt,
            data__dps__lte=data__dps__lte,
            data__dps__gte=data__dps__gte,
            data__dps=data__dps,
            data__name__exact=data__name__exact,
            data__name__iexact=data__name__iexact,
            data__name__contains=data__name__contains,
            data__name__icontains=data__name__icontains,
            data__name__istartswith=data__name__istartswith,
            data__name__startswith=data__name__startswith,
            data__name__endswith=data__name__endswith,
            data__name__iendswith=data__name__iendswith,
            data__name__iregex=data__name__iregex,
            data__name__regex=data__name__regex,
            data__name=data__name,
            data__deaths__lt=data__deaths__lt,
            data__deaths__gt=data__deaths__gt,
            data__deaths__lte=data__deaths__lte,
            data__deaths__gte=data__deaths__gte,
            data__deaths=data__deaths,
            data__debuff__lt=data__debuff__lt,
            data__debuff__gt=data__debuff__gt,
            data__debuff__lte=data__debuff__lte,
            data__debuff__gte=data__debuff__gte,
            data__debuff=data__debuff,
            data__handle__exact=data__handle__exact,
            data__handle__iexact=data__handle__iexact,
            data__handle__contains=data__handle__contains,
            data__handle__icontains=data__handle__icontains,
            data__handle__istartswith=data__handle__istartswith,
            data__handle__startswith=data__handle__startswith,
            data__handle__endswith=data__handle__endswith,
            data__handle__iendswith=data__handle__iendswith,
            data__handle__iregex=data__handle__iregex,
            data__handle__regex=data__handle__regex,
            data__handle=data__handle,
            data__misses__lt=data__misses__lt,
            data__misses__gt=data__misses__gt,
            data__misses__lte=data__misses__lte,
            data__misses__gte=data__misses__gte,
            data__misses=data__misses,
            data__crit_num__lt=data__crit_num__lt,
            data__crit_num__gt=data__crit_num__gt,
            data__crit_num__lte=data__crit_num__lte,
            data__crit_num__gte=data__crit_num__gte,
            data__crit_num=data__crit_num,
            data__heal_num__lt=data__heal_num__lt,
            data__heal_num__gt=data__heal_num__gt,
            data__heal_num__lte=data__heal_num__lte,
            data__heal_num__gte=data__heal_num__gte,
            data__heal_num=data__heal_num,
            data__heal_share__lt=data__heal_share__lt,
            data__heal_share__gt=data__heal_share__gt,
            data__heal_share__lte=data__heal_share__lte,
            data__heal_share__gte=data__heal_share__gte,
            data__heal_share=data__heal_share,
            data__combat_time__lt=data__combat_time__lt,
            data__combat_time__gt=data__combat_time__gt,
            data__combat_time__lte=data__combat_time__lte,
            data__combat_time__gte=data__combat_time__gte,
            data__combat_time=data__combat_time,
            data__crit_chance__lt=data__crit_chance__lt,
            data__crit_chance__gt=data__crit_chance__gt,
            data__crit_chance__lte=data__crit_chance__lte,
            data__crit_chance__gte=data__crit_chance__gte,
            data__crit_chance=data__crit_chance,
            data__max_one_hit__lt=data__max_one_hit__lt,
            data__max_one_hit__gt=data__max_one_hit__gt,
            data__max_one_hit__lte=data__max_one_hit__lte,
            data__max_one_hit__gte=data__max_one_hit__gte,
            data__max_one_hit=data__max_one_hit,
            data__total_heals__lt=data__total_heals__lt,
            data__total_heals__gt=data__total_heals__gt,
            data__total_heals__lte=data__total_heals__lte,
            data__total_heals__gte=data__total_heals__gte,
            data__total_heals=data__total_heals,
            data__damage_share__lt=data__damage_share__lt,
            data__damage_share__gt=data__damage_share__gt,
            data__damage_share__lte=data__damage_share__lte,
            data__damage_share__gte=data__damage_share__gte,
            data__damage_share=data__damage_share,
            data__hull_attacks__lt=data__hull_attacks__lt,
            data__hull_attacks__gt=data__hull_attacks__gt,
            data__hull_attacks__lte=data__hull_attacks__lte,
            data__hull_attacks__gte=data__hull_attacks__gte,
            data__hull_attacks=data__hull_attacks,
            data__total_damage__lt=data__total_damage__lt,
            data__total_damage__gt=data__total_damage__gt,
            data__total_damage__lte=data__total_damage__lte,
            data__total_damage__gte=data__total_damage__gte,
            data__total_damage=data__total_damage,
            data__heal_crit_num__lt=data__heal_crit_num__lt,
            data__heal_crit_num__gt=data__heal_crit_num__gt,
            data__heal_crit_num__lte=data__heal_crit_num__lte,
            data__heal_crit_num__gte=data__heal_crit_num__gte,
            data__heal_crit_num=data__heal_crit_num,
            data__total_attacks__lt=data__total_attacks__lt,
            data__total_attacks__gt=data__total_attacks__gt,
            data__total_attacks__lte=data__total_attacks__lte,
            data__total_attacks__gte=data__total_attacks__gte,
            data__total_attacks=data__total_attacks,
            data__attacks_in_num__lt=data__attacks_in_num__lt,
            data__attacks_in_num__gt=data__attacks_in_num__gt,
            data__attacks_in_num__lte=data__attacks_in_num__lte,
            data__attacks_in_num__gte=data__attacks_in_num__gte,
            data__attacks_in_num=data__attacks_in_num,
            data__attacks_in_share__lt=data__attacks_in_share__lt,
            data__attacks_in_share__gt=data__attacks_in_share__gt,
            data__attacks_in_share__lte=data__attacks_in_share__lte,
            data__attacks_in_share__gte=data__attacks_in_share__gte,
            data__attacks_in_share=data__attacks_in_share,
            data__heal_crit_chance__lt=data__heal_crit_chance__lt,
            data__heal_crit_chance__gt=data__heal_crit_chance__gt,
            data__heal_crit_chance__lte=data__heal_crit_chance__lte,
            data__heal_crit_chance__gte=data__heal_crit_chance__gte,
            data__heal_crit_chance=data__heal_crit_chance,
            data__taken_damage_share__lt=data__taken_damage_share__lt,
            data__taken_damage_share__gt=data__taken_damage_share__gt,
            data__taken_damage_share__lte=data__taken_damage_share__lte,
            data__taken_damage_share__gte=data__taken_damage_share__gte,
            data__taken_damage_share=data__taken_damage_share,
            data__total_damage_taken__lt=data__total_damage_taken__lt,
            data__total_damage_taken__gt=data__total_damage_taken__gt,
            data__total_damage_taken__lte=data__total_damage_taken__lte,
            data__total_damage_taken__gte=data__total_damage_taken__gte,
            data__total_damage_taken=data__total_damage_taken,
            data__total_hull_damage_taken__lt=data__total_hull_damage_taken__lt,
            data__total_hull_damage_taken__gt=data__total_hull_damage_taken__gt,
            data__total_hull_damage_taken__lte=data__total_hull_damage_taken__lte,
            data__total_hull_damage_taken__gte=data__total_hull_damage_taken__gte,
            data__total_hull_damage_taken=data__total_hull_damage_taken,
            data__total_shield_damage_taken__lt=data__total_shield_damage_taken__lt,
            data__total_shield_damage_taken__gt=data__total_shield_damage_taken__gt,
            data__total_shield_damage_taken__lte=data__total_shield_damage_taken__lte,
            data__total_shield_damage_taken__gte=data__total_shield_damage_taken__gte,
            data__total_shield_damage_taken=data__total_shield_damage_taken,
            data__build__exact=data__build__exact,
            data__build__iexact=data__build__iexact,
            data__build__contains=data__build__contains,
            data__build__icontains=data__build__icontains,
            data__build__istartswith=data__build__istartswith,
            data__build__startswith=data__build__startswith,
            data__build__endswith=data__build__endswith,
            data__build__iendswith=data__build__iendswith,
            data__build__iregex=data__build__iregex,
            data__build__regex=data__build__regex,
            data__build=data__build,
            ordering=ordering,
            page=page,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "LadderEntriesList200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ladder_entries_list_without_preload_content(
        self,
        player: Annotated[Optional[StrictStr], Field(description="player")] = None,
        player__iexact: Annotated[Optional[StrictStr], Field(description="player__iexact")] = None,
        player__contains: Annotated[Optional[StrictStr], Field(description="player__contains")] = None,
        player__icontains: Annotated[Optional[StrictStr], Field(description="player__icontains")] = None,
        player__istartswith: Annotated[Optional[StrictStr], Field(description="player__istartswith")] = None,
        player__startswith: Annotated[Optional[StrictStr], Field(description="player__startswith")] = None,
        player__endswith: Annotated[Optional[StrictStr], Field(description="player__endswith")] = None,
        player__iendswith: Annotated[Optional[StrictStr], Field(description="player__iendswith")] = None,
        player__iregex: Annotated[Optional[StrictStr], Field(description="player__iregex")] = None,
        player__regex: Annotated[Optional[StrictStr], Field(description="player__regex")] = None,
        ladder: Annotated[Optional[StrictStr], Field(description="ladder")] = None,
        ladder__name: Annotated[Optional[StrictStr], Field(description="ladder__name")] = None,
        ladder__name__iexact: Annotated[Optional[StrictStr], Field(description="ladder__name__iexact")] = None,
        ladder__name__contains: Annotated[Optional[StrictStr], Field(description="ladder__name__contains")] = None,
        ladder__name__icontains: Annotated[Optional[StrictStr], Field(description="ladder__name__icontains")] = None,
        ladder__name__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__name__istartswith")] = None,
        ladder__name__startswith: Annotated[Optional[StrictStr], Field(description="ladder__name__startswith")] = None,
        ladder__name__endswith: Annotated[Optional[StrictStr], Field(description="ladder__name__endswith")] = None,
        ladder__name__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__name__iendswith")] = None,
        ladder__name__iregex: Annotated[Optional[StrictStr], Field(description="ladder__name__iregex")] = None,
        ladder__name__regex: Annotated[Optional[StrictStr], Field(description="ladder__name__regex")] = None,
        ladder__difficulty: Annotated[Optional[StrictStr], Field(description="ladder__difficulty")] = None,
        ladder__difficulty__iexact: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iexact")] = None,
        ladder__difficulty__contains: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__contains")] = None,
        ladder__difficulty__icontains: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__icontains")] = None,
        ladder__difficulty__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__istartswith")] = None,
        ladder__difficulty__startswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__startswith")] = None,
        ladder__difficulty__endswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__endswith")] = None,
        ladder__difficulty__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iendswith")] = None,
        ladder__difficulty__iregex: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__iregex")] = None,
        ladder__difficulty__regex: Annotated[Optional[StrictStr], Field(description="ladder__difficulty__regex")] = None,
        ladder__variant__name: Annotated[Optional[StrictStr], Field(description="ladder__variant__name")] = None,
        ladder__variant__name__iexact: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iexact")] = None,
        ladder__variant__name__contains: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__contains")] = None,
        ladder__variant__name__icontains: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__icontains")] = None,
        ladder__variant__name__istartswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__istartswith")] = None,
        ladder__variant__name__startswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__startswith")] = None,
        ladder__variant__name__endswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__endswith")] = None,
        ladder__variant__name__iendswith: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iendswith")] = None,
        ladder__variant__name__iregex: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__iregex")] = None,
        ladder__variant__name__regex: Annotated[Optional[StrictStr], Field(description="ladder__variant__name__regex")] = None,
        ladder__is_solo: Annotated[Optional[StrictStr], Field(description="ladder__is_solo")] = None,
        data__dps__lt: Annotated[Optional[StrictStr], Field(description="data__DPS__lt")] = None,
        data__dps__gt: Annotated[Optional[StrictStr], Field(description="data__DPS__gt")] = None,
        data__dps__lte: Annotated[Optional[StrictStr], Field(description="data__DPS__lte")] = None,
        data__dps__gte: Annotated[Optional[StrictStr], Field(description="data__DPS__gte")] = None,
        data__dps: Annotated[Optional[StrictStr], Field(description="data__DPS")] = None,
        data__name__exact: Annotated[Optional[StrictStr], Field(description="data__name__exact")] = None,
        data__name__iexact: Annotated[Optional[StrictStr], Field(description="data__name__iexact")] = None,
        data__name__contains: Annotated[Optional[StrictStr], Field(description="data__name__contains")] = None,
        data__name__icontains: Annotated[Optional[StrictStr], Field(description="data__name__icontains")] = None,
        data__name__istartswith: Annotated[Optional[StrictStr], Field(description="data__name__istartswith")] = None,
        data__name__startswith: Annotated[Optional[StrictStr], Field(description="data__name__startswith")] = None,
        data__name__endswith: Annotated[Optional[StrictStr], Field(description="data__name__endswith")] = None,
        data__name__iendswith: Annotated[Optional[StrictStr], Field(description="data__name__iendswith")] = None,
        data__name__iregex: Annotated[Optional[StrictStr], Field(description="data__name__iregex")] = None,
        data__name__regex: Annotated[Optional[StrictStr], Field(description="data__name__regex")] = None,
        data__name: Annotated[Optional[StrictStr], Field(description="data__name")] = None,
        data__deaths__lt: Annotated[Optional[StrictStr], Field(description="data__deaths__lt")] = None,
        data__deaths__gt: Annotated[Optional[StrictStr], Field(description="data__deaths__gt")] = None,
        data__deaths__lte: Annotated[Optional[StrictStr], Field(description="data__deaths__lte")] = None,
        data__deaths__gte: Annotated[Optional[StrictStr], Field(description="data__deaths__gte")] = None,
        data__deaths: Annotated[Optional[StrictStr], Field(description="data__deaths")] = None,
        data__debuff__lt: Annotated[Optional[StrictStr], Field(description="data__debuff__lt")] = None,
        data__debuff__gt: Annotated[Optional[StrictStr], Field(description="data__debuff__gt")] = None,
        data__debuff__lte: Annotated[Optional[StrictStr], Field(description="data__debuff__lte")] = None,
        data__debuff__gte: Annotated[Optional[StrictStr], Field(description="data__debuff__gte")] = None,
        data__debuff: Annotated[Optional[StrictStr], Field(description="data__debuff")] = None,
        data__handle__exact: Annotated[Optional[StrictStr], Field(description="data__handle__exact")] = None,
        data__handle__iexact: Annotated[Optional[StrictStr], Field(description="data__handle__iexact")] = None,
        data__handle__contains: Annotated[Optional[StrictStr], Field(description="data__handle__contains")] = None,
        data__handle__icontains: Annotated[Optional[StrictStr], Field(description="data__handle__icontains")] = None,
        data__handle__istartswith: Annotated[Optional[StrictStr], Field(description="data__handle__istartswith")] = None,
        data__handle__startswith: Annotated[Optional[StrictStr], Field(description="data__handle__startswith")] = None,
        data__handle__endswith: Annotated[Optional[StrictStr], Field(description="data__handle__endswith")] = None,
        data__handle__iendswith: Annotated[Optional[StrictStr], Field(description="data__handle__iendswith")] = None,
        data__handle__iregex: Annotated[Optional[StrictStr], Field(description="data__handle__iregex")] = None,
        data__handle__regex: Annotated[Optional[StrictStr], Field(description="data__handle__regex")] = None,
        data__handle: Annotated[Optional[StrictStr], Field(description="data__handle")] = None,
        data__misses__lt: Annotated[Optional[StrictStr], Field(description="data__misses__lt")] = None,
        data__misses__gt: Annotated[Optional[StrictStr], Field(description="data__misses__gt")] = None,
        data__misses__lte: Annotated[Optional[StrictStr], Field(description="data__misses__lte")] = None,
        data__misses__gte: Annotated[Optional[StrictStr], Field(description="data__misses__gte")] = None,
        data__misses: Annotated[Optional[StrictStr], Field(description="data__misses")] = None,
        data__crit_num__lt: Annotated[Optional[StrictStr], Field(description="data__crit_num__lt")] = None,
        data__crit_num__gt: Annotated[Optional[StrictStr], Field(description="data__crit_num__gt")] = None,
        data__crit_num__lte: Annotated[Optional[StrictStr], Field(description="data__crit_num__lte")] = None,
        data__crit_num__gte: Annotated[Optional[StrictStr], Field(description="data__crit_num__gte")] = None,
        data__crit_num: Annotated[Optional[StrictStr], Field(description="data__crit_num")] = None,
        data__heal_num__lt: Annotated[Optional[StrictStr], Field(description="data__heal_num__lt")] = None,
        data__heal_num__gt: Annotated[Optional[StrictStr], Field(description="data__heal_num__gt")] = None,
        data__heal_num__lte: Annotated[Optional[StrictStr], Field(description="data__heal_num__lte")] = None,
        data__heal_num__gte: Annotated[Optional[StrictStr], Field(description="data__heal_num__gte")] = None,
        data__heal_num: Annotated[Optional[StrictStr], Field(description="data__heal_num")] = None,
        data__heal_share__lt: Annotated[Optional[StrictStr], Field(description="data__heal_share__lt")] = None,
        data__heal_share__gt: Annotated[Optional[StrictStr], Field(description="data__heal_share__gt")] = None,
        data__heal_share__lte: Annotated[Optional[StrictStr], Field(description="data__heal_share__lte")] = None,
        data__heal_share__gte: Annotated[Optional[StrictStr], Field(description="data__heal_share__gte")] = None,
        data__heal_share: Annotated[Optional[StrictStr], Field(description="data__heal_share")] = None,
        data__combat_time__lt: Annotated[Optional[StrictStr], Field(description="data__combat_time__lt")] = None,
        data__combat_time__gt: Annotated[Optional[StrictStr], Field(description="data__combat_time__gt")] = None,
        data__combat_time__lte: Annotated[Optional[StrictStr], Field(description="data__combat_time__lte")] = None,
        data__combat_time__gte: Annotated[Optional[StrictStr], Field(description="data__combat_time__gte")] = None,
        data__combat_time: Annotated[Optional[StrictStr], Field(description="data__combat_time")] = None,
        data__crit_chance__lt: Annotated[Optional[StrictStr], Field(description="data__crit_chance__lt")] = None,
        data__crit_chance__gt: Annotated[Optional[StrictStr], Field(description="data__crit_chance__gt")] = None,
        data__crit_chance__lte: Annotated[Optional[StrictStr], Field(description="data__crit_chance__lte")] = None,
        data__crit_chance__gte: Annotated[Optional[StrictStr], Field(description="data__crit_chance__gte")] = None,
        data__crit_chance: Annotated[Optional[StrictStr], Field(description="data__crit_chance")] = None,
        data__max_one_hit__lt: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__lt")] = None,
        data__max_one_hit__gt: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__gt")] = None,
        data__max_one_hit__lte: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__lte")] = None,
        data__max_one_hit__gte: Annotated[Optional[StrictStr], Field(description="data__max_one_hit__gte")] = None,
        data__max_one_hit: Annotated[Optional[StrictStr], Field(description="data__max_one_hit")] = None,
        data__total_heals__lt: Annotated[Optional[StrictStr], Field(description="data__total_heals__lt")] = None,
        data__total_heals__gt: Annotated[Optional[StrictStr], Field(description="data__total_heals__gt")] = None,
        data__total_heals__lte: Annotated[Optional[StrictStr], Field(description="data__total_heals__lte")] = None,
        data__total_heals__gte: Annotated[Optional[StrictStr], Field(description="data__total_heals__gte")] = None,
        data__total_heals: Annotated[Optional[StrictStr], Field(description="data__total_heals")] = None,
        data__damage_share__lt: Annotated[Optional[StrictStr], Field(description="data__damage_share__lt")] = None,
        data__damage_share__gt: Annotated[Optional[StrictStr], Field(description="data__damage_share__gt")] = None,
        data__damage_share__lte: Annotated[Optional[StrictStr], Field(description="data__damage_share__lte")] = None,
        data__damage_share__gte: Annotated[Optional[StrictStr], Field(description="data__damage_share__gte")] = None,
        data__damage_share: Annotated[Optional[StrictStr], Field(description="data__damage_share")] = None,
        data__hull_attacks__lt: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__lt")] = None,
        data__hull_attacks__gt: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__gt")] = None,
        data__hull_attacks__lte: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__lte")] = None,
        data__hull_attacks__gte: Annotated[Optional[StrictStr], Field(description="data__hull_attacks__gte")] = None,
        data__hull_attacks: Annotated[Optional[StrictStr], Field(description="data__hull_attacks")] = None,
        data__total_damage__lt: Annotated[Optional[StrictStr], Field(description="data__total_damage__lt")] = None,
        data__total_damage__gt: Annotated[Optional[StrictStr], Field(description="data__total_damage__gt")] = None,
        data__total_damage__lte: Annotated[Optional[StrictStr], Field(description="data__total_damage__lte")] = None,
        data__total_damage__gte: Annotated[Optional[StrictStr], Field(description="data__total_damage__gte")] = None,
        data__total_damage: Annotated[Optional[StrictStr], Field(description="data__total_damage")] = None,
        data__heal_crit_num__lt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__lt")] = None,
        data__heal_crit_num__gt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__gt")] = None,
        data__heal_crit_num__lte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__lte")] = None,
        data__heal_crit_num__gte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num__gte")] = None,
        data__heal_crit_num: Annotated[Optional[StrictStr], Field(description="data__heal_crit_num")] = None,
        data__total_attacks__lt: Annotated[Optional[StrictStr], Field(description="data__total_attacks__lt")] = None,
        data__total_attacks__gt: Annotated[Optional[StrictStr], Field(description="data__total_attacks__gt")] = None,
        data__total_attacks__lte: Annotated[Optional[StrictStr], Field(description="data__total_attacks__lte")] = None,
        data__total_attacks__gte: Annotated[Optional[StrictStr], Field(description="data__total_attacks__gte")] = None,
        data__total_attacks: Annotated[Optional[StrictStr], Field(description="data__total_attacks")] = None,
        data__attacks_in_num__lt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__lt")] = None,
        data__attacks_in_num__gt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__gt")] = None,
        data__attacks_in_num__lte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__lte")] = None,
        data__attacks_in_num__gte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num__gte")] = None,
        data__attacks_in_num: Annotated[Optional[StrictStr], Field(description="data__attacks_in_num")] = None,
        data__attacks_in_share__lt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__lt")] = None,
        data__attacks_in_share__gt: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__gt")] = None,
        data__attacks_in_share__lte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__lte")] = None,
        data__attacks_in_share__gte: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share__gte")] = None,
        data__attacks_in_share: Annotated[Optional[StrictStr], Field(description="data__attacks_in_share")] = None,
        data__heal_crit_chance__lt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__lt")] = None,
        data__heal_crit_chance__gt: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__gt")] = None,
        data__heal_crit_chance__lte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__lte")] = None,
        data__heal_crit_chance__gte: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance__gte")] = None,
        data__heal_crit_chance: Annotated[Optional[StrictStr], Field(description="data__heal_crit_chance")] = None,
        data__taken_damage_share__lt: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__lt")] = None,
        data__taken_damage_share__gt: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__gt")] = None,
        data__taken_damage_share__lte: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__lte")] = None,
        data__taken_damage_share__gte: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share__gte")] = None,
        data__taken_damage_share: Annotated[Optional[StrictStr], Field(description="data__taken_damage_share")] = None,
        data__total_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__lt")] = None,
        data__total_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__gt")] = None,
        data__total_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__lte")] = None,
        data__total_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken__gte")] = None,
        data__total_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_damage_taken")] = None,
        data__total_hull_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__lt")] = None,
        data__total_hull_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__gt")] = None,
        data__total_hull_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__lte")] = None,
        data__total_hull_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken__gte")] = None,
        data__total_hull_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_hull_damage_taken")] = None,
        data__total_shield_damage_taken__lt: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__lt")] = None,
        data__total_shield_damage_taken__gt: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__gt")] = None,
        data__total_shield_damage_taken__lte: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__lte")] = None,
        data__total_shield_damage_taken__gte: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken__gte")] = None,
        data__total_shield_damage_taken: Annotated[Optional[StrictStr], Field(description="data__total_shield_damage_taken")] = None,
        data__build__exact: Annotated[Optional[StrictStr], Field(description="data__build__exact")] = None,
        data__build__iexact: Annotated[Optional[StrictStr], Field(description="data__build__iexact")] = None,
        data__build__contains: Annotated[Optional[StrictStr], Field(description="data__build__contains")] = None,
        data__build__icontains: Annotated[Optional[StrictStr], Field(description="data__build__icontains")] = None,
        data__build__istartswith: Annotated[Optional[StrictStr], Field(description="data__build__istartswith")] = None,
        data__build__startswith: Annotated[Optional[StrictStr], Field(description="data__build__startswith")] = None,
        data__build__endswith: Annotated[Optional[StrictStr], Field(description="data__build__endswith")] = None,
        data__build__iendswith: Annotated[Optional[StrictStr], Field(description="data__build__iendswith")] = None,
        data__build__iregex: Annotated[Optional[StrictStr], Field(description="data__build__iregex")] = None,
        data__build__regex: Annotated[Optional[StrictStr], Field(description="data__build__regex")] = None,
        data__build: Annotated[Optional[StrictStr], Field(description="data__build")] = None,
        ordering: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ladder_entries_list

        LadderEntry API

        :param player: player
        :type player: str
        :param player__iexact: player__iexact
        :type player__iexact: str
        :param player__contains: player__contains
        :type player__contains: str
        :param player__icontains: player__icontains
        :type player__icontains: str
        :param player__istartswith: player__istartswith
        :type player__istartswith: str
        :param player__startswith: player__startswith
        :type player__startswith: str
        :param player__endswith: player__endswith
        :type player__endswith: str
        :param player__iendswith: player__iendswith
        :type player__iendswith: str
        :param player__iregex: player__iregex
        :type player__iregex: str
        :param player__regex: player__regex
        :type player__regex: str
        :param ladder: ladder
        :type ladder: str
        :param ladder__name: ladder__name
        :type ladder__name: str
        :param ladder__name__iexact: ladder__name__iexact
        :type ladder__name__iexact: str
        :param ladder__name__contains: ladder__name__contains
        :type ladder__name__contains: str
        :param ladder__name__icontains: ladder__name__icontains
        :type ladder__name__icontains: str
        :param ladder__name__istartswith: ladder__name__istartswith
        :type ladder__name__istartswith: str
        :param ladder__name__startswith: ladder__name__startswith
        :type ladder__name__startswith: str
        :param ladder__name__endswith: ladder__name__endswith
        :type ladder__name__endswith: str
        :param ladder__name__iendswith: ladder__name__iendswith
        :type ladder__name__iendswith: str
        :param ladder__name__iregex: ladder__name__iregex
        :type ladder__name__iregex: str
        :param ladder__name__regex: ladder__name__regex
        :type ladder__name__regex: str
        :param ladder__difficulty: ladder__difficulty
        :type ladder__difficulty: str
        :param ladder__difficulty__iexact: ladder__difficulty__iexact
        :type ladder__difficulty__iexact: str
        :param ladder__difficulty__contains: ladder__difficulty__contains
        :type ladder__difficulty__contains: str
        :param ladder__difficulty__icontains: ladder__difficulty__icontains
        :type ladder__difficulty__icontains: str
        :param ladder__difficulty__istartswith: ladder__difficulty__istartswith
        :type ladder__difficulty__istartswith: str
        :param ladder__difficulty__startswith: ladder__difficulty__startswith
        :type ladder__difficulty__startswith: str
        :param ladder__difficulty__endswith: ladder__difficulty__endswith
        :type ladder__difficulty__endswith: str
        :param ladder__difficulty__iendswith: ladder__difficulty__iendswith
        :type ladder__difficulty__iendswith: str
        :param ladder__difficulty__iregex: ladder__difficulty__iregex
        :type ladder__difficulty__iregex: str
        :param ladder__difficulty__regex: ladder__difficulty__regex
        :type ladder__difficulty__regex: str
        :param ladder__variant__name: ladder__variant__name
        :type ladder__variant__name: str
        :param ladder__variant__name__iexact: ladder__variant__name__iexact
        :type ladder__variant__name__iexact: str
        :param ladder__variant__name__contains: ladder__variant__name__contains
        :type ladder__variant__name__contains: str
        :param ladder__variant__name__icontains: ladder__variant__name__icontains
        :type ladder__variant__name__icontains: str
        :param ladder__variant__name__istartswith: ladder__variant__name__istartswith
        :type ladder__variant__name__istartswith: str
        :param ladder__variant__name__startswith: ladder__variant__name__startswith
        :type ladder__variant__name__startswith: str
        :param ladder__variant__name__endswith: ladder__variant__name__endswith
        :type ladder__variant__name__endswith: str
        :param ladder__variant__name__iendswith: ladder__variant__name__iendswith
        :type ladder__variant__name__iendswith: str
        :param ladder__variant__name__iregex: ladder__variant__name__iregex
        :type ladder__variant__name__iregex: str
        :param ladder__variant__name__regex: ladder__variant__name__regex
        :type ladder__variant__name__regex: str
        :param ladder__is_solo: ladder__is_solo
        :type ladder__is_solo: str
        :param data__dps__lt: data__DPS__lt
        :type data__dps__lt: str
        :param data__dps__gt: data__DPS__gt
        :type data__dps__gt: str
        :param data__dps__lte: data__DPS__lte
        :type data__dps__lte: str
        :param data__dps__gte: data__DPS__gte
        :type data__dps__gte: str
        :param data__dps: data__DPS
        :type data__dps: str
        :param data__name__exact: data__name__exact
        :type data__name__exact: str
        :param data__name__iexact: data__name__iexact
        :type data__name__iexact: str
        :param data__name__contains: data__name__contains
        :type data__name__contains: str
        :param data__name__icontains: data__name__icontains
        :type data__name__icontains: str
        :param data__name__istartswith: data__name__istartswith
        :type data__name__istartswith: str
        :param data__name__startswith: data__name__startswith
        :type data__name__startswith: str
        :param data__name__endswith: data__name__endswith
        :type data__name__endswith: str
        :param data__name__iendswith: data__name__iendswith
        :type data__name__iendswith: str
        :param data__name__iregex: data__name__iregex
        :type data__name__iregex: str
        :param data__name__regex: data__name__regex
        :type data__name__regex: str
        :param data__name: data__name
        :type data__name: str
        :param data__deaths__lt: data__deaths__lt
        :type data__deaths__lt: str
        :param data__deaths__gt: data__deaths__gt
        :type data__deaths__gt: str
        :param data__deaths__lte: data__deaths__lte
        :type data__deaths__lte: str
        :param data__deaths__gte: data__deaths__gte
        :type data__deaths__gte: str
        :param data__deaths: data__deaths
        :type data__deaths: str
        :param data__debuff__lt: data__debuff__lt
        :type data__debuff__lt: str
        :param data__debuff__gt: data__debuff__gt
        :type data__debuff__gt: str
        :param data__debuff__lte: data__debuff__lte
        :type data__debuff__lte: str
        :param data__debuff__gte: data__debuff__gte
        :type data__debuff__gte: str
        :param data__debuff: data__debuff
        :type data__debuff: str
        :param data__handle__exact: data__handle__exact
        :type data__handle__exact: str
        :param data__handle__iexact: data__handle__iexact
        :type data__handle__iexact: str
        :param data__handle__contains: data__handle__contains
        :type data__handle__contains: str
        :param data__handle__icontains: data__handle__icontains
        :type data__handle__icontains: str
        :param data__handle__istartswith: data__handle__istartswith
        :type data__handle__istartswith: str
        :param data__handle__startswith: data__handle__startswith
        :type data__handle__startswith: str
        :param data__handle__endswith: data__handle__endswith
        :type data__handle__endswith: str
        :param data__handle__iendswith: data__handle__iendswith
        :type data__handle__iendswith: str
        :param data__handle__iregex: data__handle__iregex
        :type data__handle__iregex: str
        :param data__handle__regex: data__handle__regex
        :type data__handle__regex: str
        :param data__handle: data__handle
        :type data__handle: str
        :param data__misses__lt: data__misses__lt
        :type data__misses__lt: str
        :param data__misses__gt: data__misses__gt
        :type data__misses__gt: str
        :param data__misses__lte: data__misses__lte
        :type data__misses__lte: str
        :param data__misses__gte: data__misses__gte
        :type data__misses__gte: str
        :param data__misses: data__misses
        :type data__misses: str
        :param data__crit_num__lt: data__crit_num__lt
        :type data__crit_num__lt: str
        :param data__crit_num__gt: data__crit_num__gt
        :type data__crit_num__gt: str
        :param data__crit_num__lte: data__crit_num__lte
        :type data__crit_num__lte: str
        :param data__crit_num__gte: data__crit_num__gte
        :type data__crit_num__gte: str
        :param data__crit_num: data__crit_num
        :type data__crit_num: str
        :param data__heal_num__lt: data__heal_num__lt
        :type data__heal_num__lt: str
        :param data__heal_num__gt: data__heal_num__gt
        :type data__heal_num__gt: str
        :param data__heal_num__lte: data__heal_num__lte
        :type data__heal_num__lte: str
        :param data__heal_num__gte: data__heal_num__gte
        :type data__heal_num__gte: str
        :param data__heal_num: data__heal_num
        :type data__heal_num: str
        :param data__heal_share__lt: data__heal_share__lt
        :type data__heal_share__lt: str
        :param data__heal_share__gt: data__heal_share__gt
        :type data__heal_share__gt: str
        :param data__heal_share__lte: data__heal_share__lte
        :type data__heal_share__lte: str
        :param data__heal_share__gte: data__heal_share__gte
        :type data__heal_share__gte: str
        :param data__heal_share: data__heal_share
        :type data__heal_share: str
        :param data__combat_time__lt: data__combat_time__lt
        :type data__combat_time__lt: str
        :param data__combat_time__gt: data__combat_time__gt
        :type data__combat_time__gt: str
        :param data__combat_time__lte: data__combat_time__lte
        :type data__combat_time__lte: str
        :param data__combat_time__gte: data__combat_time__gte
        :type data__combat_time__gte: str
        :param data__combat_time: data__combat_time
        :type data__combat_time: str
        :param data__crit_chance__lt: data__crit_chance__lt
        :type data__crit_chance__lt: str
        :param data__crit_chance__gt: data__crit_chance__gt
        :type data__crit_chance__gt: str
        :param data__crit_chance__lte: data__crit_chance__lte
        :type data__crit_chance__lte: str
        :param data__crit_chance__gte: data__crit_chance__gte
        :type data__crit_chance__gte: str
        :param data__crit_chance: data__crit_chance
        :type data__crit_chance: str
        :param data__max_one_hit__lt: data__max_one_hit__lt
        :type data__max_one_hit__lt: str
        :param data__max_one_hit__gt: data__max_one_hit__gt
        :type data__max_one_hit__gt: str
        :param data__max_one_hit__lte: data__max_one_hit__lte
        :type data__max_one_hit__lte: str
        :param data__max_one_hit__gte: data__max_one_hit__gte
        :type data__max_one_hit__gte: str
        :param data__max_one_hit: data__max_one_hit
        :type data__max_one_hit: str
        :param data__total_heals__lt: data__total_heals__lt
        :type data__total_heals__lt: str
        :param data__total_heals__gt: data__total_heals__gt
        :type data__total_heals__gt: str
        :param data__total_heals__lte: data__total_heals__lte
        :type data__total_heals__lte: str
        :param data__total_heals__gte: data__total_heals__gte
        :type data__total_heals__gte: str
        :param data__total_heals: data__total_heals
        :type data__total_heals: str
        :param data__damage_share__lt: data__damage_share__lt
        :type data__damage_share__lt: str
        :param data__damage_share__gt: data__damage_share__gt
        :type data__damage_share__gt: str
        :param data__damage_share__lte: data__damage_share__lte
        :type data__damage_share__lte: str
        :param data__damage_share__gte: data__damage_share__gte
        :type data__damage_share__gte: str
        :param data__damage_share: data__damage_share
        :type data__damage_share: str
        :param data__hull_attacks__lt: data__hull_attacks__lt
        :type data__hull_attacks__lt: str
        :param data__hull_attacks__gt: data__hull_attacks__gt
        :type data__hull_attacks__gt: str
        :param data__hull_attacks__lte: data__hull_attacks__lte
        :type data__hull_attacks__lte: str
        :param data__hull_attacks__gte: data__hull_attacks__gte
        :type data__hull_attacks__gte: str
        :param data__hull_attacks: data__hull_attacks
        :type data__hull_attacks: str
        :param data__total_damage__lt: data__total_damage__lt
        :type data__total_damage__lt: str
        :param data__total_damage__gt: data__total_damage__gt
        :type data__total_damage__gt: str
        :param data__total_damage__lte: data__total_damage__lte
        :type data__total_damage__lte: str
        :param data__total_damage__gte: data__total_damage__gte
        :type data__total_damage__gte: str
        :param data__total_damage: data__total_damage
        :type data__total_damage: str
        :param data__heal_crit_num__lt: data__heal_crit_num__lt
        :type data__heal_crit_num__lt: str
        :param data__heal_crit_num__gt: data__heal_crit_num__gt
        :type data__heal_crit_num__gt: str
        :param data__heal_crit_num__lte: data__heal_crit_num__lte
        :type data__heal_crit_num__lte: str
        :param data__heal_crit_num__gte: data__heal_crit_num__gte
        :type data__heal_crit_num__gte: str
        :param data__heal_crit_num: data__heal_crit_num
        :type data__heal_crit_num: str
        :param data__total_attacks__lt: data__total_attacks__lt
        :type data__total_attacks__lt: str
        :param data__total_attacks__gt: data__total_attacks__gt
        :type data__total_attacks__gt: str
        :param data__total_attacks__lte: data__total_attacks__lte
        :type data__total_attacks__lte: str
        :param data__total_attacks__gte: data__total_attacks__gte
        :type data__total_attacks__gte: str
        :param data__total_attacks: data__total_attacks
        :type data__total_attacks: str
        :param data__attacks_in_num__lt: data__attacks_in_num__lt
        :type data__attacks_in_num__lt: str
        :param data__attacks_in_num__gt: data__attacks_in_num__gt
        :type data__attacks_in_num__gt: str
        :param data__attacks_in_num__lte: data__attacks_in_num__lte
        :type data__attacks_in_num__lte: str
        :param data__attacks_in_num__gte: data__attacks_in_num__gte
        :type data__attacks_in_num__gte: str
        :param data__attacks_in_num: data__attacks_in_num
        :type data__attacks_in_num: str
        :param data__attacks_in_share__lt: data__attacks_in_share__lt
        :type data__attacks_in_share__lt: str
        :param data__attacks_in_share__gt: data__attacks_in_share__gt
        :type data__attacks_in_share__gt: str
        :param data__attacks_in_share__lte: data__attacks_in_share__lte
        :type data__attacks_in_share__lte: str
        :param data__attacks_in_share__gte: data__attacks_in_share__gte
        :type data__attacks_in_share__gte: str
        :param data__attacks_in_share: data__attacks_in_share
        :type data__attacks_in_share: str
        :param data__heal_crit_chance__lt: data__heal_crit_chance__lt
        :type data__heal_crit_chance__lt: str
        :param data__heal_crit_chance__gt: data__heal_crit_chance__gt
        :type data__heal_crit_chance__gt: str
        :param data__heal_crit_chance__lte: data__heal_crit_chance__lte
        :type data__heal_crit_chance__lte: str
        :param data__heal_crit_chance__gte: data__heal_crit_chance__gte
        :type data__heal_crit_chance__gte: str
        :param data__heal_crit_chance: data__heal_crit_chance
        :type data__heal_crit_chance: str
        :param data__taken_damage_share__lt: data__taken_damage_share__lt
        :type data__taken_damage_share__lt: str
        :param data__taken_damage_share__gt: data__taken_damage_share__gt
        :type data__taken_damage_share__gt: str
        :param data__taken_damage_share__lte: data__taken_damage_share__lte
        :type data__taken_damage_share__lte: str
        :param data__taken_damage_share__gte: data__taken_damage_share__gte
        :type data__taken_damage_share__gte: str
        :param data__taken_damage_share: data__taken_damage_share
        :type data__taken_damage_share: str
        :param data__total_damage_taken__lt: data__total_damage_taken__lt
        :type data__total_damage_taken__lt: str
        :param data__total_damage_taken__gt: data__total_damage_taken__gt
        :type data__total_damage_taken__gt: str
        :param data__total_damage_taken__lte: data__total_damage_taken__lte
        :type data__total_damage_taken__lte: str
        :param data__total_damage_taken__gte: data__total_damage_taken__gte
        :type data__total_damage_taken__gte: str
        :param data__total_damage_taken: data__total_damage_taken
        :type data__total_damage_taken: str
        :param data__total_hull_damage_taken__lt: data__total_hull_damage_taken__lt
        :type data__total_hull_damage_taken__lt: str
        :param data__total_hull_damage_taken__gt: data__total_hull_damage_taken__gt
        :type data__total_hull_damage_taken__gt: str
        :param data__total_hull_damage_taken__lte: data__total_hull_damage_taken__lte
        :type data__total_hull_damage_taken__lte: str
        :param data__total_hull_damage_taken__gte: data__total_hull_damage_taken__gte
        :type data__total_hull_damage_taken__gte: str
        :param data__total_hull_damage_taken: data__total_hull_damage_taken
        :type data__total_hull_damage_taken: str
        :param data__total_shield_damage_taken__lt: data__total_shield_damage_taken__lt
        :type data__total_shield_damage_taken__lt: str
        :param data__total_shield_damage_taken__gt: data__total_shield_damage_taken__gt
        :type data__total_shield_damage_taken__gt: str
        :param data__total_shield_damage_taken__lte: data__total_shield_damage_taken__lte
        :type data__total_shield_damage_taken__lte: str
        :param data__total_shield_damage_taken__gte: data__total_shield_damage_taken__gte
        :type data__total_shield_damage_taken__gte: str
        :param data__total_shield_damage_taken: data__total_shield_damage_taken
        :type data__total_shield_damage_taken: str
        :param data__build__exact: data__build__exact
        :type data__build__exact: str
        :param data__build__iexact: data__build__iexact
        :type data__build__iexact: str
        :param data__build__contains: data__build__contains
        :type data__build__contains: str
        :param data__build__icontains: data__build__icontains
        :type data__build__icontains: str
        :param data__build__istartswith: data__build__istartswith
        :type data__build__istartswith: str
        :param data__build__startswith: data__build__startswith
        :type data__build__startswith: str
        :param data__build__endswith: data__build__endswith
        :type data__build__endswith: str
        :param data__build__iendswith: data__build__iendswith
        :type data__build__iendswith: str
        :param data__build__iregex: data__build__iregex
        :type data__build__iregex: str
        :param data__build__regex: data__build__regex
        :type data__build__regex: str
        :param data__build: data__build
        :type data__build: str
        :param ordering: Which field to use when ordering the results.
        :type ordering: str
        :param page: A page number within the paginated result set.
        :type page: int
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ladder_entries_list_serialize(
            player=player,
            player__iexact=player__iexact,
            player__contains=player__contains,
            player__icontains=player__icontains,
            player__istartswith=player__istartswith,
            player__startswith=player__startswith,
            player__endswith=player__endswith,
            player__iendswith=player__iendswith,
            player__iregex=player__iregex,
            player__regex=player__regex,
            ladder=ladder,
            ladder__name=ladder__name,
            ladder__name__iexact=ladder__name__iexact,
            ladder__name__contains=ladder__name__contains,
            ladder__name__icontains=ladder__name__icontains,
            ladder__name__istartswith=ladder__name__istartswith,
            ladder__name__startswith=ladder__name__startswith,
            ladder__name__endswith=ladder__name__endswith,
            ladder__name__iendswith=ladder__name__iendswith,
            ladder__name__iregex=ladder__name__iregex,
            ladder__name__regex=ladder__name__regex,
            ladder__difficulty=ladder__difficulty,
            ladder__difficulty__iexact=ladder__difficulty__iexact,
            ladder__difficulty__contains=ladder__difficulty__contains,
            ladder__difficulty__icontains=ladder__difficulty__icontains,
            ladder__difficulty__istartswith=ladder__difficulty__istartswith,
            ladder__difficulty__startswith=ladder__difficulty__startswith,
            ladder__difficulty__endswith=ladder__difficulty__endswith,
            ladder__difficulty__iendswith=ladder__difficulty__iendswith,
            ladder__difficulty__iregex=ladder__difficulty__iregex,
            ladder__difficulty__regex=ladder__difficulty__regex,
            ladder__variant__name=ladder__variant__name,
            ladder__variant__name__iexact=ladder__variant__name__iexact,
            ladder__variant__name__contains=ladder__variant__name__contains,
            ladder__variant__name__icontains=ladder__variant__name__icontains,
            ladder__variant__name__istartswith=ladder__variant__name__istartswith,
            ladder__variant__name__startswith=ladder__variant__name__startswith,
            ladder__variant__name__endswith=ladder__variant__name__endswith,
            ladder__variant__name__iendswith=ladder__variant__name__iendswith,
            ladder__variant__name__iregex=ladder__variant__name__iregex,
            ladder__variant__name__regex=ladder__variant__name__regex,
            ladder__is_solo=ladder__is_solo,
            data__dps__lt=data__dps__lt,
            data__dps__gt=data__dps__gt,
            data__dps__lte=data__dps__lte,
            data__dps__gte=data__dps__gte,
            data__dps=data__dps,
            data__name__exact=data__name__exact,
            data__name__iexact=data__name__iexact,
            data__name__contains=data__name__contains,
            data__name__icontains=data__name__icontains,
            data__name__istartswith=data__name__istartswith,
            data__name__startswith=data__name__startswith,
            data__name__endswith=data__name__endswith,
            data__name__iendswith=data__name__iendswith,
            data__name__iregex=data__name__iregex,
            data__name__regex=data__name__regex,
            data__name=data__name,
            data__deaths__lt=data__deaths__lt,
            data__deaths__gt=data__deaths__gt,
            data__deaths__lte=data__deaths__lte,
            data__deaths__gte=data__deaths__gte,
            data__deaths=data__deaths,
            data__debuff__lt=data__debuff__lt,
            data__debuff__gt=data__debuff__gt,
            data__debuff__lte=data__debuff__lte,
            data__debuff__gte=data__debuff__gte,
            data__debuff=data__debuff,
            data__handle__exact=data__handle__exact,
            data__handle__iexact=data__handle__iexact,
            data__handle__contains=data__handle__contains,
            data__handle__icontains=data__handle__icontains,
            data__handle__istartswith=data__handle__istartswith,
            data__handle__startswith=data__handle__startswith,
            data__handle__endswith=data__handle__endswith,
            data__handle__iendswith=data__handle__iendswith,
            data__handle__iregex=data__handle__iregex,
            data__handle__regex=data__handle__regex,
            data__handle=data__handle,
            data__misses__lt=data__misses__lt,
            data__misses__gt=data__misses__gt,
            data__misses__lte=data__misses__lte,
            data__misses__gte=data__misses__gte,
            data__misses=data__misses,
            data__crit_num__lt=data__crit_num__lt,
            data__crit_num__gt=data__crit_num__gt,
            data__crit_num__lte=data__crit_num__lte,
            data__crit_num__gte=data__crit_num__gte,
            data__crit_num=data__crit_num,
            data__heal_num__lt=data__heal_num__lt,
            data__heal_num__gt=data__heal_num__gt,
            data__heal_num__lte=data__heal_num__lte,
            data__heal_num__gte=data__heal_num__gte,
            data__heal_num=data__heal_num,
            data__heal_share__lt=data__heal_share__lt,
            data__heal_share__gt=data__heal_share__gt,
            data__heal_share__lte=data__heal_share__lte,
            data__heal_share__gte=data__heal_share__gte,
            data__heal_share=data__heal_share,
            data__combat_time__lt=data__combat_time__lt,
            data__combat_time__gt=data__combat_time__gt,
            data__combat_time__lte=data__combat_time__lte,
            data__combat_time__gte=data__combat_time__gte,
            data__combat_time=data__combat_time,
            data__crit_chance__lt=data__crit_chance__lt,
            data__crit_chance__gt=data__crit_chance__gt,
            data__crit_chance__lte=data__crit_chance__lte,
            data__crit_chance__gte=data__crit_chance__gte,
            data__crit_chance=data__crit_chance,
            data__max_one_hit__lt=data__max_one_hit__lt,
            data__max_one_hit__gt=data__max_one_hit__gt,
            data__max_one_hit__lte=data__max_one_hit__lte,
            data__max_one_hit__gte=data__max_one_hit__gte,
            data__max_one_hit=data__max_one_hit,
            data__total_heals__lt=data__total_heals__lt,
            data__total_heals__gt=data__total_heals__gt,
            data__total_heals__lte=data__total_heals__lte,
            data__total_heals__gte=data__total_heals__gte,
            data__total_heals=data__total_heals,
            data__damage_share__lt=data__damage_share__lt,
            data__damage_share__gt=data__damage_share__gt,
            data__damage_share__lte=data__damage_share__lte,
            data__damage_share__gte=data__damage_share__gte,
            data__damage_share=data__damage_share,
            data__hull_attacks__lt=data__hull_attacks__lt,
            data__hull_attacks__gt=data__hull_attacks__gt,
            data__hull_attacks__lte=data__hull_attacks__lte,
            data__hull_attacks__gte=data__hull_attacks__gte,
            data__hull_attacks=data__hull_attacks,
            data__total_damage__lt=data__total_damage__lt,
            data__total_damage__gt=data__total_damage__gt,
            data__total_damage__lte=data__total_damage__lte,
            data__total_damage__gte=data__total_damage__gte,
            data__total_damage=data__total_damage,
            data__heal_crit_num__lt=data__heal_crit_num__lt,
            data__heal_crit_num__gt=data__heal_crit_num__gt,
            data__heal_crit_num__lte=data__heal_crit_num__lte,
            data__heal_crit_num__gte=data__heal_crit_num__gte,
            data__heal_crit_num=data__heal_crit_num,
            data__total_attacks__lt=data__total_attacks__lt,
            data__total_attacks__gt=data__total_attacks__gt,
            data__total_attacks__lte=data__total_attacks__lte,
            data__total_attacks__gte=data__total_attacks__gte,
            data__total_attacks=data__total_attacks,
            data__attacks_in_num__lt=data__attacks_in_num__lt,
            data__attacks_in_num__gt=data__attacks_in_num__gt,
            data__attacks_in_num__lte=data__attacks_in_num__lte,
            data__attacks_in_num__gte=data__attacks_in_num__gte,
            data__attacks_in_num=data__attacks_in_num,
            data__attacks_in_share__lt=data__attacks_in_share__lt,
            data__attacks_in_share__gt=data__attacks_in_share__gt,
            data__attacks_in_share__lte=data__attacks_in_share__lte,
            data__attacks_in_share__gte=data__attacks_in_share__gte,
            data__attacks_in_share=data__attacks_in_share,
            data__heal_crit_chance__lt=data__heal_crit_chance__lt,
            data__heal_crit_chance__gt=data__heal_crit_chance__gt,
            data__heal_crit_chance__lte=data__heal_crit_chance__lte,
            data__heal_crit_chance__gte=data__heal_crit_chance__gte,
            data__heal_crit_chance=data__heal_crit_chance,
            data__taken_damage_share__lt=data__taken_damage_share__lt,
            data__taken_damage_share__gt=data__taken_damage_share__gt,
            data__taken_damage_share__lte=data__taken_damage_share__lte,
            data__taken_damage_share__gte=data__taken_damage_share__gte,
            data__taken_damage_share=data__taken_damage_share,
            data__total_damage_taken__lt=data__total_damage_taken__lt,
            data__total_damage_taken__gt=data__total_damage_taken__gt,
            data__total_damage_taken__lte=data__total_damage_taken__lte,
            data__total_damage_taken__gte=data__total_damage_taken__gte,
            data__total_damage_taken=data__total_damage_taken,
            data__total_hull_damage_taken__lt=data__total_hull_damage_taken__lt,
            data__total_hull_damage_taken__gt=data__total_hull_damage_taken__gt,
            data__total_hull_damage_taken__lte=data__total_hull_damage_taken__lte,
            data__total_hull_damage_taken__gte=data__total_hull_damage_taken__gte,
            data__total_hull_damage_taken=data__total_hull_damage_taken,
            data__total_shield_damage_taken__lt=data__total_shield_damage_taken__lt,
            data__total_shield_damage_taken__gt=data__total_shield_damage_taken__gt,
            data__total_shield_damage_taken__lte=data__total_shield_damage_taken__lte,
            data__total_shield_damage_taken__gte=data__total_shield_damage_taken__gte,
            data__total_shield_damage_taken=data__total_shield_damage_taken,
            data__build__exact=data__build__exact,
            data__build__iexact=data__build__iexact,
            data__build__contains=data__build__contains,
            data__build__icontains=data__build__icontains,
            data__build__istartswith=data__build__istartswith,
            data__build__startswith=data__build__startswith,
            data__build__endswith=data__build__endswith,
            data__build__iendswith=data__build__iendswith,
            data__build__iregex=data__build__iregex,
            data__build__regex=data__build__regex,
            data__build=data__build,
            ordering=ordering,
            page=page,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "LadderEntriesList200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ladder_entries_list_serialize(
        self,
        player,
        player__iexact,
        player__contains,
        player__icontains,
        player__istartswith,
        player__startswith,
        player__endswith,
        player__iendswith,
        player__iregex,
        player__regex,
        ladder,
        ladder__name,
        ladder__name__iexact,
        ladder__name__contains,
        ladder__name__icontains,
        ladder__name__istartswith,
        ladder__name__startswith,
        ladder__name__endswith,
        ladder__name__iendswith,
        ladder__name__iregex,
        ladder__name__regex,
        ladder__difficulty,
        ladder__difficulty__iexact,
        ladder__difficulty__contains,
        ladder__difficulty__icontains,
        ladder__difficulty__istartswith,
        ladder__difficulty__startswith,
        ladder__difficulty__endswith,
        ladder__difficulty__iendswith,
        ladder__difficulty__iregex,
        ladder__difficulty__regex,
        ladder__variant__name,
        ladder__variant__name__iexact,
        ladder__variant__name__contains,
        ladder__variant__name__icontains,
        ladder__variant__name__istartswith,
        ladder__variant__name__startswith,
        ladder__variant__name__endswith,
        ladder__variant__name__iendswith,
        ladder__variant__name__iregex,
        ladder__variant__name__regex,
        ladder__is_solo,
        data__dps__lt,
        data__dps__gt,
        data__dps__lte,
        data__dps__gte,
        data__dps,
        data__name__exact,
        data__name__iexact,
        data__name__contains,
        data__name__icontains,
        data__name__istartswith,
        data__name__startswith,
        data__name__endswith,
        data__name__iendswith,
        data__name__iregex,
        data__name__regex,
        data__name,
        data__deaths__lt,
        data__deaths__gt,
        data__deaths__lte,
        data__deaths__gte,
        data__deaths,
        data__debuff__lt,
        data__debuff__gt,
        data__debuff__lte,
        data__debuff__gte,
        data__debuff,
        data__handle__exact,
        data__handle__iexact,
        data__handle__contains,
        data__handle__icontains,
        data__handle__istartswith,
        data__handle__startswith,
        data__handle__endswith,
        data__handle__iendswith,
        data__handle__iregex,
        data__handle__regex,
        data__handle,
        data__misses__lt,
        data__misses__gt,
        data__misses__lte,
        data__misses__gte,
        data__misses,
        data__crit_num__lt,
        data__crit_num__gt,
        data__crit_num__lte,
        data__crit_num__gte,
        data__crit_num,
        data__heal_num__lt,
        data__heal_num__gt,
        data__heal_num__lte,
        data__heal_num__gte,
        data__heal_num,
        data__heal_share__lt,
        data__heal_share__gt,
        data__heal_share__lte,
        data__heal_share__gte,
        data__heal_share,
        data__combat_time__lt,
        data__combat_time__gt,
        data__combat_time__lte,
        data__combat_time__gte,
        data__combat_time,
        data__crit_chance__lt,
        data__crit_chance__gt,
        data__crit_chance__lte,
        data__crit_chance__gte,
        data__crit_chance,
        data__max_one_hit__lt,
        data__max_one_hit__gt,
        data__max_one_hit__lte,
        data__max_one_hit__gte,
        data__max_one_hit,
        data__total_heals__lt,
        data__total_heals__gt,
        data__total_heals__lte,
        data__total_heals__gte,
        data__total_heals,
        data__damage_share__lt,
        data__damage_share__gt,
        data__damage_share__lte,
        data__damage_share__gte,
        data__damage_share,
        data__hull_attacks__lt,
        data__hull_attacks__gt,
        data__hull_attacks__lte,
        data__hull_attacks__gte,
        data__hull_attacks,
        data__total_damage__lt,
        data__total_damage__gt,
        data__total_damage__lte,
        data__total_damage__gte,
        data__total_damage,
        data__heal_crit_num__lt,
        data__heal_crit_num__gt,
        data__heal_crit_num__lte,
        data__heal_crit_num__gte,
        data__heal_crit_num,
        data__total_attacks__lt,
        data__total_attacks__gt,
        data__total_attacks__lte,
        data__total_attacks__gte,
        data__total_attacks,
        data__attacks_in_num__lt,
        data__attacks_in_num__gt,
        data__attacks_in_num__lte,
        data__attacks_in_num__gte,
        data__attacks_in_num,
        data__attacks_in_share__lt,
        data__attacks_in_share__gt,
        data__attacks_in_share__lte,
        data__attacks_in_share__gte,
        data__attacks_in_share,
        data__heal_crit_chance__lt,
        data__heal_crit_chance__gt,
        data__heal_crit_chance__lte,
        data__heal_crit_chance__gte,
        data__heal_crit_chance,
        data__taken_damage_share__lt,
        data__taken_damage_share__gt,
        data__taken_damage_share__lte,
        data__taken_damage_share__gte,
        data__taken_damage_share,
        data__total_damage_taken__lt,
        data__total_damage_taken__gt,
        data__total_damage_taken__lte,
        data__total_damage_taken__gte,
        data__total_damage_taken,
        data__total_hull_damage_taken__lt,
        data__total_hull_damage_taken__gt,
        data__total_hull_damage_taken__lte,
        data__total_hull_damage_taken__gte,
        data__total_hull_damage_taken,
        data__total_shield_damage_taken__lt,
        data__total_shield_damage_taken__gt,
        data__total_shield_damage_taken__lte,
        data__total_shield_damage_taken__gte,
        data__total_shield_damage_taken,
        data__build__exact,
        data__build__iexact,
        data__build__contains,
        data__build__icontains,
        data__build__istartswith,
        data__build__startswith,
        data__build__endswith,
        data__build__iendswith,
        data__build__iregex,
        data__build__regex,
        data__build,
        ordering,
        page,
        page_size,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if player is not None:
            
            _query_params.append(('player', player))
            
        if player__iexact is not None:
            
            _query_params.append(('player__iexact', player__iexact))
            
        if player__contains is not None:
            
            _query_params.append(('player__contains', player__contains))
            
        if player__icontains is not None:
            
            _query_params.append(('player__icontains', player__icontains))
            
        if player__istartswith is not None:
            
            _query_params.append(('player__istartswith', player__istartswith))
            
        if player__startswith is not None:
            
            _query_params.append(('player__startswith', player__startswith))
            
        if player__endswith is not None:
            
            _query_params.append(('player__endswith', player__endswith))
            
        if player__iendswith is not None:
            
            _query_params.append(('player__iendswith', player__iendswith))
            
        if player__iregex is not None:
            
            _query_params.append(('player__iregex', player__iregex))
            
        if player__regex is not None:
            
            _query_params.append(('player__regex', player__regex))
            
        if ladder is not None:
            
            _query_params.append(('ladder', ladder))
            
        if ladder__name is not None:
            
            _query_params.append(('ladder__name', ladder__name))
            
        if ladder__name__iexact is not None:
            
            _query_params.append(('ladder__name__iexact', ladder__name__iexact))
            
        if ladder__name__contains is not None:
            
            _query_params.append(('ladder__name__contains', ladder__name__contains))
            
        if ladder__name__icontains is not None:
            
            _query_params.append(('ladder__name__icontains', ladder__name__icontains))
            
        if ladder__name__istartswith is not None:
            
            _query_params.append(('ladder__name__istartswith', ladder__name__istartswith))
            
        if ladder__name__startswith is not None:
            
            _query_params.append(('ladder__name__startswith', ladder__name__startswith))
            
        if ladder__name__endswith is not None:
            
            _query_params.append(('ladder__name__endswith', ladder__name__endswith))
            
        if ladder__name__iendswith is not None:
            
            _query_params.append(('ladder__name__iendswith', ladder__name__iendswith))
            
        if ladder__name__iregex is not None:
            
            _query_params.append(('ladder__name__iregex', ladder__name__iregex))
            
        if ladder__name__regex is not None:
            
            _query_params.append(('ladder__name__regex', ladder__name__regex))
            
        if ladder__difficulty is not None:
            
            _query_params.append(('ladder__difficulty', ladder__difficulty))
            
        if ladder__difficulty__iexact is not None:
            
            _query_params.append(('ladder__difficulty__iexact', ladder__difficulty__iexact))
            
        if ladder__difficulty__contains is not None:
            
            _query_params.append(('ladder__difficulty__contains', ladder__difficulty__contains))
            
        if ladder__difficulty__icontains is not None:
            
            _query_params.append(('ladder__difficulty__icontains', ladder__difficulty__icontains))
            
        if ladder__difficulty__istartswith is not None:
            
            _query_params.append(('ladder__difficulty__istartswith', ladder__difficulty__istartswith))
            
        if ladder__difficulty__startswith is not None:
            
            _query_params.append(('ladder__difficulty__startswith', ladder__difficulty__startswith))
            
        if ladder__difficulty__endswith is not None:
            
            _query_params.append(('ladder__difficulty__endswith', ladder__difficulty__endswith))
            
        if ladder__difficulty__iendswith is not None:
            
            _query_params.append(('ladder__difficulty__iendswith', ladder__difficulty__iendswith))
            
        if ladder__difficulty__iregex is not None:
            
            _query_params.append(('ladder__difficulty__iregex', ladder__difficulty__iregex))
            
        if ladder__difficulty__regex is not None:
            
            _query_params.append(('ladder__difficulty__regex', ladder__difficulty__regex))
            
        if ladder__variant__name is not None:
            
            _query_params.append(('ladder__variant__name', ladder__variant__name))
            
        if ladder__variant__name__iexact is not None:
            
            _query_params.append(('ladder__variant__name__iexact', ladder__variant__name__iexact))
            
        if ladder__variant__name__contains is not None:
            
            _query_params.append(('ladder__variant__name__contains', ladder__variant__name__contains))
            
        if ladder__variant__name__icontains is not None:
            
            _query_params.append(('ladder__variant__name__icontains', ladder__variant__name__icontains))
            
        if ladder__variant__name__istartswith is not None:
            
            _query_params.append(('ladder__variant__name__istartswith', ladder__variant__name__istartswith))
            
        if ladder__variant__name__startswith is not None:
            
            _query_params.append(('ladder__variant__name__startswith', ladder__variant__name__startswith))
            
        if ladder__variant__name__endswith is not None:
            
            _query_params.append(('ladder__variant__name__endswith', ladder__variant__name__endswith))
            
        if ladder__variant__name__iendswith is not None:
            
            _query_params.append(('ladder__variant__name__iendswith', ladder__variant__name__iendswith))
            
        if ladder__variant__name__iregex is not None:
            
            _query_params.append(('ladder__variant__name__iregex', ladder__variant__name__iregex))
            
        if ladder__variant__name__regex is not None:
            
            _query_params.append(('ladder__variant__name__regex', ladder__variant__name__regex))
            
        if ladder__is_solo is not None:
            
            _query_params.append(('ladder__is_solo', ladder__is_solo))
            
        if data__dps__lt is not None:
            
            _query_params.append(('data__DPS__lt', data__dps__lt))
            
        if data__dps__gt is not None:
            
            _query_params.append(('data__DPS__gt', data__dps__gt))
            
        if data__dps__lte is not None:
            
            _query_params.append(('data__DPS__lte', data__dps__lte))
            
        if data__dps__gte is not None:
            
            _query_params.append(('data__DPS__gte', data__dps__gte))
            
        if data__dps is not None:
            
            _query_params.append(('data__DPS', data__dps))
            
        if data__name__exact is not None:
            
            _query_params.append(('data__name__exact', data__name__exact))
            
        if data__name__iexact is not None:
            
            _query_params.append(('data__name__iexact', data__name__iexact))
            
        if data__name__contains is not None:
            
            _query_params.append(('data__name__contains', data__name__contains))
            
        if data__name__icontains is not None:
            
            _query_params.append(('data__name__icontains', data__name__icontains))
            
        if data__name__istartswith is not None:
            
            _query_params.append(('data__name__istartswith', data__name__istartswith))
            
        if data__name__startswith is not None:
            
            _query_params.append(('data__name__startswith', data__name__startswith))
            
        if data__name__endswith is not None:
            
            _query_params.append(('data__name__endswith', data__name__endswith))
            
        if data__name__iendswith is not None:
            
            _query_params.append(('data__name__iendswith', data__name__iendswith))
            
        if data__name__iregex is not None:
            
            _query_params.append(('data__name__iregex', data__name__iregex))
            
        if data__name__regex is not None:
            
            _query_params.append(('data__name__regex', data__name__regex))
            
        if data__name is not None:
            
            _query_params.append(('data__name', data__name))
            
        if data__deaths__lt is not None:
            
            _query_params.append(('data__deaths__lt', data__deaths__lt))
            
        if data__deaths__gt is not None:
            
            _query_params.append(('data__deaths__gt', data__deaths__gt))
            
        if data__deaths__lte is not None:
            
            _query_params.append(('data__deaths__lte', data__deaths__lte))
            
        if data__deaths__gte is not None:
            
            _query_params.append(('data__deaths__gte', data__deaths__gte))
            
        if data__deaths is not None:
            
            _query_params.append(('data__deaths', data__deaths))
            
        if data__debuff__lt is not None:
            
            _query_params.append(('data__debuff__lt', data__debuff__lt))
            
        if data__debuff__gt is not None:
            
            _query_params.append(('data__debuff__gt', data__debuff__gt))
            
        if data__debuff__lte is not None:
            
            _query_params.append(('data__debuff__lte', data__debuff__lte))
            
        if data__debuff__gte is not None:
            
            _query_params.append(('data__debuff__gte', data__debuff__gte))
            
        if data__debuff is not None:
            
            _query_params.append(('data__debuff', data__debuff))
            
        if data__handle__exact is not None:
            
            _query_params.append(('data__handle__exact', data__handle__exact))
            
        if data__handle__iexact is not None:
            
            _query_params.append(('data__handle__iexact', data__handle__iexact))
            
        if data__handle__contains is not None:
            
            _query_params.append(('data__handle__contains', data__handle__contains))
            
        if data__handle__icontains is not None:
            
            _query_params.append(('data__handle__icontains', data__handle__icontains))
            
        if data__handle__istartswith is not None:
            
            _query_params.append(('data__handle__istartswith', data__handle__istartswith))
            
        if data__handle__startswith is not None:
            
            _query_params.append(('data__handle__startswith', data__handle__startswith))
            
        if data__handle__endswith is not None:
            
            _query_params.append(('data__handle__endswith', data__handle__endswith))
            
        if data__handle__iendswith is not None:
            
            _query_params.append(('data__handle__iendswith', data__handle__iendswith))
            
        if data__handle__iregex is not None:
            
            _query_params.append(('data__handle__iregex', data__handle__iregex))
            
        if data__handle__regex is not None:
            
            _query_params.append(('data__handle__regex', data__handle__regex))
            
        if data__handle is not None:
            
            _query_params.append(('data__handle', data__handle))
            
        if data__misses__lt is not None:
            
            _query_params.append(('data__misses__lt', data__misses__lt))
            
        if data__misses__gt is not None:
            
            _query_params.append(('data__misses__gt', data__misses__gt))
            
        if data__misses__lte is not None:
            
            _query_params.append(('data__misses__lte', data__misses__lte))
            
        if data__misses__gte is not None:
            
            _query_params.append(('data__misses__gte', data__misses__gte))
            
        if data__misses is not None:
            
            _query_params.append(('data__misses', data__misses))
            
        if data__crit_num__lt is not None:
            
            _query_params.append(('data__crit_num__lt', data__crit_num__lt))
            
        if data__crit_num__gt is not None:
            
            _query_params.append(('data__crit_num__gt', data__crit_num__gt))
            
        if data__crit_num__lte is not None:
            
            _query_params.append(('data__crit_num__lte', data__crit_num__lte))
            
        if data__crit_num__gte is not None:
            
            _query_params.append(('data__crit_num__gte', data__crit_num__gte))
            
        if data__crit_num is not None:
            
            _query_params.append(('data__crit_num', data__crit_num))
            
        if data__heal_num__lt is not None:
            
            _query_params.append(('data__heal_num__lt', data__heal_num__lt))
            
        if data__heal_num__gt is not None:
            
            _query_params.append(('data__heal_num__gt', data__heal_num__gt))
            
        if data__heal_num__lte is not None:
            
            _query_params.append(('data__heal_num__lte', data__heal_num__lte))
            
        if data__heal_num__gte is not None:
            
            _query_params.append(('data__heal_num__gte', data__heal_num__gte))
            
        if data__heal_num is not None:
            
            _query_params.append(('data__heal_num', data__heal_num))
            
        if data__heal_share__lt is not None:
            
            _query_params.append(('data__heal_share__lt', data__heal_share__lt))
            
        if data__heal_share__gt is not None:
            
            _query_params.append(('data__heal_share__gt', data__heal_share__gt))
            
        if data__heal_share__lte is not None:
            
            _query_params.append(('data__heal_share__lte', data__heal_share__lte))
            
        if data__heal_share__gte is not None:
            
            _query_params.append(('data__heal_share__gte', data__heal_share__gte))
            
        if data__heal_share is not None:
            
            _query_params.append(('data__heal_share', data__heal_share))
            
        if data__combat_time__lt is not None:
            
            _query_params.append(('data__combat_time__lt', data__combat_time__lt))
            
        if data__combat_time__gt is not None:
            
            _query_params.append(('data__combat_time__gt', data__combat_time__gt))
            
        if data__combat_time__lte is not None:
            
            _query_params.append(('data__combat_time__lte', data__combat_time__lte))
            
        if data__combat_time__gte is not None:
            
            _query_params.append(('data__combat_time__gte', data__combat_time__gte))
            
        if data__combat_time is not None:
            
            _query_params.append(('data__combat_time', data__combat_time))
            
        if data__crit_chance__lt is not None:
            
            _query_params.append(('data__crit_chance__lt', data__crit_chance__lt))
            
        if data__crit_chance__gt is not None:
            
            _query_params.append(('data__crit_chance__gt', data__crit_chance__gt))
            
        if data__crit_chance__lte is not None:
            
            _query_params.append(('data__crit_chance__lte', data__crit_chance__lte))
            
        if data__crit_chance__gte is not None:
            
            _query_params.append(('data__crit_chance__gte', data__crit_chance__gte))
            
        if data__crit_chance is not None:
            
            _query_params.append(('data__crit_chance', data__crit_chance))
            
        if data__max_one_hit__lt is not None:
            
            _query_params.append(('data__max_one_hit__lt', data__max_one_hit__lt))
            
        if data__max_one_hit__gt is not None:
            
            _query_params.append(('data__max_one_hit__gt', data__max_one_hit__gt))
            
        if data__max_one_hit__lte is not None:
            
            _query_params.append(('data__max_one_hit__lte', data__max_one_hit__lte))
            
        if data__max_one_hit__gte is not None:
            
            _query_params.append(('data__max_one_hit__gte', data__max_one_hit__gte))
            
        if data__max_one_hit is not None:
            
            _query_params.append(('data__max_one_hit', data__max_one_hit))
            
        if data__total_heals__lt is not None:
            
            _query_params.append(('data__total_heals__lt', data__total_heals__lt))
            
        if data__total_heals__gt is not None:
            
            _query_params.append(('data__total_heals__gt', data__total_heals__gt))
            
        if data__total_heals__lte is not None:
            
            _query_params.append(('data__total_heals__lte', data__total_heals__lte))
            
        if data__total_heals__gte is not None:
            
            _query_params.append(('data__total_heals__gte', data__total_heals__gte))
            
        if data__total_heals is not None:
            
            _query_params.append(('data__total_heals', data__total_heals))
            
        if data__damage_share__lt is not None:
            
            _query_params.append(('data__damage_share__lt', data__damage_share__lt))
            
        if data__damage_share__gt is not None:
            
            _query_params.append(('data__damage_share__gt', data__damage_share__gt))
            
        if data__damage_share__lte is not None:
            
            _query_params.append(('data__damage_share__lte', data__damage_share__lte))
            
        if data__damage_share__gte is not None:
            
            _query_params.append(('data__damage_share__gte', data__damage_share__gte))
            
        if data__damage_share is not None:
            
            _query_params.append(('data__damage_share', data__damage_share))
            
        if data__hull_attacks__lt is not None:
            
            _query_params.append(('data__hull_attacks__lt', data__hull_attacks__lt))
            
        if data__hull_attacks__gt is not None:
            
            _query_params.append(('data__hull_attacks__gt', data__hull_attacks__gt))
            
        if data__hull_attacks__lte is not None:
            
            _query_params.append(('data__hull_attacks__lte', data__hull_attacks__lte))
            
        if data__hull_attacks__gte is not None:
            
            _query_params.append(('data__hull_attacks__gte', data__hull_attacks__gte))
            
        if data__hull_attacks is not None:
            
            _query_params.append(('data__hull_attacks', data__hull_attacks))
            
        if data__total_damage__lt is not None:
            
            _query_params.append(('data__total_damage__lt', data__total_damage__lt))
            
        if data__total_damage__gt is not None:
            
            _query_params.append(('data__total_damage__gt', data__total_damage__gt))
            
        if data__total_damage__lte is not None:
            
            _query_params.append(('data__total_damage__lte', data__total_damage__lte))
            
        if data__total_damage__gte is not None:
            
            _query_params.append(('data__total_damage__gte', data__total_damage__gte))
            
        if data__total_damage is not None:
            
            _query_params.append(('data__total_damage', data__total_damage))
            
        if data__heal_crit_num__lt is not None:
            
            _query_params.append(('data__heal_crit_num__lt', data__heal_crit_num__lt))
            
        if data__heal_crit_num__gt is not None:
            
            _query_params.append(('data__heal_crit_num__gt', data__heal_crit_num__gt))
            
        if data__heal_crit_num__lte is not None:
            
            _query_params.append(('data__heal_crit_num__lte', data__heal_crit_num__lte))
            
        if data__heal_crit_num__gte is not None:
            
            _query_params.append(('data__heal_crit_num__gte', data__heal_crit_num__gte))
            
        if data__heal_crit_num is not None:
            
            _query_params.append(('data__heal_crit_num', data__heal_crit_num))
            
        if data__total_attacks__lt is not None:
            
            _query_params.append(('data__total_attacks__lt', data__total_attacks__lt))
            
        if data__total_attacks__gt is not None:
            
            _query_params.append(('data__total_attacks__gt', data__total_attacks__gt))
            
        if data__total_attacks__lte is not None:
            
            _query_params.append(('data__total_attacks__lte', data__total_attacks__lte))
            
        if data__total_attacks__gte is not None:
            
            _query_params.append(('data__total_attacks__gte', data__total_attacks__gte))
            
        if data__total_attacks is not None:
            
            _query_params.append(('data__total_attacks', data__total_attacks))
            
        if data__attacks_in_num__lt is not None:
            
            _query_params.append(('data__attacks_in_num__lt', data__attacks_in_num__lt))
            
        if data__attacks_in_num__gt is not None:
            
            _query_params.append(('data__attacks_in_num__gt', data__attacks_in_num__gt))
            
        if data__attacks_in_num__lte is not None:
            
            _query_params.append(('data__attacks_in_num__lte', data__attacks_in_num__lte))
            
        if data__attacks_in_num__gte is not None:
            
            _query_params.append(('data__attacks_in_num__gte', data__attacks_in_num__gte))
            
        if data__attacks_in_num is not None:
            
            _query_params.append(('data__attacks_in_num', data__attacks_in_num))
            
        if data__attacks_in_share__lt is not None:
            
            _query_params.append(('data__attacks_in_share__lt', data__attacks_in_share__lt))
            
        if data__attacks_in_share__gt is not None:
            
            _query_params.append(('data__attacks_in_share__gt', data__attacks_in_share__gt))
            
        if data__attacks_in_share__lte is not None:
            
            _query_params.append(('data__attacks_in_share__lte', data__attacks_in_share__lte))
            
        if data__attacks_in_share__gte is not None:
            
            _query_params.append(('data__attacks_in_share__gte', data__attacks_in_share__gte))
            
        if data__attacks_in_share is not None:
            
            _query_params.append(('data__attacks_in_share', data__attacks_in_share))
            
        if data__heal_crit_chance__lt is not None:
            
            _query_params.append(('data__heal_crit_chance__lt', data__heal_crit_chance__lt))
            
        if data__heal_crit_chance__gt is not None:
            
            _query_params.append(('data__heal_crit_chance__gt', data__heal_crit_chance__gt))
            
        if data__heal_crit_chance__lte is not None:
            
            _query_params.append(('data__heal_crit_chance__lte', data__heal_crit_chance__lte))
            
        if data__heal_crit_chance__gte is not None:
            
            _query_params.append(('data__heal_crit_chance__gte', data__heal_crit_chance__gte))
            
        if data__heal_crit_chance is not None:
            
            _query_params.append(('data__heal_crit_chance', data__heal_crit_chance))
            
        if data__taken_damage_share__lt is not None:
            
            _query_params.append(('data__taken_damage_share__lt', data__taken_damage_share__lt))
            
        if data__taken_damage_share__gt is not None:
            
            _query_params.append(('data__taken_damage_share__gt', data__taken_damage_share__gt))
            
        if data__taken_damage_share__lte is not None:
            
            _query_params.append(('data__taken_damage_share__lte', data__taken_damage_share__lte))
            
        if data__taken_damage_share__gte is not None:
            
            _query_params.append(('data__taken_damage_share__gte', data__taken_damage_share__gte))
            
        if data__taken_damage_share is not None:
            
            _query_params.append(('data__taken_damage_share', data__taken_damage_share))
            
        if data__total_damage_taken__lt is not None:
            
            _query_params.append(('data__total_damage_taken__lt', data__total_damage_taken__lt))
            
        if data__total_damage_taken__gt is not None:
            
            _query_params.append(('data__total_damage_taken__gt', data__total_damage_taken__gt))
            
        if data__total_damage_taken__lte is not None:
            
            _query_params.append(('data__total_damage_taken__lte', data__total_damage_taken__lte))
            
        if data__total_damage_taken__gte is not None:
            
            _query_params.append(('data__total_damage_taken__gte', data__total_damage_taken__gte))
            
        if data__total_damage_taken is not None:
            
            _query_params.append(('data__total_damage_taken', data__total_damage_taken))
            
        if data__total_hull_damage_taken__lt is not None:
            
            _query_params.append(('data__total_hull_damage_taken__lt', data__total_hull_damage_taken__lt))
            
        if data__total_hull_damage_taken__gt is not None:
            
            _query_params.append(('data__total_hull_damage_taken__gt', data__total_hull_damage_taken__gt))
            
        if data__total_hull_damage_taken__lte is not None:
            
            _query_params.append(('data__total_hull_damage_taken__lte', data__total_hull_damage_taken__lte))
            
        if data__total_hull_damage_taken__gte is not None:
            
            _query_params.append(('data__total_hull_damage_taken__gte', data__total_hull_damage_taken__gte))
            
        if data__total_hull_damage_taken is not None:
            
            _query_params.append(('data__total_hull_damage_taken', data__total_hull_damage_taken))
            
        if data__total_shield_damage_taken__lt is not None:
            
            _query_params.append(('data__total_shield_damage_taken__lt', data__total_shield_damage_taken__lt))
            
        if data__total_shield_damage_taken__gt is not None:
            
            _query_params.append(('data__total_shield_damage_taken__gt', data__total_shield_damage_taken__gt))
            
        if data__total_shield_damage_taken__lte is not None:
            
            _query_params.append(('data__total_shield_damage_taken__lte', data__total_shield_damage_taken__lte))
            
        if data__total_shield_damage_taken__gte is not None:
            
            _query_params.append(('data__total_shield_damage_taken__gte', data__total_shield_damage_taken__gte))
            
        if data__total_shield_damage_taken is not None:
            
            _query_params.append(('data__total_shield_damage_taken', data__total_shield_damage_taken))
            
        if data__build__exact is not None:
            
            _query_params.append(('data__build__exact', data__build__exact))
            
        if data__build__iexact is not None:
            
            _query_params.append(('data__build__iexact', data__build__iexact))
            
        if data__build__contains is not None:
            
            _query_params.append(('data__build__contains', data__build__contains))
            
        if data__build__icontains is not None:
            
            _query_params.append(('data__build__icontains', data__build__icontains))
            
        if data__build__istartswith is not None:
            
            _query_params.append(('data__build__istartswith', data__build__istartswith))
            
        if data__build__startswith is not None:
            
            _query_params.append(('data__build__startswith', data__build__startswith))
            
        if data__build__endswith is not None:
            
            _query_params.append(('data__build__endswith', data__build__endswith))
            
        if data__build__iendswith is not None:
            
            _query_params.append(('data__build__iendswith', data__build__iendswith))
            
        if data__build__iregex is not None:
            
            _query_params.append(('data__build__iregex', data__build__iregex))
            
        if data__build__regex is not None:
            
            _query_params.append(('data__build__regex', data__build__regex))
            
        if data__build is not None:
            
            _query_params.append(('data__build', data__build))
            
        if ordering is not None:
            
            _query_params.append(('ordering', ordering))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if page_size is not None:
            
            _query_params.append(('page_size', page_size))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Basic'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/ladder-entries/',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def ladder_entries_read(
        self,
        id: Annotated[StrictInt, Field(description="A unique integer value identifying this ladder entry.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> LadderEntry:
        """ladder_entries_read

        LadderEntry API

        :param id: A unique integer value identifying this ladder entry. (required)
        :type id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ladder_entries_read_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "LadderEntry",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def ladder_entries_read_with_http_info(
        self,
        id: Annotated[StrictInt, Field(description="A unique integer value identifying this ladder entry.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[LadderEntry]:
        """ladder_entries_read

        LadderEntry API

        :param id: A unique integer value identifying this ladder entry. (required)
        :type id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ladder_entries_read_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "LadderEntry",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def ladder_entries_read_without_preload_content(
        self,
        id: Annotated[StrictInt, Field(description="A unique integer value identifying this ladder entry.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """ladder_entries_read

        LadderEntry API

        :param id: A unique integer value identifying this ladder entry. (required)
        :type id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._ladder_entries_read_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "LadderEntry",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _ladder_entries_read_serialize(
        self,
        id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Basic'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/ladder-entries/{id}/',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


