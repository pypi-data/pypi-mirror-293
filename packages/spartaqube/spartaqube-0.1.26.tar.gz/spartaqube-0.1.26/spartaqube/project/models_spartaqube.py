_H='Data source configuration'
_G='Group to share the indicator with'
_F='Last date used'
_E='User to share the indicator with'
_D='Last update'
_C='Date created'
_B=False
_A=True
from django.db import models
from django.contrib.auth.models import User
from django.db import models
from django.utils import timezone
from django.db.models.signals import post_save
from django.dispatch import receiver
from rest_framework import serializers
from picklefield.fields import PickledObjectField
from project.models_base import ShareRights,UserGroup
class DBConnector(models.Model):connector_id=models.CharField(max_length=100,null=_A);host=models.CharField(max_length=100,null=_A);port=models.CharField(max_length=10,null=_A);user=models.CharField(max_length=100,null=_A);password_e=models.CharField(max_length=100,null=_A);database=models.CharField(max_length=100,null=_A);oracle_service_name=models.CharField(max_length=100,null=_A);keyspace=models.CharField(max_length=100,null=_A);library_arctic=models.CharField(max_length=100,null=_A);database_path=models.CharField(max_length=100,null=_A);csv_path=models.CharField(max_length=100,null=_A);csv_delimiter=models.CharField(max_length=100,null=_A);read_only=models.BooleanField(max_length=100,null=_A,default=_B);json_url=models.CharField(max_length=100,null=_A);socket_url=models.CharField(max_length=100,null=_A);redis_db=models.IntegerField(default=0);token=models.CharField(max_length=100,null=_A);organization=models.CharField(max_length=100,null=_A);lib_dir=models.CharField(max_length=100,null=_A);driver=models.CharField(max_length=100,null=_A);trusted_connection=models.BooleanField(default=_A);dynamic_inputs=models.TextField(null=_A);py_code_processing=models.TextField(null=_A);db_engine=models.CharField(max_length=100,null=_A);name=models.CharField(max_length=100,null=_A);description=models.TextField(null=_A);is_delete=models.BooleanField(default=_B);date_created=models.DateTimeField(null=_A,verbose_name='Date creation');last_update=models.DateTimeField(null=_A,verbose_name=_D);last_date_used=models.DateTimeField(null=_A,verbose_name=_F)
class DBConnectorUserShared(models.Model):db_connector=models.ForeignKey(DBConnector,on_delete=models.CASCADE);user=models.ForeignKey(User,null=_A,on_delete=models.CASCADE,verbose_name=_E);user_group=models.ForeignKey(UserGroup,null=_A,on_delete=models.CASCADE,verbose_name=_G);date_created=models.DateTimeField(null=_A,verbose_name=_C);is_delete=models.BooleanField(default=_B);share_rights=models.ForeignKey(ShareRights,null=_A,on_delete=models.CASCADE);is_owner=models.BooleanField(default=_B)
class CodeEditorNotebook(models.Model):notebook_id=models.CharField(max_length=100,null=_A);name=models.CharField(max_length=100,null=_A);cells=models.TextField(null=_A);is_delete=models.BooleanField(default=_B);date_created=models.DateTimeField(null=_A,verbose_name=_C);last_update=models.DateTimeField(null=_A,verbose_name=_D)
class PlotDBChart(models.Model):plot_chart_id=models.CharField(max_length=100,null=_A);type_chart=models.IntegerField();name=models.CharField(max_length=100,null=_A);slug=models.SlugField(unique=_A,max_length=150,null=_A);description=models.CharField(max_length=1000,null=_A);is_expose_widget=models.BooleanField(default=_B);is_public_widget=models.BooleanField(default=_B);is_static_data=models.BooleanField(default=_B);has_widget_password=models.BooleanField(default=_B);widget_password_e=models.CharField(max_length=100,null=_A);data_source_list=PickledObjectField(default=dict,null=_A,editable=_A,verbose_name=_H);chart_params=PickledObjectField(default=dict,null=_A,editable=_A,verbose_name='This is all the params (type, options, data for chartJS for instance)');chart_config=PickledObjectField(default=dict,null=_A,editable=_A,verbose_name=_H);is_created_from_api=models.BooleanField(default=_B);is_delete=models.BooleanField(default=_B);date_created=models.DateTimeField(null=_A,verbose_name=_C);last_update=models.DateTimeField(null=_A,verbose_name=_D);code_editor_notebook=models.ForeignKey(CodeEditorNotebook,null=_A,on_delete=models.CASCADE);last_date_used=models.DateTimeField(null=_A,verbose_name=_F)
class PlotDBChartShared(models.Model):plot_db_chart=models.ForeignKey(PlotDBChart,on_delete=models.CASCADE);user=models.ForeignKey(User,null=_A,on_delete=models.CASCADE,verbose_name=_E);user_group=models.ForeignKey(UserGroup,null=_A,on_delete=models.CASCADE,verbose_name=_G);date_created=models.DateTimeField(null=_A,verbose_name=_C);is_delete=models.BooleanField(default=_B);share_rights=models.ForeignKey(ShareRights,null=_A,on_delete=models.CASCADE);is_owner=models.BooleanField(default=_B)
class NewPlotApiVariables(models.Model):user=models.ForeignKey(User,null=_A,on_delete=models.CASCADE,verbose_name=_E);pickled_variables=models.TextField(null=_A);session_id=models.CharField(max_length=100,null=_A);is_delete=models.BooleanField(default=_B);date_created=models.DateTimeField(null=_A,verbose_name=_C);last_update=models.DateTimeField(null=_A,verbose_name=_D)
class PaletteColors(models.Model):palette_id=models.CharField(max_length=100,null=_A);user=models.ForeignKey(User,null=_A,on_delete=models.CASCADE,verbose_name=_E);name=models.CharField(max_length=100,null=_A);palette=PickledObjectField(default=dict,null=_A,editable=_A,verbose_name='Palette color');is_default=models.BooleanField(default=_B);is_delete=models.BooleanField(default=_B);date_created=models.DateTimeField(null=_A,verbose_name=_C);last_update=models.DateTimeField(null=_A,verbose_name=_D)