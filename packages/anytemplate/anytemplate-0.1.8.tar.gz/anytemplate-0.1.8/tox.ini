[tox]
envlist =
    py39
    py310
    py311
    py312
    min
    lint
    type-check
    releng
    dists
skip_missing_interpreters = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312, type-check, lint, plugins, min

[testenv]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/tests/requirements.txt
    -r{toxinidir}/tests/requirements.d/engines.txt
    -r{toxinidir}/tests/requirements.d/test.txt
commands =
    pytest

setenv =
    PYTHONPATH = {toxinidir}/src

allowlist_externals =
    /bin/sh
    cd
    pytest

[testenv:min]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/tests/requirements.txt
    -r{toxinidir}/tests/requirements.d/test.txt
commands =
    pytest

[testenv:lint]
deps =
    -r{toxinidir}/tests/requirements.d/lint.txt
commands =
    flake8 --doctests src tests
    - /bin/sh -c 'for d in src/*; do (test -d $d && test -f $d/__init__.py && pylint --disable=invalid-name,locally-disabled $d) || :; done'

[testenv:type-check]
deps =
    -r{toxinidir}/tests/requirements.d/type-check.txt
    -r{toxinidir}/tests/requirements.d/engines.txt
commands =
    - mypy src

[testenv:releng]
passenv = TERM
setenv =
    PATH = $PATH:{toxworkdir}/bin

allowlist_externals =
    {[testenv]allowlist_externals}
    bats
    git
    rpm
    mock

deps =
    -r{toxinidir}/tests/requirements.d/build.txt

commands_pre =
    - git clone https://github.com/sstephenson/bats.git {toxworkdir}/bats
    /bin/sh {toxworkdir}/bats/install.sh {toxworkdir}

commands =
    bats tests/releng.bats

[testenv:dists]
deps =
    -r{toxinidir}/tests/requirements.d/build.txt

commands =
    python -m build --sdist
    python -m build --wheel
    - python setup.py bdist_rpm --source-ony
