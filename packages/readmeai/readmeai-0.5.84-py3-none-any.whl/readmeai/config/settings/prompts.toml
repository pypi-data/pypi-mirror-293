# Large language model prompt templates for generative tasks.

[prompts]
features = """Hello! Please analyze the key technical capabilities and characteristics of the project {0} and describe them in a Markdown table format:

|    |   Feature         | Description |
|----|-------------------|---------------------------------------------------------------|
| ‚öôÔ∏è  | **Architecture**  | *Quick facts about the project's architecture. Max 50 words.* |
| üî© | **Code Quality**  | *Quick facts about the code quality and style. Max 50 words.* |
| üìÑ | **Documentation** | *Discuss the extent and quality of documentation. Max 50 words.* |
| üîå | **Integrations**  | *List key integrations and external dependencies. Max 50 words.* |
| üß© | **Modularity**    | *Discuss the modularity and reusability of the codebase. Max 50 words.* |
| üß™ | **Testing**       | *List testing frameworks and tools used. Max 50 words.* |
| ‚ö°Ô∏è  | **Performance**   | *Evaluate efficiency, speed and resource usage. Max 50 words.* |
| üõ°Ô∏è | **Security**      | *Discuss measures used for data protection and access control. Max 50 words.* |
| üì¶ | **Dependencies**  | *List key external libraries and dependencies. Max 50 words.* |
| üöÄ | **Scalability**   | *Assess ability to handle increased traffic and load. Max 50 words.* |

While generating the table, please reference the following codebase details:\n
================================================================================
Project dependencies: {1}
Repository contents: {2}
================================================================================
"""

file_summary = """Deliver a succinct summary that highlights the main purpose and \
critical features of this code file in relation to its parent repository's architecture. \
Focus on what the code achieves, steering clear of technical implementation details. \
While generating the summaries, please reference the following codebase details: \n
================================================================================
Repository structure: {0}
File path: {1}
File contents: {2}
================================================================================
Additional Requirements: \n
- Avoid using words like 'This file', 'The file', 'This code', etc. but instead begin \
each response with a verb or a noun to make the summary more engaging and impactful. \
- Do not include quotes, code snippets, or bullet points in your response. \
- Your response should be a maximum of 50 words.
"""
logo = """
Create a **simple, cute mascot icon** in a **minimalist style** specifically designed as a standalone iPhone app icon. The icon should have a **singular main centerpiece** that defines the entire shape of the icon, without any external borders or background.

**Characteristics:**
1. Use **thick, rounded outlines** to define the mascot's shape.
2. Employ **basic geometric shapes** for facial features (e.g., dots for eyes, simple shapes for nose/mouth).
3. Ensure a **chunky, squat body proportion** for a cute appearance.
4. Incorporate **distinctive features** of the mascot animal/character/hero in a **simplified form**.
5. Maintain a **friendly, approachable expression**.
6. Fill the **square app-icon canvas** with the mascot, centered and occupying most of the space.
7. The mascot's shape itself should form the icon boundary‚Äî**no additional borders or background elements**.
8. The design should be **visually complete and balanced** without relying on a background.

**Mascot Concept:**
- Design a [insert specific animal or character relevant to your project, e.g., 'playful robot', 'curious owl', 'friendly octopus'].
- The aesthetic should be **clean, adorable, and instantly recognizable** even at small sizes.

**Project Context:**
- **Project Name:** {project_name}
- **Project Overview:** {project_overview}
- **Project Slogan:** {project_slogan}

The mascot should embody the spirit of your project, capturing its essence and purpose. The final design must function as a standalone icon, with the mascot's shape defining the boundaries and serving as the singular main centerpiece.
"""

overview = """Analyze the codebase, {0}, and provide a robust, yet succinct overview of the software \
project. Craft a paragraph that encapsulate the core functionalities of the project, its purpose, and value \
proposition. While generating the project overview, please reference the following codebase details: \n
--------------------------------------------------------------------------------
File Summaries: {1}
--------------------------------------------------------------------------------
Additional Requirements: \n
- Avoid deep technical details and focus on the project's high-level use cases and features.
- Do not include quotes, code snippets, or bullet points in your response.
- The project name should be mentioned at least once in the overview.
- Your response should be a maximum of 100 words.
"""

slogan = """Conceptualize a catchy and memorable slogan for the project: {0} ({1}). \
Your response should encapsulate the project's purpose, value proposition, and engage the audience. \
While generating the slogan, please reference the following codebase details: \n
--------------------------------------------------------------------------------
File contents: {2}
-------------------------------------------------------------------------------- \n
Other Requirements: \n
- DO NOT include the project name in the slogan.
- Your response should be a maximum of 8 words.
- The slogan should be concise and memorable.
"""
