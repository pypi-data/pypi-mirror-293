Metadata-Version: 2.1
Name: sqlalchemy-greenplum
Version: 0.2.0
Summary: SQLAlchemy dialect for Greenplum Database
Home-page: https://github.com/PlaidCloud/sqlalchemy-greenplum
Author: Patrick Buxton
Author-email: patrick.buxton@tartansolutions.com
License: Apache License 2.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: SQL
Classifier: Topic :: Database
Classifier: Topic :: Database :: Front-Ends
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: sqlalchemy <3,>=1.4.0
Requires-Dist: psycopg2

# SQLAlchemy dialect for Pivotal Greenplum

This dialect allows you to use the Pivotal Greenplum database with SQLAlchemy, extending the features
of the PostgreSQL dialect and adding in some Greenplum specific options. The install will also integrate
with Alembic for generation of migration scripts.

## Prerequisites

Python 3.X

### Installation
```
git clone https://github.com/PlaidCloud/sqlalchemy-greenplum.git
cd sqlalchemy-greenplum
python setup.py install
```

### Tests

To run the tests, alter the db entry in setup.cfg and create that database and a schema within it named 'test_schema' on the server
Then run from the project root folder
```
python setup.py test
```

There is a random failure for ServerSideCursorsTest_greenplum+psycopg2_8_3_23.test_roundtrip because it seems 
that Greenplum doesn't always return the records in the same order. Perhaps the test result needs to be ordered.

### Usage
```
    from sqlalchemy import create_engine
    engine = create_engine('greenplum://user:password@example.server.com')
    engine = create_engine('greenplum://user:password@example.server.com/example_database')
```

### Contribute

If you find any bugs or have any suggestions, you are welcome to create a GitHub Issue.

