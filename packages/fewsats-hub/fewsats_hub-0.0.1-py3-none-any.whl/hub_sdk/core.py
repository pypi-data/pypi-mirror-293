# AUTOGENERATED! DO NOT EDIT! File to edit: ../00_core.ipynb.

# %% auto 0
__all__ = ['HubAPI']

# %% ../00_core.ipynb 2
from fastcore.utils import *
from fastcore.test import test_fail,test_eq
import os
import requests
from typing import Dict, Any


# %% ../00_core.ipynb 5
class HubAPI:
    def __init__(self, base_url: str = "https://hub-5n97k.ondigitalocean.app/", token: str = None):
        self.base_url = base_url
        self.api_key = token or os.environ.get("HUB_API_TOKEN")
        if not self.api_key:
            raise ValueError("API token not provided and HUB_API_TOKEN environment variable is not set")

# %% ../00_core.ipynb 7
@patch
def _make_request(self: HubAPI, method: str, endpoint: str, data: Dict[str, Any] = None) -> Dict[str, Any]:
    url = f"{self.base_url}/{endpoint}"
    headers = {
        "Authorization": f"Token {self.api_key}",
        "Content-Type": "application/json"
    }
    response = requests.request(method, url, headers=headers, json=data)
    response.raise_for_status()
    return response.json()

# %% ../00_core.ipynb 8
@patch
def preview_purchase(self: HubAPI, l402_url: str) -> Dict[str, Any]:
    """
    Call the v0/l402/preview/purchase endpoint.

    Args:
        data (Dict[str, Any]): The request payload.

    Returns:
        Dict[str, Any]: The response from the API.
    """
    data = {"l402_url": l402_url}
    return self._make_request("POST", "v0/l402/preview/purchase", data)

# %% ../00_core.ipynb 10
@patch
def purchase(self: HubAPI, l402_url: str) -> Dict[str, Any]:
    """
    Call the v0/l402/purchase endpoint to make a purchase.

    Args:
        l402_url (str): The L402 URL for the purchase.

    Returns:
        Dict[str, Any]: The response from the API containing purchase details.
    """
    data = {"l402_url": l402_url}
    return self._make_request("POST", "v0/l402/purchases", data)

# %% ../00_core.ipynb 12
@patch
def list_wallets(self: HubAPI) -> Dict[str, Any]:
    """
    Call the v0/l402/preview/purchase endpoint.

    Args:
        data (Dict[str, Any]): The request payload.

    Returns:
        Dict[str, Any]: The response from the API.
    """
    return self._make_request("GET", "v0/wallets")

