[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "crlite_status"
maintainers = [
  {name = "J.C. Jones", email = "jc@insufficient.coffee"},
]
version = "0.0.8"
description = "Use this tool get information about recent CRLite runs"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3",
]
keywords = ["bloom filter", "cascade", "multi level", "mlbf", "crlite"]
dependencies = [
  "requests>=2.10", "rich>=3.0"
]
requires-python = ">=3.7"
readme = "README.md"

[tool.hatch.build.targets.wheel]
packages = ["crlite_status"]

[project.urls]
Repository = "http://github.com/jcjones/crlite_status"

[project.scripts]
crlite_status = "crlite_status.status:main"

[tool.ruff]
line-length = 88  # default is 88
target-version = "py37"

[tool.ruff.lint]
select = [
  "A",      # flake8-builtins
  "AIR",    # Airflow
  "ARG",    # flake8-unused-arguments
  "ASYNC",  # flake8-async
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DJ",     # flake8-django
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FA",     # flake8-future-annotations
  "FBT",    # flake8-boolean-trap
  "FIX",    # flake8-fixme
  "FLY",    # flynt
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "LOG",    # flake8-logging
  "NPY",    # NumPy-specific rules
  "PD",     # pandas-vet
  "PERF",   # Perflint
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RET",    # flake8-return
  "RSE",    # flake8-raise
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLOT",   # flake8-slots
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "TD",     # flake8-todos
  "TID",    # flake8-tidy-imports
  "TRIO",   # flake8-trio
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  # "COM",  # flake8-commas
  # "CPY",  # flake8-copyright
  # "D",    # pydocstyle
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "FURB", # refurb
  # "G",    # flake8-logging-format
  # "I",    # isort
  # "N",    # pep8-naming
  # "PT",   # flake8-pytest-style
  # "Q",    # flake8-quotes
  # "RUF",  # Ruff-specific rules
  # "SLF",  # flake8-self
  # "T20",  # flake8-print
  # "TRY",  # tryceratops
]
ignore = [
  "ISC001", # Implicit string concatenation can conflict with ruff format
  "S101",   # Allow assert statements
]

[tool.ruff.lint.mccabe]
max-complexity = 16  # default is 10

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.pylint]
max-args = 7  # default is 5
max-branches = 15  # default is 12
