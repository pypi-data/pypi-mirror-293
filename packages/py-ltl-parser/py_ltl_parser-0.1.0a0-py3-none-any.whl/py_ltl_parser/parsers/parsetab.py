
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AE AG AMPERSAND AND ARG_LIST ASSIGNMENT BOUNDS BUILTIN_FUNCTION1 BUILTIN_FUNCTION2 BUILTIN_FUNCTION3 CARET COLON COMMA DEADLOCK DECIMAL_NUMBER DIVIDE DOT DYNAMIC_EXPRESSION EE EG EQ FALSE GE GT ID IDENTIFIER IMPLIES INF LBRACE LBRACKET LE LOCATION LPAREN LSHIFT LT MINUS MINUSMINUS MITL_EXPRESSION MOD NE NON_TYPE_ID NOT OR PIPE PLUS PLUSPLUS POS_INTEGER POW QUESTION QUOTED_TEXT RBRACE RBRACKET RPAREN RSHIFT STRING_LITERAL SUP TIMES TRUE TYPE UNDER XOR\n        SymbolicQuery : AE expression\n        | AG expression\n        | EG expression\n        | EE expression\n        | expression\n        List : expression\n        | expression COMMA List\n        \n        expression : bin_op_lv8\n\n        bin_op_lv8 : bin_op_lv7\n        | bin_op_lv7 IMPLIES bin_op_lv8\n        bin_op_lv7 : bin_op_lv6\n        bin_op_lv6 : bin_op_lv5\n        | bin_op_lv5 XOR bin_op_lv6\n        | bin_op_lv5 AND bin_op_lv6\n        | bin_op_lv5 OR bin_op_lv6\n        bin_op_lv5 : bin_op_lv4\n        | bin_op_lv4 GT bin_op_lv5\n        | bin_op_lv4 LE bin_op_lv5\n        | bin_op_lv4 GE bin_op_lv5\n        | bin_op_lv4 EQ bin_op_lv5\n        | bin_op_lv4 NE bin_op_lv5\n        | bin_op_lv4 LT bin_op_lv5\n        \n        bin_op_lv4 : bin_op_lv3 PLUS bin_op_lv4\n            | bin_op_lv3 MINUS bin_op_lv4\n            | bin_op_lv3 LSHIFT bin_op_lv4\n            | bin_op_lv3 RSHIFT bin_op_lv4\n            | bin_op_lv3\n        \n        bin_op_lv3 : sub_expression TIMES bin_op_lv3\n            | sub_expression DIVIDE bin_op_lv3\n            | sub_expression MOD bin_op_lv3\n            | sub_expression\n        \n        sub_expression :  LPAREN expression RPAREN\n            | NOT expression\n            | primary\n        \n        primary : IDENTIFIER\n            | POS_INTEGER\n        '
    
_lr_action_items = {'AE':([0,],[2,]),'AG':([0,],[4,]),'EG':([0,],[5,]),'EE':([0,],[6,]),'LPAREN':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NOT':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'IDENTIFIER':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'POS_INTEGER':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'$end':([1,3,7,8,9,10,11,12,13,16,17,18,19,20,21,22,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[0,-5,-8,-9,-11,-12,-16,-27,-31,-34,-35,-36,-1,-2,-3,-4,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'RPAREN':([7,8,9,10,11,12,13,16,17,18,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,-27,-31,-34,-35,-36,59,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'TIMES':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,-27,37,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'DIVIDE':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,-27,38,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'MOD':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,-27,39,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'PLUS':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,33,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'MINUS':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,34,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'LSHIFT':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,35,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'RSHIFT':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,-16,36,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'GT':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,27,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'LE':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,28,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'GE':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,29,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'EQ':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,30,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'NE':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,31,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'LT':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,-12,32,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'XOR':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,24,-16,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'AND':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,25,-16,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'OR':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,-9,-11,26,-16,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),'IMPLIES':([7,8,9,10,11,12,13,16,17,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[-8,23,-11,-12,-16,-27,-31,-34,-35,-36,-33,-10,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SymbolicQuery':([0,],[1,]),'expression':([0,2,4,5,6,14,15,],[3,19,20,21,22,40,41,]),'bin_op_lv8':([0,2,4,5,6,14,15,23,],[7,7,7,7,7,7,7,42,]),'bin_op_lv7':([0,2,4,5,6,14,15,23,],[8,8,8,8,8,8,8,8,]),'bin_op_lv6':([0,2,4,5,6,14,15,23,24,25,26,],[9,9,9,9,9,9,9,9,43,44,45,]),'bin_op_lv5':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,],[10,10,10,10,10,10,10,10,10,10,10,46,47,48,49,50,51,]),'bin_op_lv4':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,52,53,54,55,]),'bin_op_lv3':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,56,57,58,]),'sub_expression':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'primary':([0,2,4,5,6,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SymbolicQuery","S'",1,None,None,None),
  ('SymbolicQuery -> AE expression','SymbolicQuery',2,'p_symbolic_query','parser.py',43),
  ('SymbolicQuery -> AG expression','SymbolicQuery',2,'p_symbolic_query','parser.py',44),
  ('SymbolicQuery -> EG expression','SymbolicQuery',2,'p_symbolic_query','parser.py',45),
  ('SymbolicQuery -> EE expression','SymbolicQuery',2,'p_symbolic_query','parser.py',46),
  ('SymbolicQuery -> expression','SymbolicQuery',1,'p_symbolic_query','parser.py',47),
  ('List -> expression','List',1,'p_List','parser.py',58),
  ('List -> expression COMMA List','List',3,'p_List','parser.py',59),
  ('expression -> bin_op_lv8','expression',1,'p_EXPRESSION','parser.py',69),
  ('bin_op_lv8 -> bin_op_lv7','bin_op_lv8',1,'p_binop_level_8','parser.py',85),
  ('bin_op_lv8 -> bin_op_lv7 IMPLIES bin_op_lv8','bin_op_lv8',3,'p_binop_level_8','parser.py',86),
  ('bin_op_lv7 -> bin_op_lv6','bin_op_lv7',1,'p_binop_level_7','parser.py',97),
  ('bin_op_lv6 -> bin_op_lv5','bin_op_lv6',1,'p_binop_level_6','parser.py',109),
  ('bin_op_lv6 -> bin_op_lv5 XOR bin_op_lv6','bin_op_lv6',3,'p_binop_level_6','parser.py',110),
  ('bin_op_lv6 -> bin_op_lv5 AND bin_op_lv6','bin_op_lv6',3,'p_binop_level_6','parser.py',111),
  ('bin_op_lv6 -> bin_op_lv5 OR bin_op_lv6','bin_op_lv6',3,'p_binop_level_6','parser.py',112),
  ('bin_op_lv5 -> bin_op_lv4','bin_op_lv5',1,'p_binop_level_5','parser.py',124),
  ('bin_op_lv5 -> bin_op_lv4 GT bin_op_lv5','bin_op_lv5',3,'p_binop_level_5','parser.py',125),
  ('bin_op_lv5 -> bin_op_lv4 LE bin_op_lv5','bin_op_lv5',3,'p_binop_level_5','parser.py',126),
  ('bin_op_lv5 -> bin_op_lv4 GE bin_op_lv5','bin_op_lv5',3,'p_binop_level_5','parser.py',127),
  ('bin_op_lv5 -> bin_op_lv4 EQ bin_op_lv5','bin_op_lv5',3,'p_binop_level_5','parser.py',128),
  ('bin_op_lv5 -> bin_op_lv4 NE bin_op_lv5','bin_op_lv5',3,'p_binop_level_5','parser.py',129),
  ('bin_op_lv5 -> bin_op_lv4 LT bin_op_lv5','bin_op_lv5',3,'p_binop_level_5','parser.py',130),
  ('bin_op_lv4 -> bin_op_lv3 PLUS bin_op_lv4','bin_op_lv4',3,'p_binop_level_4','parser.py',143),
  ('bin_op_lv4 -> bin_op_lv3 MINUS bin_op_lv4','bin_op_lv4',3,'p_binop_level_4','parser.py',144),
  ('bin_op_lv4 -> bin_op_lv3 LSHIFT bin_op_lv4','bin_op_lv4',3,'p_binop_level_4','parser.py',145),
  ('bin_op_lv4 -> bin_op_lv3 RSHIFT bin_op_lv4','bin_op_lv4',3,'p_binop_level_4','parser.py',146),
  ('bin_op_lv4 -> bin_op_lv3','bin_op_lv4',1,'p_binop_level_4','parser.py',147),
  ('bin_op_lv3 -> sub_expression TIMES bin_op_lv3','bin_op_lv3',3,'p_binop_level_3','parser.py',160),
  ('bin_op_lv3 -> sub_expression DIVIDE bin_op_lv3','bin_op_lv3',3,'p_binop_level_3','parser.py',161),
  ('bin_op_lv3 -> sub_expression MOD bin_op_lv3','bin_op_lv3',3,'p_binop_level_3','parser.py',162),
  ('bin_op_lv3 -> sub_expression','bin_op_lv3',1,'p_binop_level_3','parser.py',163),
  ('sub_expression -> LPAREN expression RPAREN','sub_expression',3,'p_SUB_expression','parser.py',175),
  ('sub_expression -> NOT expression','sub_expression',2,'p_SUB_expression','parser.py',176),
  ('sub_expression -> primary','sub_expression',1,'p_SUB_expression','parser.py',177),
  ('primary -> IDENTIFIER','primary',1,'p_simple_expression','parser.py',191),
  ('primary -> POS_INTEGER','primary',1,'p_simple_expression','parser.py',192),
]
