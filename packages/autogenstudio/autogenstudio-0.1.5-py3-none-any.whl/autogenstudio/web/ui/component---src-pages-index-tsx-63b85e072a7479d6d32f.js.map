{"version":3,"file":"component---src-pages-index-tsx-63b85e072a7479d6d32f.js","mappings":"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","sources":["webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","webpack://AutoGen_Studio/./src/components/views/playground/utils/selectors.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sessions.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sidebar.tsx","webpack://AutoGen_Studio/./src/components/views/playground/ra.tsx","webpack://AutoGen_Studio/./src/pages/index.tsx","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/Square3Stack3DIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/TrashIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;","import { Select, message } from \"antd\";\nimport * as React from \"react\";\nimport { LoadingOverlay } from \"../../../atoms\";\nimport { IWorkflow, IStatus } from \"../../../types\";\nimport { fetchJSON, getServerUrl } from \"../../../utils\";\nimport { appContext } from \"../../../../hooks/provider\";\nimport { Link } from \"gatsby\";\n\nconst WorkflowSelector = ({\n  workflow,\n  setWorkflow,\n  disabled,\n}: {\n  workflow: IWorkflow | null;\n  setWorkflow: (workflow: IWorkflow) => void;\n  disabled?: boolean;\n}) => {\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const [loading, setLoading] = React.useState(false);\n  const [workflows, setWorkflows] = React.useState<IWorkflow[]>([]);\n  const [selectedWorkflow, setSelectedWorkflow] = React.useState<number>(0);\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listWorkflowsUrl = `${serverUrl}/workflows?user_id=${user?.email}`;\n  const fetchWorkFlow = () => {\n    setError(null);\n    setLoading(true);\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n        setWorkflows(data.data);\n        if (data.data.length > 0) {\n          setWorkflow(data.data[0]);\n        }\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listWorkflowsUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      fetchWorkFlow();\n    }\n  }, []);\n\n  return (\n    <div className=\" mb-4 relative\">\n      <div className=\"text-sm mt-2 mb-2 pb-1  \">\n        {\" \"}\n        Please select an agent workflow to begin.{\" \"}\n      </div>\n\n      <div className=\"relative mt-2 \">\n        <LoadingOverlay loading={loading} />\n\n        {workflows && workflows.length > 0 && (\n          <Select\n            disabled={disabled}\n            className=\"w-full\"\n            value={workflows[selectedWorkflow].name}\n            onChange={(value: any) => {\n              setSelectedWorkflow(value);\n              setWorkflow(workflows[value]);\n            }}\n            options={\n              workflows.map((config, index) => {\n                return { label: config.name, value: index };\n              }) as any\n            }\n          />\n        )}\n        <div className=\"mt-2 text-xs hidden\">\n          {\" \"}\n          <div className=\"my-2 text-xs\"> {workflow?.name}</div>\n          View all workflows{\" \"}\n          <span className=\"text-accent\">\n            {\" \"}\n            <Link to=\"/build\">here</Link>\n          </span>{\" \"}\n        </div>\n      </div>\n      {!workflows ||\n        (workflows && workflows.length === 0 && (\n          <div className=\"p-1 border rounded text-xs px-2 text-secondary\">\n            {\" \"}\n            No agent workflows found.\n          </div>\n        ))}\n    </div>\n  );\n};\nexport default WorkflowSelector;\n","import {\n  ChatBubbleLeftRightIcon,\n  ExclamationTriangleIcon,\n  GlobeAltIcon,\n  PencilIcon,\n  PlusIcon,\n  Square3Stack3DIcon,\n  TrashIcon,\n} from \"@heroicons/react/24/outline\";\nimport { Button, Dropdown, Input, MenuProps, Modal, message } from \"antd\";\nimport * as React from \"react\";\nimport { IChatSession, IWorkflow, IStatus } from \"../../types\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { fetchJSON, getServerUrl, timeAgo } from \"../../utils\";\nimport { LaunchButton, LoadingOverlay } from \"../../atoms\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport WorkflowSelector from \"./utils/selectors\";\n\nconst SessionsView = ({}: any) => {\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listSessionUrl = `${serverUrl}/sessions?user_id=${user?.email}`;\n  const createSessionUrl = `${serverUrl}/sessions`;\n  const publishSessionUrl = `${serverUrl}/sessions/publish`;\n\n  const sessions = useConfigStore((state) => state.sessions);\n\n  const setSessions = useConfigStore((state) => state.setSessions);\n  const sampleSession: IChatSession = {\n    user_id: user?.email || \"\",\n    name:\n      \"New Session \" +\n      new Date().toLocaleString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      }),\n  };\n  const [selectedSession, setSelectedSession] =\n    React.useState<IChatSession | null>(sampleSession);\n  // const [session, setSession] =\n  //   React.useState<IChatSession | null>(null);\n  const session = useConfigStore((state) => state.session);\n  const setSession = useConfigStore((state) => state.setSession);\n\n  const deleteSession = (session: IChatSession) => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const deleteSessionUrl = `${serverUrl}/sessions/delete?user_id=${user?.email}&session_id=${session.id}`;\n    const payLoad = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: user?.email,\n        session: session,\n      }),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        fetchSessions();\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(deleteSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const [newSessionModalVisible, setNewSessionModalVisible] =\n    React.useState(false);\n\n  const fetchSessions = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n        // console.log(\"sessions\", data);\n        setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const publishSession = () => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: session,\n      tags: [\"published\"],\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        // setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(publishSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (sessions && sessions.length > 0) {\n      const firstSession = sessions[0];\n      setSession(firstSession);\n    } else {\n      setSession(null);\n    }\n  }, [sessions]);\n\n  const createSession = (session: IChatSession) => {\n    setError(null);\n    setLoading(true);\n\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(session),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        fetchSessions();\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(createSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      fetchSessions();\n    }\n  }, []);\n\n  const sessionRows = sessions.map((data: IChatSession, index: number) => {\n    const isSelected = session?.id === data.id;\n    const rowClass = isSelected\n      ? \"bg-accent text-white\"\n      : \"bg-secondary text-primary\";\n\n    let items: MenuProps[\"items\"] = [\n      {\n        label: (\n          <div\n            onClick={() => {\n              console.log(\"deleting session\");\n              deleteSession(data);\n            }}\n          >\n            <TrashIcon\n              role={\"button\"}\n              title={\"Delete\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Delete\n          </div>\n        ),\n        key: \"delete\",\n      },\n      {\n        label: (\n          <div\n            onClick={() => {\n              // get current clicked session\n              setSelectedSession(data);\n              setNewSessionModalVisible(true);\n            }}\n          >\n            <PencilIcon\n              role={\"button\"}\n              title={\"Edit\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Edit\n          </div>\n        ),\n        key: \"edit\",\n      },\n      // {\n      //   label: (\n      //     <div\n      //       onClick={() => {\n      //         console.log(\"publishing session\");\n      //         publishSession();\n      //       }}\n      //     >\n      //       <GlobeAltIcon\n      //         role={\"button\"}\n      //         title={\"Publish\"}\n      //         className=\"h-4 w-4 mr-1 inline-block\"\n      //       />\n      //       Publish\n      //     </div>\n      //   ),\n      //   key: \"publish\",\n      // },\n    ];\n\n    items.push();\n    const menu = (\n      <Dropdown\n        menu={{ items: items }}\n        trigger={[\"click\"]}\n        placement=\"bottomRight\"\n      >\n        <div\n          role=\"button\"\n          className={`float-right ml-2 duration-100 hover:bg-secondary font-semibold px-2 pb-1  rounded ${\n            isSelected ? \"hover:text-accent\" : \"\"\n          }`}\n        >\n          <span className={`block -mt-2 ${isSelected ? \"text-white\" : \"\"}`}>\n            {\" \"}\n            ...\n          </span>\n        </div>\n      </Dropdown>\n    );\n\n    return (\n      <div\n        key={\"sessionsrow\" + index}\n        className=\"group relative  mb-2 pb-1  border-b border-dashed \"\n      >\n        {items.length > 0 && (\n          <div className=\"  absolute right-2 top-2 group-hover:opacity-100 opacity-0 \">\n            {menu}\n          </div>\n        )}\n        <div\n          className={`rounded p-2 cursor-pointer ${rowClass}`}\n          role=\"button\"\n          onClick={() => {\n            setSession(data);\n            // setWorkflowConfig(data.flow_config);\n          }}\n        >\n          <div className=\"text-xs mt-1\">\n            <Square3Stack3DIcon className=\"h-4 w-4 inline-block mr-1\" />\n            {data.name}\n          </div>\n          <div className=\"text-xs text-right \">\n            {timeAgo(data.created_at || \"\")}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  let windowHeight, skillsMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    skillsMaxHeight = windowHeight - 400 + \"px\";\n  }\n\n  const NewSessionModal = ({ session }: { session: IChatSession | null }) => {\n    const [workflow, setWorkflow] = React.useState<IWorkflow | null>(null);\n    const [localSession, setLocalSession] = React.useState<IChatSession | null>(\n      session\n    );\n\n    React.useEffect(() => {\n      if (workflow && workflow.id && localSession) {\n        setLocalSession({ ...localSession, workflow_id: workflow.id });\n      }\n    }, [workflow]);\n\n    const sessionExists =\n      localSession !== null && localSession.id !== undefined;\n\n    return (\n      <Modal\n        onCancel={() => {\n          setNewSessionModalVisible(false);\n        }}\n        title={\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <Square3Stack3DIcon className=\"h-5 w-5 inline-block mr-1\" />\n            New Session{\" \"}\n          </div>\n        }\n        open={newSessionModalVisible}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setNewSessionModalVisible(false);\n            }}\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!workflow}\n            onClick={() => {\n              setNewSessionModalVisible(false);\n              if (localSession) {\n                createSession(localSession);\n              }\n            }}\n          >\n            Create\n          </Button>,\n        ]}\n      >\n        <WorkflowSelector\n          workflow={workflow}\n          setWorkflow={setWorkflow}\n          disabled={sessionExists}\n        />\n        <div className=\"my-2 text-xs\"> Session Name </div>\n        <Input\n          placeholder=\"Session Name\"\n          value={localSession?.name || \"\"}\n          onChange={(event) => {\n            if (localSession) {\n              setLocalSession({ ...localSession, name: event.target.value });\n            }\n          }}\n        />\n        <div className=\"text-xs mt-4\">\n          {\" \"}\n          {timeAgo(localSession?.created_at || \"\", true)}\n        </div>\n      </Modal>\n    );\n  };\n\n  return (\n    <div className=\"  \">\n      <NewSessionModal session={selectedSession || sampleSession} />\n      <div className=\"mb-2 relative\">\n        <div className=\"\">\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <ChatBubbleLeftRightIcon className=\"h-5 w-5 inline-block mr-1\" />\n            Sessions{\" \"}\n          </div>\n          {sessions && sessions.length > 0 && (\n            <div className=\"text-xs  hidden mb-2 pb-1  \">\n              {\" \"}\n              Create a new session or select an existing session to view chat.\n            </div>\n          )}\n          <div\n            style={{\n              maxHeight: skillsMaxHeight,\n            }}\n            className=\"mb-4 overflow-y-auto scroll rounded relative \"\n          >\n            {sessionRows}\n            <LoadingOverlay loading={loading} />\n          </div>\n          {(!sessions || sessions.length == 0) && !loading && (\n            <div className=\"text-xs text-gray-500\">\n              No sessions found. Create a new session to get started.\n            </div>\n          )}\n        </div>\n        <div className=\"flex gap-x-2\">\n          <div className=\"flex-1\"></div>\n          <LaunchButton\n            className=\"text-sm p-2 px-3\"\n            onClick={() => {\n              setSelectedSession(sampleSession);\n              setNewSessionModalVisible(true);\n            }}\n          >\n            {\" \"}\n            <PlusIcon className=\"w-5 h-5 inline-block mr-1\" />\n            New\n          </LaunchButton>\n        </div>\n      </div>\n\n      {error && !error.status && (\n        <div className=\"p-2 border border-orange-500 text-secondary  rounded mt-4   text-sm\">\n          {\" \"}\n          <ExclamationTriangleIcon className=\"h-5 text-orange-500 inline-block mr-2\" />{\" \"}\n          {error.message}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SessionsView;\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport * as React from \"react\";\nimport SessionsView from \"./sessions\";\n\nconst SideBarView = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const minWidth = isOpen ? \"270px\" : \"50px\";\n\n  let windowHeight, sidebarMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    sidebarMaxHeight = windowHeight - 180 + \"px\";\n  }\n\n  return (\n    <div\n      style={{\n        minWidth: minWidth,\n        maxWidth: minWidth,\n        height: \"calc(100vh - 190px)\",\n      }}\n      className=\"    \"\n    >\n      <div className=\" transition overflow-hidden duration-300  flex flex-col   h-full p-2 overflow-y-scroll scroll rounded \">\n        <div className={`${isOpen ? \"\" : \"hidden\"}  `}>\n          {/* <AgentsView /> */}\n          {<SessionsView />}\n        </div>\n      </div>\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        role=\"button\"\n        className=\" hover:text-accent duration-150  \"\n      >\n        {isOpen ? (\n          <div className=\"mt-4  \">\n            {\" \"}\n            <ChevronLeftIcon className=\"w-6 h-6  inline-block    rounded\" />{\" \"}\n            <span className=\"text-xs \"> close sidebar</span>\n          </div>\n        ) : (\n          <ChevronRightIcon className=\"w-6 h-6   inline-block   font-bold rounded \" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBarView;\n","import * as React from \"react\";\nimport { IChatSession, IMessage, IStatus } from \"../../types\";\nimport { fetchJSON, getServerUrl, setLocalStorage } from \"../../utils\";\nimport ChatBox from \"./chatbox\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { message } from \"antd\";\nimport SideBarView from \"./sidebar\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport SessionsView from \"./sessions\";\n\nconst RAView = () => {\n  const session: IChatSession | null = useConfigStore((state) => state.session);\n  const [loading, setLoading] = React.useState(false);\n  const [messages, setMessages] = React.useState<IMessage[] | null>(null);\n\n  const [config, setConfig] = React.useState(null);\n\n  React.useEffect(() => {\n    setLocalStorage(\"ara_config\", config);\n  }, [config]);\n\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const fetchMessagesUrl = `${serverUrl}/sessions/${session?.id}/messages?user_id=${user?.email}`;\n\n  const fetchMessages = () => {\n    setError(null);\n    setLoading(true);\n    setMessages(null);\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        setMessages(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(fetchMessagesUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user && session) {\n      fetchMessages();\n    }\n  }, [session]);\n\n  return (\n    <div className=\"h-full   \">\n      <div className=\"flex h-full   \">\n        <div className=\"  mr-2  rounded\">\n          <SideBarView />\n        </div>\n        <div className=\" flex-1  \">\n          {!session && (\n            <div className=\" w-full  h-full flex items-center justify-center\">\n              <div className=\"w-2/3\" id=\"middle\">\n                <div className=\"w-full   text-center\">\n                  {\" \"}\n                  <img\n                    src=\"/images/svgs/welcome.svg\"\n                    alt=\"welcome\"\n                    className=\"text-accent inline-block object-cover w-56\"\n                  />\n                </div>\n                <SessionsView />\n              </div>\n            </div>\n          )}\n\n          {session !== null && (\n            <ChatBox initMessages={messages} session={session} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RAView;\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport RAView from \"../components/views/playground/ra\";\n\n// markup\nconst IndexPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Home\" link={\"/\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <RAView />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5 8.25 12l7.5-7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction Square3Stack3DIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.429 9.75 2.25 12l4.179 2.25m0-4.5 5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0 4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0-5.571 3-5.571-3\"\n  }));\n}\nconst ForwardRef = React.forwardRef(Square3Stack3DIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","_ref","workflow","setWorkflow","disabled","error","setError","React","status","message","loading","setLoading","workflows","setWorkflows","selectedWorkflow","setSelectedWorkflow","user","appContext","listWorkflowsUrl","getServerUrl","email","fetchJSON","method","headers","data","length","err","className","LoadingOverlay","Select","value","name","onChange","options","map","config","index","label","Link","to","serverUrl","listSessionUrl","createSessionUrl","sessions","useConfigStore","state","setSessions","sampleSession","user_id","Date","toLocaleString","month","day","hour","minute","hour12","selectedSession","setSelectedSession","session","setSession","newSessionModalVisible","setNewSessionModalVisible","fetchSessions","firstSession","sessionRows","isSelected","rowClass","items","onClick","console","log","deleteSessionUrl","payLoad","body","JSON","stringify","success","deleteSession","TrashIcon","role","key","PencilIcon","push","menu","Dropdown","trigger","placement","Square3Stack3DIcon","timeAgo","created_at","windowHeight","skillsMaxHeight","window","innerHeight","NewSessionModal","_ref2","localSession","setLocalSession","_objectSpread","workflow_id","sessionExists","undefined","Modal","onCancel","open","footer","Button","type","createSession","WorkflowSelector","Input","placeholder","event","target","ChatBubbleLeftRightIcon","style","maxHeight","LaunchButton","PlusIcon","ExclamationTriangleIcon","SideBarView","isOpen","setIsOpen","minWidth","sidebarMaxHeight","maxWidth","height","SessionsView","ChevronLeftIcon","ChevronRightIcon","RAView","messages","setMessages","setConfig","setLocalStorage","fetchMessagesUrl","src","alt","ChatBox","initMessages","Layout","meta","site","siteMetadata","link","ForwardRef"],"sourceRoot":""}