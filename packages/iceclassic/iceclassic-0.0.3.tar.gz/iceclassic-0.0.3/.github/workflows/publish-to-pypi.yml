name: Publish Python distribution to PyPI 
on:   
  push: 
    tags:
      - '*' 
jobs:
  build: 
    name: Build distribution 
    runs-on: ubuntu-latest 
  
    steps: 
    - name: Checkout code 
      uses: actions/checkout@v4 
        
    - name: Set up Python 
      uses: actions/setup-python@v5 
      with: 
        python-version: "3.x" 
      
    - name: Install dependencies 
      run: pip install hatchling 
      
    # - name: Set version from tag 
    #   run: |
    #     TAG_VERSION=${GITHUB_REF#refs/tags/} 
    #     sed -i "s/^version = .*/version = \"$TAG_VERSION\"/" pyproject.toml 
      
    - name: Build package 
      run: hatchling build 
        
    - name: Store the distribution packages 
      uses: actions/upload-artifact@v3 
      with: 
        name: python-package-distributions 
        path: dist/ 
    
    publish-to-pypi:     
      name: Publish Python distribution to PyPI 
      if: startsWith(github.ref, 'refs/tags/') 
      needs: build 
      runs-on: ubuntu-latest 
      steps: 
      - name: Download distribution packages 
        uses: actions/download-artifact@v3 
        with: 
          name: python-package-distributions 
          path: dist/
          
      - name: Publish distribution to PyPI 
        uses: pypa/gh-action-pypi-publish@release/v1 
        with: 
          password: ${{ secrets.PYPI_TOKEN }} 
    
    github-release: 
        name: Sign the Python distribution with Sigstore and upload to GitHub Release 
        needs: publish-to-pypi 
        runs-on: ubuntu-latest 
        permissions: 
          contents: write 
          id-token: write 
        steps: 
        - name: Download distribution packages 
          uses: actions/download-artifact@v3 
          with: 
            name: python-package-distributions 
            path: dist/ 
          
        - name: Sign the distributions with Sigstore 
          uses: sigstore/gh-action-sigstore-python@v2.1.1 
          with: 
            inputs: | 
              ./dist/*.tar.gz 
              ./dist/*.whl 
              
        - name: Create GitHub Release 
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
            run: |
                gh release create \ "${{ github.ref_name }}" \ --repo "${{ github.repository }}" \ 
                --notes ""
                
        - name: Upload artifact signatures to GitHub Release 
          env: 
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          run: |
              gh release upload \ "${{ github.ref_name }}" dist/** \ --repo "${{ github.repository }}"
