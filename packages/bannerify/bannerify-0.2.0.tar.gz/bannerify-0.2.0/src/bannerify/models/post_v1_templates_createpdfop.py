"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .errbadrequest import ErrBadRequestData
from .errfetchimageerror import ErrFetchImageErrorData
from .modification import Modification, ModificationTypedDict
from bannerify import utils
from bannerify.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class PostV1TemplatesCreatePdfRequestBodyTypedDict(TypedDict):
    api_key: str
    template_id: str
    r"""Your template ID"""
    modifications: NotRequired[List[ModificationTypedDict]]
    

class PostV1TemplatesCreatePdfRequestBody(BaseModel):
    api_key: Annotated[str, pydantic.Field(alias="apiKey")]
    template_id: Annotated[str, pydantic.Field(alias="templateId")]
    r"""Your template ID"""
    modifications: Optional[List[Modification]] = None
    

PostV1TemplatesCreatePdfResponseBodyUnion = Union[ErrBadRequestData, ErrFetchImageErrorData]
r"""The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."""


class PostV1TemplatesCreatePdfResponseBody(Exception):
    r"""The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."""
    data: PostV1TemplatesCreatePdfResponseBodyUnion

    def __init__(self, data: PostV1TemplatesCreatePdfResponseBodyUnion):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, PostV1TemplatesCreatePdfResponseBodyUnion)

