"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .errbadrequest import ErrBadRequestData
from .errfetchimageerror import ErrFetchImageErrorData
from bannerify import utils
from bannerify.types import BaseModel
from bannerify.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
import pydantic
from typing import Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class QueryParamFormat(str, Enum):
    PNG = "png"
    SVG = "svg"

class GetV1TemplatesSignedurlRequestTypedDict(TypedDict):
    template_id: str
    sign: str
    format: NotRequired[QueryParamFormat]
    nocache: NotRequired[str]
    debug: NotRequired[str]
    api_key_md5: NotRequired[str]
    api_key_hashed: NotRequired[str]
    modifications: NotRequired[str]
    

class GetV1TemplatesSignedurlRequest(BaseModel):
    template_id: Annotated[str, pydantic.Field(alias="templateId"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    sign: Annotated[str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    format: Annotated[Optional[QueryParamFormat], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = QueryParamFormat.PNG
    nocache: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    debug: Annotated[Optional[str], pydantic.Field(alias="_debug"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    api_key_md5: Annotated[Optional[str], pydantic.Field(alias="apiKeyMd5"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    api_key_hashed: Annotated[Optional[str], pydantic.Field(alias="apiKeyHashed"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    modifications: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    

GetV1TemplatesSignedurlResponseBodyUnion = Union[ErrBadRequestData, ErrFetchImageErrorData]
r"""The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."""


class GetV1TemplatesSignedurlResponseBody(Exception):
    r"""The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."""
    data: GetV1TemplatesSignedurlResponseBodyUnion

    def __init__(self, data: GetV1TemplatesSignedurlResponseBodyUnion):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetV1TemplatesSignedurlResponseBodyUnion)

