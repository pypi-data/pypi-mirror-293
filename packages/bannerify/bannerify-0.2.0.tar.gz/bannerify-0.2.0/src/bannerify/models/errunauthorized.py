"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from bannerify import utils
from bannerify.types import BaseModel
from enum import Enum
import pydantic
from typing import TypedDict
from typing_extensions import Annotated


class ErrUnauthorizedCode(str, Enum):
    r"""A machine readable error code."""
    UNAUTHORIZED = "UNAUTHORIZED"

class ErrUnauthorizedErrorTypedDict(TypedDict):
    code: ErrUnauthorizedCode
    r"""A machine readable error code."""
    docs: str
    r"""A link to our documentation with more details about this error code"""
    message: str
    r"""A human readable explanation of what went wrong"""
    request_id: str
    r"""Please always include the requestId in your error report"""
    

class ErrUnauthorizedError(BaseModel):
    code: ErrUnauthorizedCode
    r"""A machine readable error code."""
    docs: str
    r"""A link to our documentation with more details about this error code"""
    message: str
    r"""A human readable explanation of what went wrong"""
    request_id: Annotated[str, pydantic.Field(alias="requestId")]
    r"""Please always include the requestId in your error report"""
    
class ErrUnauthorizedData(BaseModel):
    error: ErrUnauthorizedError
    


class ErrUnauthorized(Exception):
    r"""Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."""
    data: ErrUnauthorizedData

    def __init__(self, data: ErrUnauthorizedData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, ErrUnauthorizedData)

