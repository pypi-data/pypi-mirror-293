from tasks.utils import check_root, display_loading_screen, clean_report # OK
from tasks.session_management import init_sessions # OK
from tasks.target_info import get_target_info # OK
from tasks.task_execution import init_tree, task, command, output, analyse, update_tree
from tasks.report_creation import finish, final_report, save_artifact, log_analyse
import sys

def start():
    try:
        #check_root()
        display_loading_screen()
        clean_report()
        reasoning_session, generation_session, parsing_session, final_session, util_session = init_sessions()
        target_info = get_target_info()
        task_tree = init_tree(reasoning_session, target_info)
        print(task_tree)
        cmd_output = ""
        while True:
            print("Task selected :")
            task_selected = task(reasoning_session, task_tree, target_info)
            print(task_selected)
            if not task_selected:
                break

            print("Command :")
            cmd = command(generation_session, parsing_session, task_selected, target_info, cmd_output)
            print(cmd)
            #input(Fore.YELLOW + "Entrer cette commande ?")
            print("Command output:")
            cmd, cmd_output, task_tree = output(cmd, reasoning_session, generation_session,parsing_session, target_info, task_tree, task_selected)
            base_cmd = cmd.split()[0]
            print("Analyse")
            analyse_output = analyse(parsing_session, cmd_output)
            print("Analyse output:")
            print(analyse_output)
            save_artifact(base_cmd, analyse_output, cmd_output)
            log_analyse(cmd, analyse_output)
            print("Update_tree")
            task_tree = update_tree(reasoning_session, target_info, task_tree, cmd_output)
            print(task_tree)
            finish(util_session,final_session, task_tree)
            
    except KeyboardInterrupt:
        print("\nProgramme interrompu (Ctrl+C).")
        print("Cr√©ation du final report.")
        final_report(final_session)
        sys.exit(0)

