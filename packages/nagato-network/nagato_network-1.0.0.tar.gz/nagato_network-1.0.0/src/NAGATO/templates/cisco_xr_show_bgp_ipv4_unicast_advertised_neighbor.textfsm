Value NETWORK (\d+.\d+.\d+.\d+/\d+)
Value ADVERTISED_TO (\d+.\d+.\d+.\d+)
Value NEIGHBOR_IP (\d+.\d+.\d+.\d+)
Value INBOUND_NEXT_HOP (\d+.\d+.\d+.\d+)
Value INBOUND_ORIGIN (\S+)
Value INBOUND_NEIGHBOR_AS (\d+)
Value INBOUND_LOCAL_PREF (\d+)
Value INBOUND_AS_PATH (\d+(\s\d+)*)
Value INBOUND_METRIC (\d+)
Value INBOUND_COMMUNITY (\d+:\d+)
Value OUTBOUND_NEXT_HOP (\d+.\d+.\d+.\d+)
Value OUTBOUND_ORIGIN (\S+)
Value OUTBOUND_NEIGHBOR_AS (\d+)
Value OUTBOUND_LOCAL_PREF (\d+)
Value OUTBOUND_AS_PATH (\d+(\s\d+)*)
Value OUTBOUND_METRIC (\d+)
Value OUTBOUND_COMMUNITY (\d+:\d+)


Start
  ^${NETWORK}\s+is advertised to\s+${ADVERTISED_TO}
  ^\s+Path info:
  ^\s+neighbor: ${NEIGHBOR_IP}\s+neighbor router id: \d+.\d+.\d+.\d+
  ^Received Path ID \d+, Local Path ID \d+, version \d+
  ^\s+Attributes after inbound policy was applied: -> InboundPolicy

InboundPolicy
  ^\s+next hop: ${INBOUND_NEXT_HOP}
  ^\s+origin: ${INBOUND_ORIGIN}  neighbor as: ${INBOUND_NEIGHBOR_AS}(  local pref: ${INBOUND_LOCAL_PREF})?(  metric: ${INBOUND_METRIC})?
  ^\s+aspath: ${INBOUND_AS_PATH}
  ^\s+community: ${INBOUND_COMMUNITY}
  ^\s+Attributes after outbound policy was applied: -> OutboundPolicy

OutboundPolicy
  ^\s+next hop: ${OUTBOUND_NEXT_HOP}
  ^\s+origin: ${OUTBOUND_ORIGIN}  neighbor as: ${OUTBOUND_NEIGHBOR_AS}(  local pref: ${OUTBOUND_LOCAL_PREF})?(  metric: ${OUTBOUND_METRIC})?
  ^\s+aspath: ${OUTBOUND_AS_PATH}
  ^\s+community: ${OUTBOUND_COMMUNITY}
  ^\s*$$ -> Record Start
