name: Publish to TestPyPI or PyPI
on: push
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install pypa/build
        run: python3 -m pip install --upgrade build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/pylogserver-aquanjsw
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
  github-release:
    name: Sign and create a GitHub release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Sign with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            dist/*.whl
            dist/*.tar.gz
      - name: Create a release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ''
      - name: Upload artifact signatures to Github Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ github.ref_name }}'
          dist/**
          --repo '${{ github.repository }}'
  # publich-to-testpypi:
  #   name: Publish to TestPyPI
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/project/pylogserver-aquanjsw
  #   permissions:
  #     id-token: write
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist
  #         path: dist/
  #     - name: Publish
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
