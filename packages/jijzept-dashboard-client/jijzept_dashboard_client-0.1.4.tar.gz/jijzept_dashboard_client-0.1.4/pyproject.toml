[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "jijzept_dashboard_client"
version = "0.1.4"
description = ""
authors = ["Jij Inc."]
license = "LICENSE.txt"
readme = "PyPI.md"

[tool.poetry.dependencies]
python = ">=3.9"
jijmodeling = "^1.4.1"
pydantic = "^2.6.4"
requests = "^2.32.2"
protobuf = "^5.26.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-clarity = "^1.0.1"
pytest-spec = "^3.2.0"
pytest-github-actions-annotate-failures = "^0.2.0"
pytest-snapshot = "^0.9.0"
freezegun = "^1.5.1"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.4.4"

[tool.pytest.ini_options]
addopts = "-vv --doctest-modules --cov=jijzept_dashboard_client --cov-context=test --cov-report=term"
testpaths = ["tests"]
console_output_style = "count"
log_auto_indent = true

[tool.coverage.run]
branch = true
source = ["jijzept_dashboard_client"]
omit = ["jijzept_dashboard_client/_version.py"]

[tool.coverage.report]
show_missing = true
skip_covered = false
skip_empty = false
sort= "Name"

[tool.coverage.json]
show_contexts = true
pretty_print = true

[tool.coverage.lcov]

[tool.ruff]
target-version="py39"
line-length = 79
indent-width = 4
fix = true

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "I",
    "Q",
    "PL",
    "PERF",
    "RUF"
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.poetry-dynamic-versioning]
enable = false
