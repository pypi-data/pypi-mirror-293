(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[4621,5606],{44621:(e,t,n)=>{"use strict";n.r(t);n.d(t,{default:()=>h});class s{constructor(e){this.client=e}async create({file:e,purpose:t="fine-tune"}){const n=new FormData;n.append("file",e);n.append("purpose",t);const s=await this.client._request("post","v1/files",null,undefined,n);return s}async retrieve({fileId:e}){const t=await this.client._request("get",`v1/files/${e}`);return t}async list(){const e=await this.client._request("get","v1/files");return e}async delete({fileId:e}){const t=await this.client._request("delete",`v1/files/${e}`);return t}}const i=s;class r{constructor(e){this.client=e}async create({model:e,trainingFiles:t,validationFiles:n=[],hyperparameters:s={training_steps:1800,learning_rate:1e-4},suffix:i=null,integrations:r=null}){const o=await this.client._request("post","v1/fine_tuning/jobs",{model:e,training_files:t,validation_files:n,hyperparameters:s,suffix:i,integrations:r});return o}async retrieve({jobId:e}){const t=await this.client._request("get",`v1/fine_tuning/jobs/${e}`,{});return t}async list(){const e=await this.client._request("get","v1/fine_tuning/jobs",{});return e}async cancel({jobId:e}){const t=await this.client._request("post",`v1/fine_tuning/jobs/${e}/cancel`,{});return t}}const o=r;var a=n(65606);const u="0.5.0";const c=[429,500,502,503,504];const l="https://api.mistral.ai";const f=Promise.resolve(globalThis.fetch??n.e(3092).then(n.t.bind(n,43092,23)).then((e=>e.default)));class d extends Error{constructor(e){super(e);this.name="MistralAPIError"}}function m(e){const t=new AbortController;e.forEach((e=>{if(!e){return}e.addEventListener("abort",(()=>{t.abort(e.reason)}),{once:true});if(e.aborted){t.abort(e.reason)}}));return t.signal}class p{constructor(e=a.env.MISTRAL_API_KEY,t=l,n=5,s=120){this.endpoint=t;this.apiKey=e;this.maxRetries=n;this.timeout=s;if(this.endpoint.indexOf("inference.azure.com")){this.modelDefault="mistral"}this.files=new i(this);this.jobs=new o(this)}async _fetch(...e){const t=await f;return t(...e)}_request=async function(e,t,n,s,i=null){const r=`${this.endpoint}/${t}`;const o={method:e,headers:{"User-Agent":`mistral-client-js/${u}`,Accept:n?.stream?"text/event-stream":"application/json","Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},signal:m([AbortSignal.timeout(this.timeout*1e3),s]),body:e!=="get"?i??JSON.stringify(n):null,timeout:this.timeout*1e3};if(i){delete o.headers["Content-Type"]}for(let u=0;u<this.maxRetries;u++){try{const e=await this._fetch(r,o);if(e.ok){if(n?.stream){if(typeof e.body.getReader==="undefined"){return e.body}else{const t=e.body.getReader();const n=async function*(){try{while(true){const{done:e,value:n}=await t.read();if(e)return;yield n}}finally{t.releaseLock()}};return n()}}return await e.json()}else if(c.includes(e.status)){console.debug(`Retrying request on response status: ${e.status}`,`Response: ${await e.text()}`,`Attempt: ${u+1}`);await new Promise((e=>setTimeout(e,Math.pow(2,u+1)*500)))}else{throw new d(`HTTP error! status: ${e.status} `+`Response: \n${await e.text()}`)}}catch(a){console.error(`Request failed: ${a.message}`);if(a.name==="MistralAPIError"){throw a}if(u===this.maxRetries-1)throw a;await new Promise((e=>setTimeout(e,Math.pow(2,u+1)*500)))}}throw new Error("Max retries reached")};_makeChatCompletionRequest=function(e,t,n,s,i,r,o,a,u,c,l,f){if(!e&&!this.modelDefault){throw new d("You must provide a model name")}return{model:e??this.modelDefault,messages:t,tools:n??undefined,temperature:s??undefined,max_tokens:i??undefined,top_p:r??undefined,random_seed:o??undefined,stream:a??undefined,safe_prompt:(u||c)??undefined,tool_choice:l??undefined,response_format:f??undefined}};_makeCompletionRequest=function(e,t,n,s,i,r,o,a,u){if(!e&&!this.modelDefault){throw new d("You must provide a model name")}return{model:e??this.modelDefault,prompt:t,suffix:n??undefined,temperature:s??undefined,max_tokens:i??undefined,top_p:r??undefined,random_seed:o??undefined,stop:a??undefined,stream:u??undefined}};listModels=async function(){const e=await this._request("get","v1/models");return e};chat=async function({model:e,messages:t,tools:n,temperature:s,maxTokens:i,topP:r,randomSeed:o,safeMode:a,safePrompt:u,toolChoice:c,responseFormat:l},{signal:f}={}){const d=this._makeChatCompletionRequest(e,t,n,s,i,r,o,false,a,u,c,l);const m=await this._request("post","v1/chat/completions",d,f);return m};chatStream=async function*({model:e,messages:t,tools:n,temperature:s,maxTokens:i,topP:r,randomSeed:o,safeMode:a,safePrompt:u,toolChoice:c,responseFormat:l},{signal:f}={}){const d=this._makeChatCompletionRequest(e,t,n,s,i,r,o,true,a,u,c,l);const m=await this._request("post","v1/chat/completions",d,f);let p="";const h=new TextDecoder;for await(const w of m){p+=h.decode(w,{stream:true});let e;while((e=p.indexOf("\n"))!==-1){const t=p.substring(0,e);p=p.substring(e+1);if(t.startsWith("data:")){const e=t.substring(6).trim();if(e!=="[DONE]"){yield JSON.parse(e)}}}}};embeddings=async function({model:e,input:t}){const n={model:e,input:t};const s=await this._request("post","v1/embeddings",n);return s};completion=async function({model:e,prompt:t,suffix:n,temperature:s,maxTokens:i,topP:r,randomSeed:o,stop:a},{signal:u}={}){const c=this._makeCompletionRequest(e,t,n,s,i,r,o,a,false);const l=await this._request("post","v1/fim/completions",c,u);return l};completionStream=async function*({model:e,prompt:t,suffix:n,temperature:s,maxTokens:i,topP:r,randomSeed:o,stop:a},{signal:u}={}){const c=this._makeCompletionRequest(e,t,n,s,i,r,o,a,true);const l=await this._request("post","v1/fim/completions",c,u);let f="";const d=new TextDecoder;for await(const m of l){f+=d.decode(m,{stream:true});let e;while((e=f.indexOf("\n"))!==-1){const t=f.substring(0,e);f=f.substring(e+1);if(t.startsWith("data:")){const e=t.substring(6).trim();if(e!=="[DONE]"){yield JSON.parse(e)}}}}}}const h=p},65606:e=>{var t=e.exports={};var n;var s;function i(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}(function(){try{if(typeof setTimeout==="function"){n=setTimeout}else{n=i}}catch(e){n=i}try{if(typeof clearTimeout==="function"){s=clearTimeout}else{s=r}}catch(e){s=r}})();function o(e){if(n===setTimeout){return setTimeout(e,0)}if((n===i||!n)&&setTimeout){n=setTimeout;return setTimeout(e,0)}try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}function a(e){if(s===clearTimeout){return clearTimeout(e)}if((s===r||!s)&&clearTimeout){s=clearTimeout;return clearTimeout(e)}try{return s(e)}catch(t){try{return s.call(null,e)}catch(t){return s.call(this,e)}}}var u=[];var c=false;var l;var f=-1;function d(){if(!c||!l){return}c=false;if(l.length){u=l.concat(u)}else{f=-1}if(u.length){m()}}function m(){if(c){return}var e=o(d);c=true;var t=u.length;while(t){l=u;u=[];while(++f<t){if(l){l[f].run()}}f=-1;t=u.length}l=null;c=false;a(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var n=1;n<arguments.length;n++){t[n-1]=arguments[n]}}u.push(new p(e,t));if(u.length===1&&!c){o(m)}};function p(e,t){this.fun=e;this.array=t}p.prototype.run=function(){this.fun.apply(null,this.array)};t.title="browser";t.browser=true;t.env={};t.argv=[];t.version="";t.versions={};function h(){}t.on=h;t.addListener=h;t.once=h;t.off=h;t.removeListener=h;t.removeAllListeners=h;t.emit=h;t.prependListener=h;t.prependOnceListener=h;t.listeners=function(e){return[]};t.binding=function(e){throw new Error("process.binding is not supported")};t.cwd=function(){return"/"};t.chdir=function(e){throw new Error("process.chdir is not supported")};t.umask=function(){return 0}}}]);