# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: yosafe_subpackage_2_workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install Poetry
      run: |
        python -m pip install --user pipx
        python -m pipx ensurepath
        pipx install poetry
        poetry config virtualenvs.in-project true

    - name: Cache dependencies
      uses: actions/cache@v4
      id: cache
      with:
        path: ./.venv
        key: venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install Poetry dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        poetry lock
        poetry install


    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pip list
        poetry run pytest -s

