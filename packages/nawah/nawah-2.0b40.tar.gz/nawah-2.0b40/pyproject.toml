[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "nawah"
authors = [
    {name = "Mahmoud Abduljawad", email = "me@mahmoudajawad.com"},
]
description = "Nawah--Rapid, cloud-native app development framework"
requires-python = ">=3.12"
keywords = [
  "development",
  "framework",
  "cloud-native",
  "test-driven development",
  "domain-driven design",
  "behavior-driven development",
  "event-driven architecture",
  "platform",
]
license = {text = "AGPLv3"}
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Operating System :: OS Independent",
  "Topic :: Internet :: WWW/HTTP",
  "Framework :: AsyncIO",
]
dependencies = [
  "aiohttp==3.8.3",
  "aiodns==3.0.0",
  "motor==3.1.1",
  "passlib==1.7.4",
  "Pillow==9.3.0",
  "PyJWT==2.6.0",
  "pymongo==4.3.2",
  "requests==2.28.1",
  "requests-toolbelt==0.10.1",
  "hiredis==2.4.0",
  "redis==4.3.4",
  "sentry-sdk==1.10.1",
  "click==8.1.3",
]
dynamic = ["version", "readme"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
nawah = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "nawah.__version__"}
readme = {file = ["README.md"]}

[project.optional-dependencies]
dev = [
  "build>=1.2.0",
  "mock>=4.0.3",
  "codecov>=2.1.12",
  "mypy>=0.990",
  "black>=22.10.0",
  "pylint>=2.15.5",
  "pytest>=7.2.0",
  "pytest-asyncio>=0.20.1",
  "pytest-mock>=3.10.0",
  "pytest-cov>=4.0.0",
  "python-lsp-server>=1.6.0",
  "pylsp-mypy>=0.6.3",
  "python-lsp-black>=1.2.1",
  "setuptools>=74.0.0",
  "setuptools-scm>=8.1.0",
  "wheel>=0.38.2",
  "twine>=4.0.1",
  "types-redis>=4.3.21.3",
  "types-requests>=2.28.11.2",
  "types-mock>=4.0.15.2",
]

[tool.black]
preview = true

# REF: https://stackoverflow.com/a/50156706
[tool.pytest.ini_options]
pythonpath = [
  "src"
]

[tool.pylint.basic]
# Allow shorter and longer variable names than the default.
argument-rgx = "[a-z_][a-z0-9_]*$"
attr-rgx = "[a-z_][a-z0-9_]*$"
variable-rgx = "[a-z_][a-z0-9_]*$"

[[tool.mypy.overrides]]
module = [
    "setuptools",
    "bson",
    "pymongo",
    "pymongo.errors",
    "motor.motor_asyncio",
    "redis",
    "redis.asyncio",
    "redis.commands.json.JSON",
    "redis.commands.search.field",
    "redis.commands.search.indexDefinition",
    "passlib.hash",
    "PIL",
    "requests_toolbelt.multipart",
]
ignore_missing_imports = true
