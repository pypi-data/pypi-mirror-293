# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 15 * * 4'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
        fail-fast: [false]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop,cache]
    - name: Run precommit hooks & linting
      if: matrix.python-version == '3.9'
      run: |
        python -m pip install --upgrade pre-commit
        pre-commit run --all-files
    - name: Test with pytest when internal PR
      if: ${{ github.event.pull_request.head.repo.full_name == 'fluves/pywaterinfo' }}
      env:
        HIC_TOKEN: ${{ secrets.HIC_TOKEN }}
        VMM_TOKEN: ${{ secrets.VMM_TOKEN }}
      run: |
        pytest
    - name: Test with pytest when fork PR
      if: ${{ github.event.pull_request.head.repo.full_name != 'fluves/pywaterinfo' }}
      run: |
        pytest -m 'not notoken'
    - name: Test with tox when internal PR
      if: ${{ github.event.pull_request.head.repo.full_name == 'fluves/pywaterinfo' }}
      env:
        HIC_TOKEN: ${{ secrets.HIC_TOKEN }}
        VMM_TOKEN: ${{ secrets.VMM_TOKEN }}
      run: |
        tox
    - name: Test doctests
      run: |
        tox -e doctests
    - name: Build documentation
      run: |
        tox -e docs
    - name: Test package build
      run: |
        tox -e build
