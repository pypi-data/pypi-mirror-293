[project]
name = "pixelart-tracker"
version = "0.1.4"
description = "Show YouTube subscribers and Crypto-currency tracking on an iDotMatrix 32x32 pixels screen"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
keywords = ["idotmatrix", "bluetooth", "nesitor", "youtube", "subscribers", "statistics"]
authors = [
  {name = "Andres D. Molins", email = "amolinsdiaz@yahoo.es" }
]
maintainers = [
  {name = "Andres D. Molins", email = "amolinsdiaz@yahoo.es" }
]
dependencies = [
  "aiohttp~=3.9",
  "argparse",
  "asyncio",
  "idotmatrix==0.0.4",
  "pydantic[dotenv]~=1.10.13",
  "pillow~=10.3",
  "colorlog~=6.8"
]

[project.urls]
"Homepage" = "https://andresmolins.dev"
"Source" = "https://github.com/nesitor/pixelart-tracker"

[project.scripts]
pix-track = "pixeltracker.app:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/pixeltracker", "resources/"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
platforms = ["linux"]
dependencies = []

[tool.hatch.envs.default.scripts]
cli = "pix-track {args:--help}"

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black==24.1.1",
  "mypy==1.8.0",
  "ruff==0.1.15",
  "isort==5.13.2",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy {args:src/aleph/vm/ tests/ examples/example_fastapi runtimes/aleph-debian-12-python}"
style = [
  #  "ruff {args:.}",
  "black --check --diff {args:.}",
  "isort --check-only --profile black {args:.}",
]
fmt = [
  "black {args:.}",
  #  "ruff --fix {args:.}",
  "isort --profile black {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = [
  "tests"
]

[tool.black]
target-version = ["py39"]
line-length = 120
#skip-string-normalization = true

[tool.mypy]
python_version = "3.9"
install_types = true
non_interactive = true
ignore_missing_imports = true
explicit_package_bases = true
check_untyped_defs = true

[tool.ruff]
target-version = "py39"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  #  # Allow non-abstract empty methods in abstract base classes
  #  "B027",
  #  # Allow boolean positional values in function calls, like `dict.get(... True)`
  #  "FBT003",
  #  # Ignore checks for possible passwords
  #  "S105", "S106", "S107",
  #  # Ignore complexity
  #  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Allow the use of assert statements
  "S101"
]
#unfixable = [
#  # Don't touch unused imports
#  "F401",
#]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
