on:
  push:
    branches:
      - release
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      # - run: cat package.json
      # - run: 'echo '''' > "package.json"'
      - run: npx npm-check-updates -u
      - run: cat package.json
      - run: |
          result=$(git ls-files -m)
          if [ -z "${result}" ]; then
              echo "Passed npm-check-updates."
          else
              echo "Failed npm-check-updates due to ${result}."
              cat package.json
              exit 1
          fi
      - run: npm install
      - run: npm ci
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build:
    name: Build distribution 📦
    needs:
      - release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'release'
      - run: |
          git branch
          git pull
          git tag --points-at HEAD
          git describe --tags --abbrev=0
          git describe --tags
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install pypa/build
        run: |
          python3 -m pip install build
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/


  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    # environment:
    #   name: pypi
    #   url: https://pypi.org/p/crypto-chassis-trade  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
